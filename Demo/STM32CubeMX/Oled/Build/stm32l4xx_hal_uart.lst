ARM GAS  /tmp/cc9Y1vpF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32l4xx_hal_uart.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	UART_EndTxTransfer:
  27              	.LFB181:
  28              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * Copyright (c) 2017 STMicroelectronics.
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 2


  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ==================================
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
ARM GAS  /tmp/cc9Y1vpF.s 			page 3


  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and the Callback ID.
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
ARM GAS  /tmp/cc9Y1vpF.s 			page 4


 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     or HAL_UART_Init() function.
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_OVER8 | USART_CR1_FIFOEN)) /*!< UART or USART CR1 f
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_OVER8)) /*!< UART or USART CR1 fields of parameters
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT | USART_CR
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_RXFTCFG)) /*!< UART or USART CR3 fields of paramete
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE |\
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                             USART_CR3_ONEBIT)) /*!< UART or USART CR3 fields of parameters set by U
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
ARM GAS  /tmp/cc9Y1vpF.s 			page 5


 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_variables
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
ARM GAS  /tmp/cc9Y1vpF.s 			page 6


 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
ARM GAS  /tmp/cc9Y1vpF.s 			page 7


 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
ARM GAS  /tmp/cc9Y1vpF.s 			page 8


 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  /tmp/cc9Y1vpF.s 			page 9


 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
ARM GAS  /tmp/cc9Y1vpF.s 			page 10


 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
ARM GAS  /tmp/cc9Y1vpF.s 			page 11


 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc9Y1vpF.s 			page 12


 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
ARM GAS  /tmp/cc9Y1vpF.s 			page 13


 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 14


 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
ARM GAS  /tmp/cc9Y1vpF.s 			page 15


 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
ARM GAS  /tmp/cc9Y1vpF.s 			page 16


 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/cc9Y1vpF.s 			page 17


 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
ARM GAS  /tmp/cc9Y1vpF.s 			page 18


 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart     Uart handle
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc9Y1vpF.s 			page 19


1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart     Uart handle
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
ARM GAS  /tmp/cc9Y1vpF.s 			page 20


1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         reception services:
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
ARM GAS  /tmp/cc9Y1vpF.s 			page 21


1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            in Interrupt mode reception .
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            user callback is executed.
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const uint16_t *pdata16bits;
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 22


1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
ARM GAS  /tmp/cc9Y1vpF.s 			page 23


1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
ARM GAS  /tmp/cc9Y1vpF.s 			page 24


1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/cc9Y1vpF.s 			page 25


1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc9Y1vpF.s 			page 26


1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
ARM GAS  /tmp/cc9Y1vpF.s 			page 27


1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
ARM GAS  /tmp/cc9Y1vpF.s 			page 28


1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/cc9Y1vpF.s 			page 29


1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 30


1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
ARM GAS  /tmp/cc9Y1vpF.s 			page 31


1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 32


1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc9Y1vpF.s 			page 33


1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
ARM GAS  /tmp/cc9Y1vpF.s 			page 34


1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
ARM GAS  /tmp/cc9Y1vpF.s 			page 35


1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
ARM GAS  /tmp/cc9Y1vpF.s 			page 36


1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEI
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
ARM GAS  /tmp/cc9Y1vpF.s 			page 37


2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
ARM GAS  /tmp/cc9Y1vpF.s 			page 38


2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc9Y1vpF.s 			page 39


2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 40


2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 41


2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
ARM GAS  /tmp/cc9Y1vpF.s 			page 42


2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorcode;
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
ARM GAS  /tmp/cc9Y1vpF.s 			page 43


2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
ARM GAS  /tmp/cc9Y1vpF.s 			page 44


2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - Receiver Timeout error in Reception
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - Overrun error in Reception
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - any error occurs in DMA mode reception
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       */
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Abort the UART DMA Rx channel if enabled */
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable the UART DMA Rx request if enabled */
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/cc9Y1vpF.s 			page 45


2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check current reception Mode :
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* DMA mode enabled */
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          (DMA cplt callback will be called).
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Reception is not complete */
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_CLR(huart->hdmarx->Instance->CCR, DMA_CCR_CIRC))
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the UART CR3 register */
ARM GAS  /tmp/cc9Y1vpF.s 			page 46


2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* DMA mode not enabled */
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (nb_rx_data > 0U))
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO T
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Clear RxISR function pointer */
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = NULL;
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
ARM GAS  /tmp/cc9Y1vpF.s 			page 47


2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/cc9Y1vpF.s 			page 48


2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc9Y1vpF.s 			page 49


2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART error callback.
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc9Y1vpF.s 			page 50


2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(Size);
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
ARM GAS  /tmp/cc9Y1vpF.s 			page 51


2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Locked */
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
ARM GAS  /tmp/cc9Y1vpF.s 			page 52


2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Locked */
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc9Y1vpF.s 			page 53


2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 54


2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TE);
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RE);
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/cc9Y1vpF.s 			page 55


3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1;
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp2;
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval UART Error Code
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc9Y1vpF.s 			page 56


3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval none
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp;
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv;
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t pclk;
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
ARM GAS  /tmp/cc9Y1vpF.s 			page 57


3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
ARM GAS  /tmp/cc9Y1vpF.s 			page 58


3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = 0U;
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If proper clock source reported */
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Compute clock after Prescaler */
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* No Prescaler applicable */
3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((pclk < (3U * huart->Init.BaudRate)) ||
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
ARM GAS  /tmp/cc9Y1vpF.s 			page 59


3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate));
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } /* if ( (pclk < (3 * huart->Init.BaudRate) ) || (pclk > (4096 * huart->Init.BaudRate) )) */
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (pclk != 0) */
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = 0U;
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
3326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
ARM GAS  /tmp/cc9Y1vpF.s 			page 60


3337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
3342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = 0U;
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
3371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)usartdiv;
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
ARM GAS  /tmp/cc9Y1vpF.s 			page 61


3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc9Y1vpF.s 			page 62


3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout management */
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
ARM GAS  /tmp/cc9Y1vpF.s 			page 63


3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                  until a flag is no longer in the specified status.
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Status    The actual Flag status (SET or RESET)
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            interrupts for the interrupt process */
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
3542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                                 USART_CR1_TXEIE_TXFNFIE));
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE
3545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              interrupts for the interrupt process */
ARM GAS  /tmp/cc9Y1vpF.s 			page 64


3565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
3567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                                   USART_CR1_TXEIE_TXFNFIE));
3568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXE
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Process Unlocked */
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
3581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferSize  = Size;
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = Size;
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR       = NULL;
3605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure Rx interrupt processing */
3617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
3618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/cc9Y1vpF.s 			page 65


3622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT_FIFOEN;
3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT_FIFOEN;
3627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
3630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
3632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
3633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
3637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
3644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
3648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
3651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
3654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
3656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
3660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the Rx ISR function pointer according to the data word length */
3664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = UART_RxISR_16BIT;
3667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = UART_RxISR_8BIT;
3671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
3677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
ARM GAS  /tmp/cc9Y1vpF.s 			page 66


3679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
3683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
3702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferSize = Size;
3703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
3711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
3714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
3716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
3717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
3719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
3720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA channel */
3722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
3723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set error code to DMA */
3725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
3726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
3728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to ready */
3730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
3733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/cc9Y1vpF.s 			page 67


3736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
3739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   in the UART CR3 register */
3748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  29              		.loc 1 3760 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36              	.LBB409:
3761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  37              		.loc 1 3767 0 discriminator 1
  38 0000 0268     		ldr	r2, [r0]
  39              	.LVL1:
  40              	.LBB410:
  41              	.LBB411:
  42              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cc9Y1vpF.s 			page 68


  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
ARM GAS  /tmp/cc9Y1vpF.s 			page 69


  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
ARM GAS  /tmp/cc9Y1vpF.s 			page 70


 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
ARM GAS  /tmp/cc9Y1vpF.s 			page 71


 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc9Y1vpF.s 			page 72


 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
ARM GAS  /tmp/cc9Y1vpF.s 			page 73


 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
ARM GAS  /tmp/cc9Y1vpF.s 			page 74


 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
ARM GAS  /tmp/cc9Y1vpF.s 			page 75


 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 76


 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
ARM GAS  /tmp/cc9Y1vpF.s 			page 77


 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
ARM GAS  /tmp/cc9Y1vpF.s 			page 78


 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
ARM GAS  /tmp/cc9Y1vpF.s 			page 79


 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc9Y1vpF.s 			page 80


 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/cc9Y1vpF.s 			page 81


 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 82


 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
ARM GAS  /tmp/cc9Y1vpF.s 			page 83


 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc9Y1vpF.s 			page 84


 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc9Y1vpF.s 			page 85


 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
ARM GAS  /tmp/cc9Y1vpF.s 			page 86


1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc9Y1vpF.s 			page 87


1095:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1096:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1097:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1107:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1131:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1139:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1141:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1143:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
ARM GAS  /tmp/cc9Y1vpF.s 			page 88


1152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1153:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  43              		.loc 2 1155 0 discriminator 1
  44              		.syntax unified
  45              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  46 0002 52E8003F 		ldrex r3, [r2]
  47              	@ 0 "" 2
  48              	.LVL2:
  49              		.thumb
  50              		.syntax unified
  51              	.LBE411:
  52              	.LBE410:
  53              		.loc 1 3767 0 discriminator 1
  54 0006 23F0C003 		bic	r3, r3, #192
  55              	.LVL3:
  56              	.LBB412:
  57              	.LBB413:
1156:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1170:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1174:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1177:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1187:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1188:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 89


1194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1204:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  58              		.loc 2 1206 0 discriminator 1
  59              		.syntax unified
  60              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  61 000a 42E80031 		strex r1, r3, [r2]
  62              	@ 0 "" 2
  63              	.LVL4:
  64              		.thumb
  65              		.syntax unified
  66              	.LBE413:
  67              	.LBE412:
  68              		.loc 1 3767 0 discriminator 1
  69 000e 0029     		cmp	r1, #0
  70 0010 F6D1     		bne	.L2
  71              	.LBE409:
3768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  72              		.loc 1 3771 0
  73 0012 2023     		movs	r3, #32
  74              	.LVL5:
  75 0014 8367     		str	r3, [r0, #120]
  76 0016 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE181:
  80              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  81              		.align	2
  82              		.thumb
  83              		.thumb_func
  85              	UART_EndRxTransfer:
  86              	.LFB182:
3772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  87              		.loc 1 3781 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 90


  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL6:
  93              	.L4:
  94              	.LBB414:
3782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  95              		.loc 1 3787 0 discriminator 1
  96 0000 0268     		ldr	r2, [r0]
  97              	.LVL7:
  98              	.LBB415:
  99              	.LBB416:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 100              		.loc 2 1155 0 discriminator 1
 101              		.syntax unified
 102              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 103 0002 52E8003F 		ldrex r3, [r2]
 104              	@ 0 "" 2
 105              	.LVL8:
 106              		.thumb
 107              		.syntax unified
 108              	.LBE416:
 109              	.LBE415:
 110              		.loc 1 3787 0 discriminator 1
 111 0006 23F49073 		bic	r3, r3, #288
 112              	.LVL9:
 113              	.LBB417:
 114              	.LBB418:
 115              		.loc 2 1206 0 discriminator 1
 116              		.syntax unified
 117              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 118 000a 42E80031 		strex r1, r3, [r2]
 119              	@ 0 "" 2
 120              	.LVL10:
 121              		.thumb
 122              		.syntax unified
 123              	.LBE418:
 124              	.LBE417:
 125              		.loc 1 3787 0 discriminator 1
 126 000e 0029     		cmp	r1, #0
 127 0010 F6D1     		bne	.L4
 128              	.LVL11:
 129              	.L5:
 130              	.LBE414:
 131              	.LBB419:
3788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 132              		.loc 1 3788 0 discriminator 1
 133 0012 0268     		ldr	r2, [r0]
 134              	.LVL12:
 135              	.LBB420:
 136              	.LBB421:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 137              		.loc 2 1155 0 discriminator 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 91


 138 0014 02F10803 		add	r3, r2, #8
 139              	.LVL13:
 140              		.syntax unified
 141              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 142 0018 53E8003F 		ldrex r3, [r3]
 143              	@ 0 "" 2
 144              	.LVL14:
 145              		.thumb
 146              		.syntax unified
 147              	.LBE421:
 148              	.LBE420:
 149              		.loc 1 3788 0 discriminator 1
 150 001c 23F00103 		bic	r3, r3, #1
 151              	.LVL15:
 152              	.LBB422:
 153              	.LBB423:
 154              		.loc 2 1206 0 discriminator 1
 155 0020 0832     		adds	r2, r2, #8
 156              	.LVL16:
 157              		.syntax unified
 158              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 159 0022 42E80031 		strex r1, r3, [r2]
 160              	@ 0 "" 2
 161              	.LVL17:
 162              		.thumb
 163              		.syntax unified
 164              	.LBE423:
 165              	.LBE422:
 166              		.loc 1 3788 0 discriminator 1
 167 0026 0029     		cmp	r1, #0
 168 0028 F3D1     		bne	.L5
 169              	.LBE419:
3789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 170              		.loc 1 3792 0
 171 002a 036E     		ldr	r3, [r0, #96]
 172              	.LVL18:
 173 002c 012B     		cmp	r3, #1
 174 002e 08D1     		bne	.L6
 175              	.L7:
 176              	.LBB424:
3793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 177              		.loc 1 3794 0 discriminator 1
 178 0030 0268     		ldr	r2, [r0]
 179              	.LVL19:
 180              	.LBB425:
 181              	.LBB426:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 182              		.loc 2 1155 0 discriminator 1
 183              		.syntax unified
 184              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 185 0032 52E8003F 		ldrex r3, [r2]
 186              	@ 0 "" 2
 187              	.LVL20:
ARM GAS  /tmp/cc9Y1vpF.s 			page 92


 188              		.thumb
 189              		.syntax unified
 190              	.LBE426:
 191              	.LBE425:
 192              		.loc 1 3794 0 discriminator 1
 193 0036 23F01003 		bic	r3, r3, #16
 194              	.LVL21:
 195              	.LBB427:
 196              	.LBB428:
 197              		.loc 2 1206 0 discriminator 1
 198              		.syntax unified
 199              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 200 003a 42E80031 		strex r1, r3, [r2]
 201              	@ 0 "" 2
 202              	.LVL22:
 203              		.thumb
 204              		.syntax unified
 205              	.LBE428:
 206              	.LBE427:
 207              		.loc 1 3794 0 discriminator 1
 208 003e 0029     		cmp	r1, #0
 209 0040 F6D1     		bne	.L7
 210              	.LVL23:
 211              	.L6:
 212              	.LBE424:
3795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 213              		.loc 1 3798 0
 214 0042 2023     		movs	r3, #32
 215 0044 C367     		str	r3, [r0, #124]
3799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 216              		.loc 1 3799 0
 217 0046 0023     		movs	r3, #0
 218 0048 0366     		str	r3, [r0, #96]
3800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
 219              		.loc 1 3802 0
 220 004a 4366     		str	r3, [r0, #100]
 221 004c 7047     		bx	lr
 222              		.cfi_endproc
 223              	.LFE182:
 225 004e 00BF     		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 226              		.align	2
 227              		.thumb
 228              		.thumb_func
 230              	UART_TxISR_8BIT:
 231              	.LFB193:
3803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/cc9Y1vpF.s 			page 93


3810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 94


3867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check current reception Mode :
3891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 95


3924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check current reception Mode :
3925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
3934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
ARM GAS  /tmp/cc9Y1vpF.s 			page 96


3981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
4002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
4003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
4005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
4006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
4011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
4012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
4013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
4014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
4018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
4019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
4020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
4022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
4024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
4025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
4027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
4029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
4033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
4034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
4035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
4037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/cc9Y1vpF.s 			page 97


4038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
4041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
4044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
4045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
4047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
4051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
4052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
4053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
4058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
4059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
4061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
4062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
4068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
4069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
4070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
4071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
4075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
4076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
4077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
4079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
4081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
4082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
4084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
4086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
4090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
4091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
4092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
4094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/cc9Y1vpF.s 			page 98


4095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
4098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
4100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
4103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
4104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
4105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
4110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
4111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
4113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
4114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
4120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
4121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
4122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
4123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
4128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
4129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
4131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
4134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
4135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
4137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
4141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
4142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
4146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
4147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
4149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
4150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/cc9Y1vpF.s 			page 99


4152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
4155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
4156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
4157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
4158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
4163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
4164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
4166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
4169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
4171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
4174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
4175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
4180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
4181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
4183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
4184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
4189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
4195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 232              		.loc 1 4195 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL24:
4196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 238              		.loc 1 4197 0
 239 0000 836F     		ldr	r3, [r0, #120]
 240 0002 212B     		cmp	r3, #33
 241 0004 24D1     		bne	.L8
4198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc9Y1vpF.s 			page 100


4199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 242              		.loc 1 4199 0
 243 0006 B0F85230 		ldrh	r3, [r0, #82]
 244 000a 9BB2     		uxth	r3, r3
 245 000c 93B9     		cbnz	r3, .L10
 246              	.L11:
 247              	.LBB429:
4200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
4204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 248              		.loc 1 4205 0 discriminator 1
 249 000e 0268     		ldr	r2, [r0]
 250              	.LVL25:
 251              	.LBB430:
 252              	.LBB431:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 253              		.loc 2 1155 0 discriminator 1
 254              		.syntax unified
 255              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 256 0010 52E8003F 		ldrex r3, [r2]
 257              	@ 0 "" 2
 258              	.LVL26:
 259              		.thumb
 260              		.syntax unified
 261              	.LBE431:
 262              	.LBE430:
 263              		.loc 1 4205 0 discriminator 1
 264 0014 23F08003 		bic	r3, r3, #128
 265              	.LVL27:
 266              	.LBB432:
 267              	.LBB433:
 268              		.loc 2 1206 0 discriminator 1
 269              		.syntax unified
 270              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 271 0018 42E80031 		strex r1, r3, [r2]
 272              	@ 0 "" 2
 273              	.LVL28:
 274              		.thumb
 275              		.syntax unified
 276              	.LBE433:
 277              	.LBE432:
 278              		.loc 1 4205 0 discriminator 1
 279 001c 0029     		cmp	r1, #0
 280 001e F6D1     		bne	.L11
 281              	.LVL29:
 282              	.L12:
 283              	.LBE429:
 284              	.LBB434:
4206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 285              		.loc 1 4209 0 discriminator 1
 286 0020 0268     		ldr	r2, [r0]
ARM GAS  /tmp/cc9Y1vpF.s 			page 101


 287              	.LVL30:
 288              	.LBB435:
 289              	.LBB436:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 290              		.loc 2 1155 0 discriminator 1
 291              		.syntax unified
 292              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 293 0022 52E8003F 		ldrex r3, [r2]
 294              	@ 0 "" 2
 295              	.LVL31:
 296              		.thumb
 297              		.syntax unified
 298              	.LBE436:
 299              	.LBE435:
 300              		.loc 1 4209 0 discriminator 1
 301 0026 43F04003 		orr	r3, r3, #64
 302              	.LVL32:
 303              	.LBB437:
 304              	.LBB438:
 305              		.loc 2 1206 0 discriminator 1
 306              		.syntax unified
 307              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 308 002a 42E80031 		strex r1, r3, [r2]
 309              	@ 0 "" 2
 310              	.LVL33:
 311              		.thumb
 312              		.syntax unified
 313              	.LBE438:
 314              	.LBE437:
 315              		.loc 1 4209 0 discriminator 1
 316 002e 0029     		cmp	r1, #0
 317 0030 F6D1     		bne	.L12
 318 0032 7047     		bx	lr
 319              	.LVL34:
 320              	.L10:
 321              	.LBE434:
4210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
4212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 322              		.loc 1 4213 0
 323 0034 0368     		ldr	r3, [r0]
 324 0036 C26C     		ldr	r2, [r0, #76]
 325 0038 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 326 003a 1A85     		strh	r2, [r3, #40]	@ movhi
4214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 327              		.loc 1 4214 0
 328 003c C36C     		ldr	r3, [r0, #76]
 329 003e 0133     		adds	r3, r3, #1
 330 0040 C364     		str	r3, [r0, #76]
4215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 331              		.loc 1 4215 0
 332 0042 B0F85230 		ldrh	r3, [r0, #82]
 333 0046 9BB2     		uxth	r3, r3
 334 0048 013B     		subs	r3, r3, #1
 335 004a 9BB2     		uxth	r3, r3
 336 004c A0F85230 		strh	r3, [r0, #82]	@ movhi
ARM GAS  /tmp/cc9Y1vpF.s 			page 102


 337              	.L8:
 338 0050 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE193:
 342 0052 00BF     		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 343              		.align	2
 344              		.thumb
 345              		.thumb_func
 347              	UART_TxISR_16BIT:
 348              	.LFB194:
4216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
4222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
4228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 349              		.loc 1 4228 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LVL35:
4229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const uint16_t *tmp;
4230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 355              		.loc 1 4232 0
 356 0000 836F     		ldr	r3, [r0, #120]
 357 0002 212B     		cmp	r3, #33
 358 0004 26D1     		bne	.L13
4233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 359              		.loc 1 4234 0
 360 0006 B0F85230 		ldrh	r3, [r0, #82]
 361 000a 9BB2     		uxth	r3, r3
 362 000c 93B9     		cbnz	r3, .L15
 363              	.L16:
 364              	.LBB439:
4235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
4239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 365              		.loc 1 4240 0 discriminator 1
 366 000e 0268     		ldr	r2, [r0]
 367              	.LVL36:
 368              	.LBB440:
 369              	.LBB441:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/cc9Y1vpF.s 			page 103


 370              		.loc 2 1155 0 discriminator 1
 371              		.syntax unified
 372              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 373 0010 52E8003F 		ldrex r3, [r2]
 374              	@ 0 "" 2
 375              	.LVL37:
 376              		.thumb
 377              		.syntax unified
 378              	.LBE441:
 379              	.LBE440:
 380              		.loc 1 4240 0 discriminator 1
 381 0014 23F08003 		bic	r3, r3, #128
 382              	.LVL38:
 383              	.LBB442:
 384              	.LBB443:
 385              		.loc 2 1206 0 discriminator 1
 386              		.syntax unified
 387              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 388 0018 42E80031 		strex r1, r3, [r2]
 389              	@ 0 "" 2
 390              	.LVL39:
 391              		.thumb
 392              		.syntax unified
 393              	.LBE443:
 394              	.LBE442:
 395              		.loc 1 4240 0 discriminator 1
 396 001c 0029     		cmp	r1, #0
 397 001e F6D1     		bne	.L16
 398              	.LVL40:
 399              	.L17:
 400              	.LBE439:
 401              	.LBB444:
4241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 402              		.loc 1 4244 0 discriminator 1
 403 0020 0268     		ldr	r2, [r0]
 404              	.LVL41:
 405              	.LBB445:
 406              	.LBB446:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 407              		.loc 2 1155 0 discriminator 1
 408              		.syntax unified
 409              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 410 0022 52E8003F 		ldrex r3, [r2]
 411              	@ 0 "" 2
 412              	.LVL42:
 413              		.thumb
 414              		.syntax unified
 415              	.LBE446:
 416              	.LBE445:
 417              		.loc 1 4244 0 discriminator 1
 418 0026 43F04003 		orr	r3, r3, #64
 419              	.LVL43:
 420              	.LBB447:
 421              	.LBB448:
ARM GAS  /tmp/cc9Y1vpF.s 			page 104


 422              		.loc 2 1206 0 discriminator 1
 423              		.syntax unified
 424              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 425 002a 42E80031 		strex r1, r3, [r2]
 426              	@ 0 "" 2
 427              	.LVL44:
 428              		.thumb
 429              		.syntax unified
 430              	.LBE448:
 431              	.LBE447:
 432              		.loc 1 4244 0 discriminator 1
 433 002e 0029     		cmp	r1, #0
 434 0030 F6D1     		bne	.L17
 435 0032 7047     		bx	lr
 436              	.LVL45:
 437              	.L15:
 438              	.LBE444:
4245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
4247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
 439              		.loc 1 4248 0
 440 0034 C36C     		ldr	r3, [r0, #76]
 441              	.LVL46:
4249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 442              		.loc 1 4249 0
 443 0036 0268     		ldr	r2, [r0]
 444 0038 1B88     		ldrh	r3, [r3]
 445              	.LVL47:
 446 003a C3F30803 		ubfx	r3, r3, #0, #9
 447 003e 1385     		strh	r3, [r2, #40]	@ movhi
 448              	.LVL48:
4250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 449              		.loc 1 4250 0
 450 0040 C36C     		ldr	r3, [r0, #76]
 451 0042 0233     		adds	r3, r3, #2
 452 0044 C364     		str	r3, [r0, #76]
4251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 453              		.loc 1 4251 0
 454 0046 B0F85230 		ldrh	r3, [r0, #82]
 455 004a 9BB2     		uxth	r3, r3
 456 004c 013B     		subs	r3, r3, #1
 457 004e 9BB2     		uxth	r3, r3
 458 0050 A0F85230 		strh	r3, [r0, #82]	@ movhi
 459              	.L13:
 460 0054 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE194:
 464 0056 00BF     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 465              		.align	2
 466              		.weak	HAL_UART_MspInit
 467              		.thumb
 468              		.thumb_func
 470              	HAL_UART_MspInit:
 471              	.LFB137:
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 472              		.loc 1 691 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 105


 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477              	.LVL49:
 478 0000 7047     		bx	lr
 479              		.cfi_endproc
 480              	.LFE137:
 482 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 483              		.align	2
 484              		.weak	HAL_UART_MspDeInit
 485              		.thumb
 486              		.thumb_func
 488              	HAL_UART_MspDeInit:
 489              	.LFB138:
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 490              		.loc 1 706 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 495              	.LVL50:
 496 0000 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE138:
 500 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 501              		.align	2
 502              		.global	HAL_UART_DeInit
 503              		.thumb
 504              		.thumb_func
 506              	HAL_UART_DeInit:
 507              	.LFB136:
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 508              		.loc 1 645 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              	.LVL51:
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 513              		.loc 1 647 0
 514 0000 D0B1     		cbz	r0, .L22
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 515              		.loc 1 645 0
 516 0002 38B5     		push	{r3, r4, r5, lr}
 517              	.LCFI0:
 518              		.cfi_def_cfa_offset 16
 519              		.cfi_offset 3, -16
 520              		.cfi_offset 4, -12
 521              		.cfi_offset 5, -8
 522              		.cfi_offset 14, -4
 523 0004 0446     		mov	r4, r0
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 524              		.loc 1 655 0
 525 0006 2423     		movs	r3, #36
 526 0008 8367     		str	r3, [r0, #120]
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 527              		.loc 1 657 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 106


 528 000a 0268     		ldr	r2, [r0]
 529 000c 1368     		ldr	r3, [r2]
 530 000e 23F00103 		bic	r3, r3, #1
 531 0012 1360     		str	r3, [r2]
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 532              		.loc 1 659 0
 533 0014 0368     		ldr	r3, [r0]
 534 0016 0025     		movs	r5, #0
 535 0018 1D60     		str	r5, [r3]
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 536              		.loc 1 660 0
 537 001a 0368     		ldr	r3, [r0]
 538 001c 5D60     		str	r5, [r3, #4]
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 539              		.loc 1 661 0
 540 001e 0368     		ldr	r3, [r0]
 541 0020 9D60     		str	r5, [r3, #8]
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 542              		.loc 1 672 0
 543 0022 FFF7FEFF 		bl	HAL_UART_MspDeInit
 544              	.LVL52:
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 545              		.loc 1 675 0
 546 0026 C4F88050 		str	r5, [r4, #128]
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 547              		.loc 1 676 0
 548 002a A567     		str	r5, [r4, #120]
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 549              		.loc 1 677 0
 550 002c E567     		str	r5, [r4, #124]
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 551              		.loc 1 678 0
 552 002e 2566     		str	r5, [r4, #96]
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 553              		.loc 1 680 0
 554 0030 84F87450 		strb	r5, [r4, #116]
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 555              		.loc 1 682 0
 556 0034 2846     		mov	r0, r5
 557 0036 38BD     		pop	{r3, r4, r5, pc}
 558              	.LVL53:
 559              	.L22:
 560              	.LCFI1:
 561              		.cfi_def_cfa_offset 0
 562              		.cfi_restore 3
 563              		.cfi_restore 4
 564              		.cfi_restore 5
 565              		.cfi_restore 14
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 566              		.loc 1 649 0
 567 0038 0120     		movs	r0, #1
 568              	.LVL54:
 569 003a 7047     		bx	lr
 570              		.cfi_endproc
 571              	.LFE136:
 573              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 574              		.align	2
ARM GAS  /tmp/cc9Y1vpF.s 			page 107


 575              		.global	HAL_UART_Transmit_IT
 576              		.thumb
 577              		.thumb_func
 579              	HAL_UART_Transmit_IT:
 580              	.LFB141:
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 581              		.loc 1 1325 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL55:
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 587              		.loc 1 1327 0
 588 0000 836F     		ldr	r3, [r0, #120]
 589 0002 202B     		cmp	r3, #32
 590 0004 2CD1     		bne	.L30
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 591              		.loc 1 1329 0
 592 0006 69B3     		cbz	r1, .L31
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 593              		.loc 1 1329 0 is_stmt 0 discriminator 1
 594 0008 72B3     		cbz	r2, .L32
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 595              		.loc 1 1334 0 is_stmt 1
 596 000a 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 597 000e 012B     		cmp	r3, #1
 598 0010 2CD0     		beq	.L33
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 599              		.loc 1 1334 0 is_stmt 0 discriminator 2
 600 0012 0123     		movs	r3, #1
 601 0014 80F87430 		strb	r3, [r0, #116]
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 602              		.loc 1 1336 0 is_stmt 1 discriminator 2
 603 0018 C164     		str	r1, [r0, #76]
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 604              		.loc 1 1337 0 discriminator 2
 605 001a A0F85020 		strh	r2, [r0, #80]	@ movhi
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 606              		.loc 1 1338 0 discriminator 2
 607 001e A0F85220 		strh	r2, [r0, #82]	@ movhi
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 608              		.loc 1 1339 0 discriminator 2
 609 0022 0023     		movs	r3, #0
 610 0024 8366     		str	r3, [r0, #104]
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 611              		.loc 1 1341 0 discriminator 2
 612 0026 C0F88030 		str	r3, [r0, #128]
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 613              		.loc 1 1342 0 discriminator 2
 614 002a 2123     		movs	r3, #33
 615 002c 8367     		str	r3, [r0, #120]
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 616              		.loc 1 1382 0 discriminator 2
 617 002e 8368     		ldr	r3, [r0, #8]
 618 0030 B3F5805F 		cmp	r3, #4096
 619 0034 04D1     		bne	.L27
ARM GAS  /tmp/cc9Y1vpF.s 			page 108


1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 620              		.loc 1 1382 0 is_stmt 0 discriminator 1
 621 0036 0369     		ldr	r3, [r0, #16]
 622 0038 13B9     		cbnz	r3, .L27
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 623              		.loc 1 1384 0 is_stmt 1
 624 003a 0D4B     		ldr	r3, .L34
 625 003c 8366     		str	r3, [r0, #104]
 626 003e 01E0     		b	.L28
 627              	.L27:
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 628              		.loc 1 1388 0
 629 0040 0C4B     		ldr	r3, .L34+4
 630 0042 8366     		str	r3, [r0, #104]
 631              	.L28:
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 632              		.loc 1 1391 0
 633 0044 0023     		movs	r3, #0
 634 0046 80F87430 		strb	r3, [r0, #116]
 635              	.LVL56:
 636              	.L29:
 637              	.LBB449:
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 638              		.loc 1 1394 0 discriminator 1
 639 004a 0268     		ldr	r2, [r0]
 640              	.LVL57:
 641              	.LBB450:
 642              	.LBB451:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 643              		.loc 2 1155 0 discriminator 1
 644              		.syntax unified
 645              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 646 004c 52E8003F 		ldrex r3, [r2]
 647              	@ 0 "" 2
 648              	.LVL58:
 649              		.thumb
 650              		.syntax unified
 651              	.LBE451:
 652              	.LBE450:
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 653              		.loc 1 1394 0 discriminator 1
 654 0050 43F08003 		orr	r3, r3, #128
 655              	.LVL59:
 656              	.LBB452:
 657              	.LBB453:
 658              		.loc 2 1206 0 discriminator 1
 659              		.syntax unified
 660              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 661 0054 42E80031 		strex r1, r3, [r2]
 662              	@ 0 "" 2
 663              	.LVL60:
 664              		.thumb
 665              		.syntax unified
 666              	.LBE453:
 667              	.LBE452:
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 668              		.loc 1 1394 0 discriminator 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 109


 669 0058 0029     		cmp	r1, #0
 670 005a F6D1     		bne	.L29
 671              	.LBE449:
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 672              		.loc 1 1397 0
 673 005c 0020     		movs	r0, #0
 674              	.LVL61:
 675              	.LBB454:
 676 005e 7047     		bx	lr
 677              	.LVL62:
 678              	.L30:
 679              	.LBE454:
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 680              		.loc 1 1401 0
 681 0060 0220     		movs	r0, #2
 682              	.LVL63:
 683 0062 7047     		bx	lr
 684              	.LVL64:
 685              	.L31:
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 686              		.loc 1 1331 0
 687 0064 0120     		movs	r0, #1
 688              	.LVL65:
 689 0066 7047     		bx	lr
 690              	.LVL66:
 691              	.L32:
 692 0068 0120     		movs	r0, #1
 693              	.LVL67:
 694 006a 7047     		bx	lr
 695              	.LVL68:
 696              	.L33:
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 697              		.loc 1 1334 0
 698 006c 0220     		movs	r0, #2
 699              	.LVL69:
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 700              		.loc 1 1403 0
 701 006e 7047     		bx	lr
 702              	.L35:
 703              		.align	2
 704              	.L34:
 705 0070 00000000 		.word	UART_TxISR_16BIT
 706 0074 00000000 		.word	UART_TxISR_8BIT
 707              		.cfi_endproc
 708              	.LFE141:
 710              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 711              		.align	2
 712              		.global	HAL_UART_Transmit_DMA
 713              		.thumb
 714              		.thumb_func
 716              	HAL_UART_Transmit_DMA:
 717              	.LFB143:
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 718              		.loc 1 1459 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 110


 722              	.LVL70:
 723 0000 10B5     		push	{r4, lr}
 724              	.LCFI2:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 728              		.loc 1 1461 0
 729 0002 846F     		ldr	r4, [r0, #120]
 730 0004 202C     		cmp	r4, #32
 731 0006 48D1     		bne	.L40
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 732              		.loc 1 1463 0
 733 0008 0029     		cmp	r1, #0
 734 000a 48D0     		beq	.L41
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 735              		.loc 1 1463 0 is_stmt 0 discriminator 1
 736 000c 002A     		cmp	r2, #0
 737 000e 48D0     		beq	.L42
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 738              		.loc 1 1468 0 is_stmt 1
 739 0010 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 740 0014 012B     		cmp	r3, #1
 741 0016 46D0     		beq	.L43
 742 0018 1346     		mov	r3, r2
 743 001a 0446     		mov	r4, r0
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 744              		.loc 1 1468 0 is_stmt 0 discriminator 2
 745 001c 0122     		movs	r2, #1
 746              	.LVL71:
 747 001e 80F87420 		strb	r2, [r0, #116]
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 748              		.loc 1 1470 0 is_stmt 1 discriminator 2
 749 0022 C164     		str	r1, [r0, #76]
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 750              		.loc 1 1471 0 discriminator 2
 751 0024 A0F85030 		strh	r3, [r0, #80]	@ movhi
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 752              		.loc 1 1472 0 discriminator 2
 753 0028 A0F85230 		strh	r3, [r0, #82]	@ movhi
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 754              		.loc 1 1474 0 discriminator 2
 755 002c 0022     		movs	r2, #0
 756 002e C0F88020 		str	r2, [r0, #128]
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 757              		.loc 1 1475 0 discriminator 2
 758 0032 2122     		movs	r2, #33
 759 0034 8267     		str	r2, [r0, #120]
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 760              		.loc 1 1477 0 discriminator 2
 761 0036 C26E     		ldr	r2, [r0, #108]
 762 0038 DAB1     		cbz	r2, .L38
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 763              		.loc 1 1480 0
 764 003a 1C49     		ldr	r1, .L45
 765              	.LVL72:
 766 003c D162     		str	r1, [r2, #44]
ARM GAS  /tmp/cc9Y1vpF.s 			page 111


 767              	.LVL73:
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 768              		.loc 1 1483 0
 769 003e C26E     		ldr	r2, [r0, #108]
 770 0040 1B49     		ldr	r1, .L45+4
 771 0042 1163     		str	r1, [r2, #48]
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 772              		.loc 1 1486 0
 773 0044 C26E     		ldr	r2, [r0, #108]
 774 0046 1B49     		ldr	r1, .L45+8
 775 0048 5163     		str	r1, [r2, #52]
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 776              		.loc 1 1489 0
 777 004a C26E     		ldr	r2, [r0, #108]
 778 004c 0021     		movs	r1, #0
 779 004e 9163     		str	r1, [r2, #56]
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 780              		.loc 1 1492 0
 781 0050 0268     		ldr	r2, [r0]
 782 0052 2832     		adds	r2, r2, #40
 783 0054 C16C     		ldr	r1, [r0, #76]
 784 0056 C06E     		ldr	r0, [r0, #108]
 785              	.LVL74:
 786 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 787              	.LVL75:
 788 005c 48B1     		cbz	r0, .L38
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 789              		.loc 1 1495 0
 790 005e 1023     		movs	r3, #16
 791 0060 C4F88030 		str	r3, [r4, #128]
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 792              		.loc 1 1497 0
 793 0064 0023     		movs	r3, #0
 794 0066 84F87430 		strb	r3, [r4, #116]
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 795              		.loc 1 1500 0
 796 006a 2023     		movs	r3, #32
 797 006c A367     		str	r3, [r4, #120]
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 798              		.loc 1 1502 0
 799 006e 0120     		movs	r0, #1
 800 0070 10BD     		pop	{r4, pc}
 801              	.LVL76:
 802              	.L38:
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 803              		.loc 1 1506 0
 804 0072 2368     		ldr	r3, [r4]
 805 0074 4022     		movs	r2, #64
 806 0076 1A62     		str	r2, [r3, #32]
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 807              		.loc 1 1508 0
 808 0078 0023     		movs	r3, #0
 809 007a 84F87430 		strb	r3, [r4, #116]
 810              	.L39:
 811              	.LBB455:
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 812              		.loc 1 1512 0 discriminator 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 112


 813 007e 2268     		ldr	r2, [r4]
 814              	.LVL77:
 815              	.LBB456:
 816              	.LBB457:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 817              		.loc 2 1155 0 discriminator 1
 818 0080 02F10803 		add	r3, r2, #8
 819              	.LVL78:
 820              		.syntax unified
 821              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 822 0084 53E8003F 		ldrex r3, [r3]
 823              	@ 0 "" 2
 824              	.LVL79:
 825              		.thumb
 826              		.syntax unified
 827              	.LBE457:
 828              	.LBE456:
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 829              		.loc 1 1512 0 discriminator 1
 830 0088 43F08003 		orr	r3, r3, #128
 831              	.LVL80:
 832              	.LBB458:
 833              	.LBB459:
 834              		.loc 2 1206 0 discriminator 1
 835 008c 0832     		adds	r2, r2, #8
 836              	.LVL81:
 837              		.syntax unified
 838              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 839 008e 42E80031 		strex r1, r3, [r2]
 840              	@ 0 "" 2
 841              	.LVL82:
 842              		.thumb
 843              		.syntax unified
 844              	.LBE459:
 845              	.LBE458:
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 846              		.loc 1 1512 0 discriminator 1
 847 0092 0029     		cmp	r1, #0
 848 0094 F3D1     		bne	.L39
 849              	.LBE455:
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 850              		.loc 1 1514 0
 851 0096 0020     		movs	r0, #0
 852              	.LBB460:
 853 0098 10BD     		pop	{r4, pc}
 854              	.LVL83:
 855              	.L40:
 856              	.LBE460:
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 857              		.loc 1 1518 0
 858 009a 0220     		movs	r0, #2
 859              	.LVL84:
 860 009c 10BD     		pop	{r4, pc}
 861              	.LVL85:
 862              	.L41:
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 863              		.loc 1 1465 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 113


 864 009e 0120     		movs	r0, #1
 865              	.LVL86:
 866 00a0 10BD     		pop	{r4, pc}
 867              	.LVL87:
 868              	.L42:
 869 00a2 0120     		movs	r0, #1
 870              	.LVL88:
 871 00a4 10BD     		pop	{r4, pc}
 872              	.LVL89:
 873              	.L43:
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 874              		.loc 1 1468 0
 875 00a6 0220     		movs	r0, #2
 876              	.LVL90:
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 877              		.loc 1 1520 0
 878 00a8 10BD     		pop	{r4, pc}
 879              	.L46:
 880 00aa 00BF     		.align	2
 881              	.L45:
 882 00ac 00000000 		.word	UART_DMATransmitCplt
 883 00b0 00000000 		.word	UART_DMATxHalfCplt
 884 00b4 00000000 		.word	UART_DMAError
 885              		.cfi_endproc
 886              	.LFE143:
 888              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 889              		.align	2
 890              		.global	HAL_UART_DMAPause
 891              		.thumb
 892              		.thumb_func
 894              	HAL_UART_DMAPause:
 895              	.LFB145:
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 896              		.loc 1 1573 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901              	.LVL91:
 902 0000 10B4     		push	{r4}
 903              	.LCFI3:
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 4, -4
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 906              		.loc 1 1574 0
 907 0002 826F     		ldr	r2, [r0, #120]
 908              	.LVL92:
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 909              		.loc 1 1575 0
 910 0004 C46F     		ldr	r4, [r0, #124]
 911              	.LVL93:
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 912              		.loc 1 1577 0
 913 0006 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 914 000a 012B     		cmp	r3, #1
 915 000c 42D0     		beq	.L55
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 114


 916              		.loc 1 1577 0 is_stmt 0 discriminator 2
 917 000e 0123     		movs	r3, #1
 918 0010 80F87430 		strb	r3, [r0, #116]
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 919              		.loc 1 1579 0 is_stmt 1 discriminator 2
 920 0014 0368     		ldr	r3, [r0]
 921 0016 9B68     		ldr	r3, [r3, #8]
 922 0018 13F0800F 		tst	r3, #128
 923 001c 0DD0     		beq	.L49
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 924              		.loc 1 1579 0 is_stmt 0 discriminator 1
 925 001e 212A     		cmp	r2, #33
 926 0020 0BD1     		bne	.L49
 927              	.LVL94:
 928              	.L50:
 929              	.LBB461:
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 930              		.loc 1 1583 0 is_stmt 1 discriminator 1
 931 0022 0268     		ldr	r2, [r0]
 932              	.LVL95:
 933              	.LBB462:
 934              	.LBB463:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 935              		.loc 2 1155 0 discriminator 1
 936 0024 02F10803 		add	r3, r2, #8
 937              	.LVL96:
 938              		.syntax unified
 939              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 940 0028 53E8003F 		ldrex r3, [r3]
 941              	@ 0 "" 2
 942              	.LVL97:
 943              		.thumb
 944              		.syntax unified
 945              	.LBE463:
 946              	.LBE462:
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 947              		.loc 1 1583 0 discriminator 1
 948 002c 23F08003 		bic	r3, r3, #128
 949              	.LVL98:
 950              	.LBB464:
 951              	.LBB465:
 952              		.loc 2 1206 0 discriminator 1
 953 0030 0832     		adds	r2, r2, #8
 954              	.LVL99:
 955              		.syntax unified
 956              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 957 0032 42E80031 		strex r1, r3, [r2]
 958              	@ 0 "" 2
 959              	.LVL100:
 960              		.thumb
 961              		.syntax unified
 962              	.LBE465:
 963              	.LBE464:
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 964              		.loc 1 1583 0 discriminator 1
 965 0036 0029     		cmp	r1, #0
 966 0038 F3D1     		bne	.L50
ARM GAS  /tmp/cc9Y1vpF.s 			page 115


 967              	.LVL101:
 968              	.L49:
 969              	.LBE461:
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 970              		.loc 1 1585 0
 971 003a 0368     		ldr	r3, [r0]
 972 003c 9B68     		ldr	r3, [r3, #8]
 973 003e 13F0400F 		tst	r3, #64
 974 0042 22D0     		beq	.L51
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 975              		.loc 1 1585 0 is_stmt 0 discriminator 1
 976 0044 222C     		cmp	r4, #34
 977 0046 20D1     		bne	.L51
 978              	.L52:
 979              	.LBB466:
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 980              		.loc 1 1589 0 is_stmt 1 discriminator 1
 981 0048 0268     		ldr	r2, [r0]
 982              	.LVL102:
 983              	.LBB467:
 984              	.LBB468:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 985              		.loc 2 1155 0 discriminator 1
 986              		.syntax unified
 987              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 988 004a 52E8003F 		ldrex r3, [r2]
 989              	@ 0 "" 2
 990              	.LVL103:
 991              		.thumb
 992              		.syntax unified
 993              	.LBE468:
 994              	.LBE467:
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 995              		.loc 1 1589 0 discriminator 1
 996 004e 23F48073 		bic	r3, r3, #256
 997              	.LVL104:
 998              	.LBB469:
 999              	.LBB470:
 1000              		.loc 2 1206 0 discriminator 1
 1001              		.syntax unified
 1002              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1003 0052 42E80031 		strex r1, r3, [r2]
 1004              	@ 0 "" 2
 1005              	.LVL105:
 1006              		.thumb
 1007              		.syntax unified
 1008              	.LBE470:
 1009              	.LBE469:
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1010              		.loc 1 1589 0 discriminator 1
 1011 0056 0029     		cmp	r1, #0
 1012 0058 F6D1     		bne	.L52
 1013              	.LVL106:
 1014              	.L53:
 1015              	.LBE466:
 1016              	.LBB471:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 116


 1017              		.loc 1 1590 0 discriminator 1
 1018 005a 0268     		ldr	r2, [r0]
 1019              	.LVL107:
 1020              	.LBB472:
 1021              	.LBB473:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1022              		.loc 2 1155 0 discriminator 1
 1023 005c 02F10803 		add	r3, r2, #8
 1024              	.LVL108:
 1025              		.syntax unified
 1026              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1027 0060 53E8003F 		ldrex r3, [r3]
 1028              	@ 0 "" 2
 1029              	.LVL109:
 1030              		.thumb
 1031              		.syntax unified
 1032              	.LBE473:
 1033              	.LBE472:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1034              		.loc 1 1590 0 discriminator 1
 1035 0064 23F00103 		bic	r3, r3, #1
 1036              	.LVL110:
 1037              	.LBB474:
 1038              	.LBB475:
 1039              		.loc 2 1206 0 discriminator 1
 1040 0068 0832     		adds	r2, r2, #8
 1041              	.LVL111:
 1042              		.syntax unified
 1043              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1044 006a 42E80031 		strex r1, r3, [r2]
 1045              	@ 0 "" 2
 1046              	.LVL112:
 1047              		.thumb
 1048              		.syntax unified
 1049              	.LBE475:
 1050              	.LBE474:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1051              		.loc 1 1590 0 discriminator 1
 1052 006e 0029     		cmp	r1, #0
 1053 0070 F3D1     		bne	.L53
 1054              	.LVL113:
 1055              	.L54:
 1056              	.LBE471:
 1057              	.LBB476:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1058              		.loc 1 1593 0 discriminator 1
 1059 0072 0268     		ldr	r2, [r0]
 1060              	.LVL114:
 1061              	.LBB477:
 1062              	.LBB478:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1063              		.loc 2 1155 0 discriminator 1
 1064 0074 02F10803 		add	r3, r2, #8
 1065              	.LVL115:
 1066              		.syntax unified
 1067              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1068 0078 53E8003F 		ldrex r3, [r3]
ARM GAS  /tmp/cc9Y1vpF.s 			page 117


 1069              	@ 0 "" 2
 1070              	.LVL116:
 1071              		.thumb
 1072              		.syntax unified
 1073              	.LBE478:
 1074              	.LBE477:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1075              		.loc 1 1593 0 discriminator 1
 1076 007c 23F04003 		bic	r3, r3, #64
 1077              	.LVL117:
 1078              	.LBB479:
 1079              	.LBB480:
 1080              		.loc 2 1206 0 discriminator 1
 1081 0080 0832     		adds	r2, r2, #8
 1082              	.LVL118:
 1083              		.syntax unified
 1084              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1085 0082 42E80031 		strex r1, r3, [r2]
 1086              	@ 0 "" 2
 1087              	.LVL119:
 1088              		.thumb
 1089              		.syntax unified
 1090              	.LBE480:
 1091              	.LBE479:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1092              		.loc 1 1593 0 discriminator 1
 1093 0086 0029     		cmp	r1, #0
 1094 0088 F3D1     		bne	.L54
 1095              	.LVL120:
 1096              	.L51:
 1097              	.LBE476:
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1098              		.loc 1 1596 0
 1099 008a 0023     		movs	r3, #0
 1100 008c 80F87430 		strb	r3, [r0, #116]
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1101              		.loc 1 1598 0
 1102 0090 1846     		mov	r0, r3
 1103              	.LVL121:
 1104 0092 00E0     		b	.L48
 1105              	.LVL122:
 1106              	.L55:
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1107              		.loc 1 1577 0
 1108 0094 0220     		movs	r0, #2
 1109              	.LVL123:
 1110              	.L48:
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1111              		.loc 1 1599 0
 1112 0096 5DF8044B 		ldr	r4, [sp], #4
 1113              	.LCFI4:
 1114              		.cfi_restore 4
 1115              		.cfi_def_cfa_offset 0
 1116              	.LVL124:
 1117 009a 7047     		bx	lr
 1118              		.cfi_endproc
 1119              	.LFE145:
ARM GAS  /tmp/cc9Y1vpF.s 			page 118


 1121              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1122              		.align	2
 1123              		.global	HAL_UART_DMAResume
 1124              		.thumb
 1125              		.thumb_func
 1127              	HAL_UART_DMAResume:
 1128              	.LFB146:
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1129              		.loc 1 1607 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 1133              		@ link register save eliminated.
 1134              	.LVL125:
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1135              		.loc 1 1608 0
 1136 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 1137 0004 012B     		cmp	r3, #1
 1138 0006 3FD0     		beq	.L66
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1139              		.loc 1 1608 0 is_stmt 0 discriminator 2
 1140 0008 0123     		movs	r3, #1
 1141 000a 80F87430 		strb	r3, [r0, #116]
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1142              		.loc 1 1610 0 is_stmt 1 discriminator 2
 1143 000e 836F     		ldr	r3, [r0, #120]
 1144 0010 212B     		cmp	r3, #33
 1145 0012 0BD1     		bne	.L59
 1146              	.L60:
 1147              	.LBB481:
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1148              		.loc 1 1613 0 discriminator 1
 1149 0014 0268     		ldr	r2, [r0]
 1150              	.LVL126:
 1151              	.LBB482:
 1152              	.LBB483:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1153              		.loc 2 1155 0 discriminator 1
 1154 0016 02F10803 		add	r3, r2, #8
 1155              	.LVL127:
 1156              		.syntax unified
 1157              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1158 001a 53E8003F 		ldrex r3, [r3]
 1159              	@ 0 "" 2
 1160              	.LVL128:
 1161              		.thumb
 1162              		.syntax unified
 1163              	.LBE483:
 1164              	.LBE482:
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1165              		.loc 1 1613 0 discriminator 1
 1166 001e 43F08003 		orr	r3, r3, #128
 1167              	.LVL129:
 1168              	.LBB484:
 1169              	.LBB485:
 1170              		.loc 2 1206 0 discriminator 1
 1171 0022 0832     		adds	r2, r2, #8
ARM GAS  /tmp/cc9Y1vpF.s 			page 119


 1172              	.LVL130:
 1173              		.syntax unified
 1174              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1175 0024 42E80031 		strex r1, r3, [r2]
 1176              	@ 0 "" 2
 1177              	.LVL131:
 1178              		.thumb
 1179              		.syntax unified
 1180              	.LBE485:
 1181              	.LBE484:
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1182              		.loc 1 1613 0 discriminator 1
 1183 0028 0029     		cmp	r1, #0
 1184 002a F3D1     		bne	.L60
 1185              	.LVL132:
 1186              	.L59:
 1187              	.LBE481:
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1188              		.loc 1 1615 0
 1189 002c C36F     		ldr	r3, [r0, #124]
 1190 002e 222B     		cmp	r3, #34
 1191 0030 25D1     		bne	.L61
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1192              		.loc 1 1618 0
 1193 0032 0368     		ldr	r3, [r0]
 1194 0034 0822     		movs	r2, #8
 1195 0036 1A62     		str	r2, [r3, #32]
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1196              		.loc 1 1621 0
 1197 0038 0369     		ldr	r3, [r0, #16]
 1198 003a 43B1     		cbz	r3, .L64
 1199              	.L63:
 1200              	.LBB486:
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1201              		.loc 1 1623 0 discriminator 1
 1202 003c 0268     		ldr	r2, [r0]
 1203              	.LVL133:
 1204              	.LBB487:
 1205              	.LBB488:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1206              		.loc 2 1155 0 discriminator 1
 1207              		.syntax unified
 1208              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1209 003e 52E8003F 		ldrex r3, [r2]
 1210              	@ 0 "" 2
 1211              	.LVL134:
 1212              		.thumb
 1213              		.syntax unified
 1214              	.LBE488:
 1215              	.LBE487:
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1216              		.loc 1 1623 0 discriminator 1
 1217 0042 43F48073 		orr	r3, r3, #256
 1218              	.LVL135:
 1219              	.LBB489:
 1220              	.LBB490:
 1221              		.loc 2 1206 0 discriminator 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 120


 1222              		.syntax unified
 1223              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1224 0046 42E80031 		strex r1, r3, [r2]
 1225              	@ 0 "" 2
 1226              	.LVL136:
 1227              		.thumb
 1228              		.syntax unified
 1229              	.LBE490:
 1230              	.LBE489:
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1231              		.loc 1 1623 0 discriminator 1
 1232 004a 0029     		cmp	r1, #0
 1233 004c F6D1     		bne	.L63
 1234              	.LVL137:
 1235              	.L64:
 1236              	.LBE486:
 1237              	.LBB491:
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1238              		.loc 1 1625 0 discriminator 1
 1239 004e 0268     		ldr	r2, [r0]
 1240              	.LVL138:
 1241              	.LBB492:
 1242              	.LBB493:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1243              		.loc 2 1155 0 discriminator 1
 1244 0050 02F10803 		add	r3, r2, #8
 1245              	.LVL139:
 1246              		.syntax unified
 1247              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1248 0054 53E8003F 		ldrex r3, [r3]
 1249              	@ 0 "" 2
 1250              	.LVL140:
 1251              		.thumb
 1252              		.syntax unified
 1253              	.LBE493:
 1254              	.LBE492:
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1255              		.loc 1 1625 0 discriminator 1
 1256 0058 43F00103 		orr	r3, r3, #1
 1257              	.LVL141:
 1258              	.LBB494:
 1259              	.LBB495:
 1260              		.loc 2 1206 0 discriminator 1
 1261 005c 0832     		adds	r2, r2, #8
 1262              	.LVL142:
 1263              		.syntax unified
 1264              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1265 005e 42E80031 		strex r1, r3, [r2]
 1266              	@ 0 "" 2
 1267              	.LVL143:
 1268              		.thumb
 1269              		.syntax unified
 1270              	.LBE495:
 1271              	.LBE494:
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1272              		.loc 1 1625 0 discriminator 1
 1273 0062 0029     		cmp	r1, #0
ARM GAS  /tmp/cc9Y1vpF.s 			page 121


 1274 0064 F3D1     		bne	.L64
 1275              	.LVL144:
 1276              	.L65:
 1277              	.LBE491:
 1278              	.LBB496:
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1279              		.loc 1 1628 0 discriminator 1
 1280 0066 0268     		ldr	r2, [r0]
 1281              	.LVL145:
 1282              	.LBB497:
 1283              	.LBB498:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1284              		.loc 2 1155 0 discriminator 1
 1285 0068 02F10803 		add	r3, r2, #8
 1286              	.LVL146:
 1287              		.syntax unified
 1288              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1289 006c 53E8003F 		ldrex r3, [r3]
 1290              	@ 0 "" 2
 1291              	.LVL147:
 1292              		.thumb
 1293              		.syntax unified
 1294              	.LBE498:
 1295              	.LBE497:
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1296              		.loc 1 1628 0 discriminator 1
 1297 0070 43F04003 		orr	r3, r3, #64
 1298              	.LVL148:
 1299              	.LBB499:
 1300              	.LBB500:
 1301              		.loc 2 1206 0 discriminator 1
 1302 0074 0832     		adds	r2, r2, #8
 1303              	.LVL149:
 1304              		.syntax unified
 1305              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1306 0076 42E80031 		strex r1, r3, [r2]
 1307              	@ 0 "" 2
 1308              	.LVL150:
 1309              		.thumb
 1310              		.syntax unified
 1311              	.LBE500:
 1312              	.LBE499:
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1313              		.loc 1 1628 0 discriminator 1
 1314 007a 0029     		cmp	r1, #0
 1315 007c F3D1     		bne	.L65
 1316              	.LVL151:
 1317              	.L61:
 1318              	.LBE496:
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1319              		.loc 1 1631 0
 1320 007e 0023     		movs	r3, #0
 1321 0080 80F87430 		strb	r3, [r0, #116]
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1322              		.loc 1 1633 0
 1323 0084 1846     		mov	r0, r3
 1324              	.LVL152:
ARM GAS  /tmp/cc9Y1vpF.s 			page 122


 1325 0086 7047     		bx	lr
 1326              	.LVL153:
 1327              	.L66:
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1328              		.loc 1 1608 0
 1329 0088 0220     		movs	r0, #2
 1330              	.LVL154:
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1331              		.loc 1 1634 0
 1332 008a 7047     		bx	lr
 1333              		.cfi_endproc
 1334              	.LFE146:
 1336              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1337              		.align	2
 1338              		.global	HAL_UART_DMAStop
 1339              		.thumb
 1340              		.thumb_func
 1342              	HAL_UART_DMAStop:
 1343              	.LFB147:
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1344              		.loc 1 1642 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348              	.LVL155:
 1349 0000 38B5     		push	{r3, r4, r5, lr}
 1350              	.LCFI5:
 1351              		.cfi_def_cfa_offset 16
 1352              		.cfi_offset 3, -16
 1353              		.cfi_offset 4, -12
 1354              		.cfi_offset 5, -8
 1355              		.cfi_offset 14, -4
 1356 0002 0446     		mov	r4, r0
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1357              		.loc 1 1650 0
 1358 0004 826F     		ldr	r2, [r0, #120]
 1359              	.LVL156:
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1360              		.loc 1 1651 0
 1361 0006 C56F     		ldr	r5, [r0, #124]
 1362              	.LVL157:
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1363              		.loc 1 1654 0
 1364 0008 0368     		ldr	r3, [r0]
 1365 000a 9B68     		ldr	r3, [r3, #8]
 1366 000c 13F0800F 		tst	r3, #128
 1367 0010 1FD0     		beq	.L68
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1368              		.loc 1 1654 0 is_stmt 0 discriminator 1
 1369 0012 212A     		cmp	r2, #33
 1370 0014 1DD1     		bne	.L68
 1371              	.LVL158:
 1372              	.L69:
 1373              	.LBB501:
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1374              		.loc 1 1657 0 is_stmt 1 discriminator 1
 1375 0016 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc9Y1vpF.s 			page 123


 1376              	.LVL159:
 1377              	.LBB502:
 1378              	.LBB503:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1379              		.loc 2 1155 0 discriminator 1
 1380 0018 02F10803 		add	r3, r2, #8
 1381              	.LVL160:
 1382              		.syntax unified
 1383              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1384 001c 53E8003F 		ldrex r3, [r3]
 1385              	@ 0 "" 2
 1386              	.LVL161:
 1387              		.thumb
 1388              		.syntax unified
 1389              	.LBE503:
 1390              	.LBE502:
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1391              		.loc 1 1657 0 discriminator 1
 1392 0020 23F08003 		bic	r3, r3, #128
 1393              	.LVL162:
 1394              	.LBB504:
 1395              	.LBB505:
 1396              		.loc 2 1206 0 discriminator 1
 1397 0024 0832     		adds	r2, r2, #8
 1398              	.LVL163:
 1399              		.syntax unified
 1400              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1401 0026 42E80031 		strex r1, r3, [r2]
 1402              	@ 0 "" 2
 1403              	.LVL164:
 1404              		.thumb
 1405              		.syntax unified
 1406              	.LBE505:
 1407              	.LBE504:
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1408              		.loc 1 1657 0 discriminator 1
 1409 002a 0029     		cmp	r1, #0
 1410 002c F3D1     		bne	.L69
 1411              	.LBE501:
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1412              		.loc 1 1660 0
 1413 002e E06E     		ldr	r0, [r4, #108]
 1414              	.LVL165:
 1415 0030 60B1     		cbz	r0, .L70
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1416              		.loc 1 1662 0
 1417 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 1418              	.LVL166:
 1419 0036 48B1     		cbz	r0, .L70
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1420              		.loc 1 1664 0
 1421 0038 E06E     		ldr	r0, [r4, #108]
 1422 003a FFF7FEFF 		bl	HAL_DMA_GetError
 1423              	.LVL167:
 1424 003e 2028     		cmp	r0, #32
 1425 0040 04D1     		bne	.L70
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 124


 1426              		.loc 1 1667 0
 1427 0042 1023     		movs	r3, #16
 1428 0044 C4F88030 		str	r3, [r4, #128]
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1429              		.loc 1 1669 0
 1430 0048 0320     		movs	r0, #3
 1431 004a 38BD     		pop	{r3, r4, r5, pc}
 1432              	.LVL168:
 1433              	.L70:
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1434              		.loc 1 1674 0
 1435 004c 2046     		mov	r0, r4
 1436 004e FFF7FEFF 		bl	UART_EndTxTransfer
 1437              	.LVL169:
 1438              	.L68:
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1439              		.loc 1 1678 0
 1440 0052 2368     		ldr	r3, [r4]
 1441 0054 9B68     		ldr	r3, [r3, #8]
 1442 0056 13F0400F 		tst	r3, #64
 1443 005a 21D0     		beq	.L74
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1444              		.loc 1 1678 0 is_stmt 0 discriminator 1
 1445 005c 222D     		cmp	r5, #34
 1446 005e 21D1     		bne	.L75
 1447              	.L72:
 1448              	.LBB506:
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1449              		.loc 1 1681 0 is_stmt 1 discriminator 1
 1450 0060 2268     		ldr	r2, [r4]
 1451              	.LVL170:
 1452              	.LBB507:
 1453              	.LBB508:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1454              		.loc 2 1155 0 discriminator 1
 1455 0062 02F10803 		add	r3, r2, #8
 1456              	.LVL171:
 1457              		.syntax unified
 1458              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1459 0066 53E8003F 		ldrex r3, [r3]
 1460              	@ 0 "" 2
 1461              	.LVL172:
 1462              		.thumb
 1463              		.syntax unified
 1464              	.LBE508:
 1465              	.LBE507:
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1466              		.loc 1 1681 0 discriminator 1
 1467 006a 23F04003 		bic	r3, r3, #64
 1468              	.LVL173:
 1469              	.LBB509:
 1470              	.LBB510:
 1471              		.loc 2 1206 0 discriminator 1
 1472 006e 0832     		adds	r2, r2, #8
 1473              	.LVL174:
 1474              		.syntax unified
 1475              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 125


 1476 0070 42E80031 		strex r1, r3, [r2]
 1477              	@ 0 "" 2
 1478              	.LVL175:
 1479              		.thumb
 1480              		.syntax unified
 1481              	.LBE510:
 1482              	.LBE509:
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1483              		.loc 1 1681 0 discriminator 1
 1484 0074 0029     		cmp	r1, #0
 1485 0076 F3D1     		bne	.L72
 1486              	.LBE506:
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1487              		.loc 1 1684 0
 1488 0078 206F     		ldr	r0, [r4, #112]
 1489 007a 60B1     		cbz	r0, .L73
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1490              		.loc 1 1686 0
 1491 007c FFF7FEFF 		bl	HAL_DMA_Abort
 1492              	.LVL176:
 1493 0080 48B1     		cbz	r0, .L73
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1494              		.loc 1 1688 0
 1495 0082 206F     		ldr	r0, [r4, #112]
 1496 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 1497              	.LVL177:
 1498 0088 2028     		cmp	r0, #32
 1499 008a 04D1     		bne	.L73
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1500              		.loc 1 1691 0
 1501 008c 1023     		movs	r3, #16
 1502 008e C4F88030 		str	r3, [r4, #128]
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1503              		.loc 1 1693 0
 1504 0092 0320     		movs	r0, #3
 1505 0094 38BD     		pop	{r3, r4, r5, pc}
 1506              	.LVL178:
 1507              	.L73:
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1508              		.loc 1 1698 0
 1509 0096 2046     		mov	r0, r4
 1510 0098 FFF7FEFF 		bl	UART_EndRxTransfer
 1511              	.LVL179:
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1512              		.loc 1 1701 0
 1513 009c 0020     		movs	r0, #0
 1514 009e 38BD     		pop	{r3, r4, r5, pc}
 1515              	.LVL180:
 1516              	.L74:
 1517 00a0 0020     		movs	r0, #0
 1518 00a2 38BD     		pop	{r3, r4, r5, pc}
 1519              	.LVL181:
 1520              	.L75:
 1521 00a4 0020     		movs	r0, #0
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1522              		.loc 1 1702 0
 1523 00a6 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc9Y1vpF.s 			page 126


 1524              		.cfi_endproc
 1525              	.LFE147:
 1527              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1528              		.align	2
 1529              		.global	HAL_UART_Abort
 1530              		.thumb
 1531              		.thumb_func
 1533              	HAL_UART_Abort:
 1534              	.LFB148:
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1535              		.loc 1 1717 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 1539              	.LVL182:
 1540 0000 10B5     		push	{r4, lr}
 1541              	.LCFI6:
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 4, -8
 1544              		.cfi_offset 14, -4
 1545 0002 0446     		mov	r4, r0
 1546              	.L78:
 1547              	.LBB511:
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1548              		.loc 1 1725 0 discriminator 1
 1549 0004 2268     		ldr	r2, [r4]
 1550              	.LVL183:
 1551              	.LBB512:
 1552              	.LBB513:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1553              		.loc 2 1155 0 discriminator 1
 1554              		.syntax unified
 1555              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1556 0006 52E8003F 		ldrex r3, [r2]
 1557              	@ 0 "" 2
 1558              	.LVL184:
 1559              		.thumb
 1560              		.syntax unified
 1561              	.LBE513:
 1562              	.LBE512:
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1563              		.loc 1 1725 0 discriminator 1
 1564 000a 23F4F073 		bic	r3, r3, #480
 1565              	.LVL185:
 1566              	.LBB514:
 1567              	.LBB515:
 1568              		.loc 2 1206 0 discriminator 1
 1569              		.syntax unified
 1570              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1571 000e 42E80031 		strex r1, r3, [r2]
 1572              	@ 0 "" 2
 1573              	.LVL186:
 1574              		.thumb
 1575              		.syntax unified
 1576              	.LBE515:
 1577              	.LBE514:
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/cc9Y1vpF.s 			page 127


 1578              		.loc 1 1725 0 discriminator 1
 1579 0012 0029     		cmp	r1, #0
 1580 0014 F6D1     		bne	.L78
 1581              	.LVL187:
 1582              	.L79:
 1583              	.LBE511:
 1584              	.LBB516:
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1585              		.loc 1 1726 0 discriminator 1
 1586 0016 2268     		ldr	r2, [r4]
 1587              	.LVL188:
 1588              	.LBB517:
 1589              	.LBB518:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1590              		.loc 2 1155 0 discriminator 1
 1591 0018 02F10803 		add	r3, r2, #8
 1592              	.LVL189:
 1593              		.syntax unified
 1594              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1595 001c 53E8003F 		ldrex r3, [r3]
 1596              	@ 0 "" 2
 1597              	.LVL190:
 1598              		.thumb
 1599              		.syntax unified
 1600              	.LBE518:
 1601              	.LBE517:
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1602              		.loc 1 1726 0 discriminator 1
 1603 0020 23F00103 		bic	r3, r3, #1
 1604              	.LVL191:
 1605              	.LBB519:
 1606              	.LBB520:
 1607              		.loc 2 1206 0 discriminator 1
 1608 0024 0832     		adds	r2, r2, #8
 1609              	.LVL192:
 1610              		.syntax unified
 1611              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1612 0026 42E80031 		strex r1, r3, [r2]
 1613              	@ 0 "" 2
 1614              	.LVL193:
 1615              		.thumb
 1616              		.syntax unified
 1617              	.LBE520:
 1618              	.LBE519:
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1619              		.loc 1 1726 0 discriminator 1
 1620 002a 0029     		cmp	r1, #0
 1621 002c F3D1     		bne	.L79
 1622              	.LBE516:
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1623              		.loc 1 1730 0
 1624 002e 236E     		ldr	r3, [r4, #96]
 1625              	.LVL194:
 1626 0030 012B     		cmp	r3, #1
 1627 0032 08D1     		bne	.L80
 1628              	.L81:
 1629              	.LBB521:
ARM GAS  /tmp/cc9Y1vpF.s 			page 128


1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1630              		.loc 1 1732 0 discriminator 1
 1631 0034 2268     		ldr	r2, [r4]
 1632              	.LVL195:
 1633              	.LBB522:
 1634              	.LBB523:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1635              		.loc 2 1155 0 discriminator 1
 1636              		.syntax unified
 1637              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1638 0036 52E8003F 		ldrex r3, [r2]
 1639              	@ 0 "" 2
 1640              	.LVL196:
 1641              		.thumb
 1642              		.syntax unified
 1643              	.LBE523:
 1644              	.LBE522:
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1645              		.loc 1 1732 0 discriminator 1
 1646 003a 23F01003 		bic	r3, r3, #16
 1647              	.LVL197:
 1648              	.LBB524:
 1649              	.LBB525:
 1650              		.loc 2 1206 0 discriminator 1
 1651              		.syntax unified
 1652              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1653 003e 42E80031 		strex r1, r3, [r2]
 1654              	@ 0 "" 2
 1655              	.LVL198:
 1656              		.thumb
 1657              		.syntax unified
 1658              	.LBE525:
 1659              	.LBE524:
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1660              		.loc 1 1732 0 discriminator 1
 1661 0042 0029     		cmp	r1, #0
 1662 0044 F6D1     		bne	.L81
 1663              	.LVL199:
 1664              	.L80:
 1665              	.LBE521:
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1666              		.loc 1 1736 0
 1667 0046 2368     		ldr	r3, [r4]
 1668 0048 9B68     		ldr	r3, [r3, #8]
 1669 004a 13F0800F 		tst	r3, #128
 1670 004e 1DD0     		beq	.L82
 1671              	.L83:
 1672              	.LBB526:
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1673              		.loc 1 1739 0 discriminator 1
 1674 0050 2268     		ldr	r2, [r4]
 1675              	.LVL200:
 1676              	.LBB527:
 1677              	.LBB528:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1678              		.loc 2 1155 0 discriminator 1
 1679 0052 02F10803 		add	r3, r2, #8
ARM GAS  /tmp/cc9Y1vpF.s 			page 129


 1680              	.LVL201:
 1681              		.syntax unified
 1682              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1683 0056 53E8003F 		ldrex r3, [r3]
 1684              	@ 0 "" 2
 1685              	.LVL202:
 1686              		.thumb
 1687              		.syntax unified
 1688              	.LBE528:
 1689              	.LBE527:
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1690              		.loc 1 1739 0 discriminator 1
 1691 005a 23F08003 		bic	r3, r3, #128
 1692              	.LVL203:
 1693              	.LBB529:
 1694              	.LBB530:
 1695              		.loc 2 1206 0 discriminator 1
 1696 005e 0832     		adds	r2, r2, #8
 1697              	.LVL204:
 1698              		.syntax unified
 1699              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1700 0060 42E80031 		strex r1, r3, [r2]
 1701              	@ 0 "" 2
 1702              	.LVL205:
 1703              		.thumb
 1704              		.syntax unified
 1705              	.LBE530:
 1706              	.LBE529:
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1707              		.loc 1 1739 0 discriminator 1
 1708 0064 0029     		cmp	r1, #0
 1709 0066 F3D1     		bne	.L83
 1710              	.LBE526:
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1711              		.loc 1 1742 0
 1712 0068 E36E     		ldr	r3, [r4, #108]
 1713              	.LVL206:
 1714 006a 7BB1     		cbz	r3, .L82
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1715              		.loc 1 1746 0
 1716 006c 0022     		movs	r2, #0
 1717 006e 9A63     		str	r2, [r3, #56]
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1718              		.loc 1 1748 0
 1719 0070 E06E     		ldr	r0, [r4, #108]
 1720              	.LVL207:
 1721 0072 FFF7FEFF 		bl	HAL_DMA_Abort
 1722              	.LVL208:
 1723 0076 48B1     		cbz	r0, .L82
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1724              		.loc 1 1750 0
 1725 0078 E06E     		ldr	r0, [r4, #108]
 1726 007a FFF7FEFF 		bl	HAL_DMA_GetError
 1727              	.LVL209:
 1728 007e 2028     		cmp	r0, #32
 1729 0080 04D1     		bne	.L82
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 130


 1730              		.loc 1 1753 0
 1731 0082 1023     		movs	r3, #16
 1732 0084 C4F88030 		str	r3, [r4, #128]
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1733              		.loc 1 1755 0
 1734 0088 0320     		movs	r0, #3
 1735 008a 10BD     		pop	{r4, pc}
 1736              	.LVL210:
 1737              	.L82:
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1738              		.loc 1 1762 0
 1739 008c 2368     		ldr	r3, [r4]
 1740 008e 9B68     		ldr	r3, [r3, #8]
 1741 0090 13F0400F 		tst	r3, #64
 1742 0094 1DD0     		beq	.L85
 1743              	.L86:
 1744              	.LBB531:
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1745              		.loc 1 1765 0 discriminator 1
 1746 0096 2268     		ldr	r2, [r4]
 1747              	.LVL211:
 1748              	.LBB532:
 1749              	.LBB533:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1750              		.loc 2 1155 0 discriminator 1
 1751 0098 02F10803 		add	r3, r2, #8
 1752              	.LVL212:
 1753              		.syntax unified
 1754              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1755 009c 53E8003F 		ldrex r3, [r3]
 1756              	@ 0 "" 2
 1757              	.LVL213:
 1758              		.thumb
 1759              		.syntax unified
 1760              	.LBE533:
 1761              	.LBE532:
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1762              		.loc 1 1765 0 discriminator 1
 1763 00a0 23F04003 		bic	r3, r3, #64
 1764              	.LVL214:
 1765              	.LBB534:
 1766              	.LBB535:
 1767              		.loc 2 1206 0 discriminator 1
 1768 00a4 0832     		adds	r2, r2, #8
 1769              	.LVL215:
 1770              		.syntax unified
 1771              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1772 00a6 42E80031 		strex r1, r3, [r2]
 1773              	@ 0 "" 2
 1774              	.LVL216:
 1775              		.thumb
 1776              		.syntax unified
 1777              	.LBE535:
 1778              	.LBE534:
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1779              		.loc 1 1765 0 discriminator 1
 1780 00aa 0029     		cmp	r1, #0
ARM GAS  /tmp/cc9Y1vpF.s 			page 131


 1781 00ac F3D1     		bne	.L86
 1782              	.LBE531:
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1783              		.loc 1 1768 0
 1784 00ae 236F     		ldr	r3, [r4, #112]
 1785              	.LVL217:
 1786 00b0 7BB1     		cbz	r3, .L85
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1787              		.loc 1 1772 0
 1788 00b2 0022     		movs	r2, #0
 1789 00b4 9A63     		str	r2, [r3, #56]
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1790              		.loc 1 1774 0
 1791 00b6 206F     		ldr	r0, [r4, #112]
 1792 00b8 FFF7FEFF 		bl	HAL_DMA_Abort
 1793              	.LVL218:
 1794 00bc 48B1     		cbz	r0, .L85
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1795              		.loc 1 1776 0
 1796 00be 206F     		ldr	r0, [r4, #112]
 1797 00c0 FFF7FEFF 		bl	HAL_DMA_GetError
 1798              	.LVL219:
 1799 00c4 2028     		cmp	r0, #32
 1800 00c6 04D1     		bne	.L85
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1801              		.loc 1 1779 0
 1802 00c8 1023     		movs	r3, #16
 1803 00ca C4F88030 		str	r3, [r4, #128]
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1804              		.loc 1 1781 0
 1805 00ce 0320     		movs	r0, #3
 1806 00d0 10BD     		pop	{r4, pc}
 1807              	.LVL220:
 1808              	.L85:
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1809              		.loc 1 1788 0
 1810 00d2 0020     		movs	r0, #0
 1811 00d4 A4F85200 		strh	r0, [r4, #82]	@ movhi
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1812              		.loc 1 1789 0
 1813 00d8 A4F85A00 		strh	r0, [r4, #90]	@ movhi
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1814              		.loc 1 1792 0
 1815 00dc 2368     		ldr	r3, [r4]
 1816 00de 0F22     		movs	r2, #15
 1817 00e0 1A62     		str	r2, [r3, #32]
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1818              		.loc 1 1803 0
 1819 00e2 2268     		ldr	r2, [r4]
 1820 00e4 138B     		ldrh	r3, [r2, #24]
 1821 00e6 9BB2     		uxth	r3, r3
 1822 00e8 43F00803 		orr	r3, r3, #8
 1823 00ec 1383     		strh	r3, [r2, #24]	@ movhi
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1824              		.loc 1 1806 0
 1825 00ee 2023     		movs	r3, #32
 1826 00f0 A367     		str	r3, [r4, #120]
ARM GAS  /tmp/cc9Y1vpF.s 			page 132


1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1827              		.loc 1 1807 0
 1828 00f2 E367     		str	r3, [r4, #124]
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1829              		.loc 1 1808 0
 1830 00f4 2066     		str	r0, [r4, #96]
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1831              		.loc 1 1810 0
 1832 00f6 C4F88000 		str	r0, [r4, #128]
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1833              		.loc 1 1813 0
 1834 00fa 10BD     		pop	{r4, pc}
 1835              		.cfi_endproc
 1836              	.LFE148:
 1838              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1839              		.align	2
 1840              		.global	HAL_UART_AbortTransmit
 1841              		.thumb
 1842              		.thumb_func
 1844              	HAL_UART_AbortTransmit:
 1845              	.LFB149:
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1846              		.loc 1 1828 0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 1850              	.LVL221:
 1851 0000 10B5     		push	{r4, lr}
 1852              	.LCFI7:
 1853              		.cfi_def_cfa_offset 8
 1854              		.cfi_offset 4, -8
 1855              		.cfi_offset 14, -4
 1856 0002 0446     		mov	r4, r0
 1857              	.L89:
 1858              	.LBB536:
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1859              		.loc 1 1835 0 discriminator 1
 1860 0004 2268     		ldr	r2, [r4]
 1861              	.LVL222:
 1862              	.LBB537:
 1863              	.LBB538:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1864              		.loc 2 1155 0 discriminator 1
 1865              		.syntax unified
 1866              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1867 0006 52E8003F 		ldrex r3, [r2]
 1868              	@ 0 "" 2
 1869              	.LVL223:
 1870              		.thumb
 1871              		.syntax unified
 1872              	.LBE538:
 1873              	.LBE537:
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1874              		.loc 1 1835 0 discriminator 1
 1875 000a 23F0C003 		bic	r3, r3, #192
 1876              	.LVL224:
 1877              	.LBB539:
ARM GAS  /tmp/cc9Y1vpF.s 			page 133


 1878              	.LBB540:
 1879              		.loc 2 1206 0 discriminator 1
 1880              		.syntax unified
 1881              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1882 000e 42E80031 		strex r1, r3, [r2]
 1883              	@ 0 "" 2
 1884              	.LVL225:
 1885              		.thumb
 1886              		.syntax unified
 1887              	.LBE540:
 1888              	.LBE539:
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1889              		.loc 1 1835 0 discriminator 1
 1890 0012 0029     		cmp	r1, #0
 1891 0014 F6D1     		bne	.L89
 1892              	.LBE536:
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1893              		.loc 1 1839 0
 1894 0016 2368     		ldr	r3, [r4]
 1895              	.LVL226:
 1896 0018 9B68     		ldr	r3, [r3, #8]
 1897 001a 13F0800F 		tst	r3, #128
 1898 001e 1DD0     		beq	.L90
 1899              	.L91:
 1900              	.LBB541:
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1901              		.loc 1 1842 0 discriminator 1
 1902 0020 2268     		ldr	r2, [r4]
 1903              	.LVL227:
 1904              	.LBB542:
 1905              	.LBB543:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1906              		.loc 2 1155 0 discriminator 1
 1907 0022 02F10803 		add	r3, r2, #8
 1908              	.LVL228:
 1909              		.syntax unified
 1910              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1911 0026 53E8003F 		ldrex r3, [r3]
 1912              	@ 0 "" 2
 1913              	.LVL229:
 1914              		.thumb
 1915              		.syntax unified
 1916              	.LBE543:
 1917              	.LBE542:
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1918              		.loc 1 1842 0 discriminator 1
 1919 002a 23F08003 		bic	r3, r3, #128
 1920              	.LVL230:
 1921              	.LBB544:
 1922              	.LBB545:
 1923              		.loc 2 1206 0 discriminator 1
 1924 002e 0832     		adds	r2, r2, #8
 1925              	.LVL231:
 1926              		.syntax unified
 1927              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1928 0030 42E80031 		strex r1, r3, [r2]
 1929              	@ 0 "" 2
ARM GAS  /tmp/cc9Y1vpF.s 			page 134


 1930              	.LVL232:
 1931              		.thumb
 1932              		.syntax unified
 1933              	.LBE545:
 1934              	.LBE544:
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1935              		.loc 1 1842 0 discriminator 1
 1936 0034 0029     		cmp	r1, #0
 1937 0036 F3D1     		bne	.L91
 1938              	.LBE541:
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1939              		.loc 1 1845 0
 1940 0038 E36E     		ldr	r3, [r4, #108]
 1941              	.LVL233:
 1942 003a 7BB1     		cbz	r3, .L90
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1943              		.loc 1 1849 0
 1944 003c 0022     		movs	r2, #0
 1945 003e 9A63     		str	r2, [r3, #56]
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1946              		.loc 1 1851 0
 1947 0040 E06E     		ldr	r0, [r4, #108]
 1948              	.LVL234:
 1949 0042 FFF7FEFF 		bl	HAL_DMA_Abort
 1950              	.LVL235:
 1951 0046 48B1     		cbz	r0, .L90
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1952              		.loc 1 1853 0
 1953 0048 E06E     		ldr	r0, [r4, #108]
 1954 004a FFF7FEFF 		bl	HAL_DMA_GetError
 1955              	.LVL236:
 1956 004e 2028     		cmp	r0, #32
 1957 0050 04D1     		bne	.L90
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1958              		.loc 1 1856 0
 1959 0052 1023     		movs	r3, #16
 1960 0054 C4F88030 		str	r3, [r4, #128]
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1961              		.loc 1 1858 0
 1962 0058 0320     		movs	r0, #3
 1963 005a 10BD     		pop	{r4, pc}
 1964              	.LVL237:
 1965              	.L90:
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1966              		.loc 1 1865 0
 1967 005c 0020     		movs	r0, #0
 1968 005e A4F85200 		strh	r0, [r4, #82]	@ movhi
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1969              		.loc 1 1876 0
 1970 0062 2023     		movs	r3, #32
 1971 0064 A367     		str	r3, [r4, #120]
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1972              		.loc 1 1879 0
 1973 0066 10BD     		pop	{r4, pc}
 1974              		.cfi_endproc
 1975              	.LFE149:
 1977              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
ARM GAS  /tmp/cc9Y1vpF.s 			page 135


 1978              		.align	2
 1979              		.global	HAL_UART_AbortReceive
 1980              		.thumb
 1981              		.thumb_func
 1983              	HAL_UART_AbortReceive:
 1984              	.LFB150:
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1985              		.loc 1 1894 0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 0
 1988              		@ frame_needed = 0, uses_anonymous_args = 0
 1989              	.LVL238:
 1990 0000 10B5     		push	{r4, lr}
 1991              	.LCFI8:
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 4, -8
 1994              		.cfi_offset 14, -4
 1995 0002 0446     		mov	r4, r0
 1996              	.L95:
 1997              	.LBB546:
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1998              		.loc 1 1901 0 discriminator 1
 1999 0004 2268     		ldr	r2, [r4]
 2000              	.LVL239:
 2001              	.LBB547:
 2002              	.LBB548:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2003              		.loc 2 1155 0 discriminator 1
 2004              		.syntax unified
 2005              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2006 0006 52E8003F 		ldrex r3, [r2]
 2007              	@ 0 "" 2
 2008              	.LVL240:
 2009              		.thumb
 2010              		.syntax unified
 2011              	.LBE548:
 2012              	.LBE547:
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2013              		.loc 1 1901 0 discriminator 1
 2014 000a 23F49073 		bic	r3, r3, #288
 2015              	.LVL241:
 2016              	.LBB549:
 2017              	.LBB550:
 2018              		.loc 2 1206 0 discriminator 1
 2019              		.syntax unified
 2020              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2021 000e 42E80031 		strex r1, r3, [r2]
 2022              	@ 0 "" 2
 2023              	.LVL242:
 2024              		.thumb
 2025              		.syntax unified
 2026              	.LBE550:
 2027              	.LBE549:
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2028              		.loc 1 1901 0 discriminator 1
 2029 0012 0029     		cmp	r1, #0
 2030 0014 F6D1     		bne	.L95
ARM GAS  /tmp/cc9Y1vpF.s 			page 136


 2031              	.LVL243:
 2032              	.L96:
 2033              	.LBE546:
 2034              	.LBB551:
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2035              		.loc 1 1902 0 discriminator 1
 2036 0016 2268     		ldr	r2, [r4]
 2037              	.LVL244:
 2038              	.LBB552:
 2039              	.LBB553:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2040              		.loc 2 1155 0 discriminator 1
 2041 0018 02F10803 		add	r3, r2, #8
 2042              	.LVL245:
 2043              		.syntax unified
 2044              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2045 001c 53E8003F 		ldrex r3, [r3]
 2046              	@ 0 "" 2
 2047              	.LVL246:
 2048              		.thumb
 2049              		.syntax unified
 2050              	.LBE553:
 2051              	.LBE552:
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2052              		.loc 1 1902 0 discriminator 1
 2053 0020 23F00103 		bic	r3, r3, #1
 2054              	.LVL247:
 2055              	.LBB554:
 2056              	.LBB555:
 2057              		.loc 2 1206 0 discriminator 1
 2058 0024 0832     		adds	r2, r2, #8
 2059              	.LVL248:
 2060              		.syntax unified
 2061              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2062 0026 42E80031 		strex r1, r3, [r2]
 2063              	@ 0 "" 2
 2064              	.LVL249:
 2065              		.thumb
 2066              		.syntax unified
 2067              	.LBE555:
 2068              	.LBE554:
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2069              		.loc 1 1902 0 discriminator 1
 2070 002a 0029     		cmp	r1, #0
 2071 002c F3D1     		bne	.L96
 2072              	.LBE551:
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2073              		.loc 1 1906 0
 2074 002e 236E     		ldr	r3, [r4, #96]
 2075              	.LVL250:
 2076 0030 012B     		cmp	r3, #1
 2077 0032 08D1     		bne	.L97
 2078              	.L98:
 2079              	.LBB556:
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2080              		.loc 1 1908 0 discriminator 1
 2081 0034 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc9Y1vpF.s 			page 137


 2082              	.LVL251:
 2083              	.LBB557:
 2084              	.LBB558:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2085              		.loc 2 1155 0 discriminator 1
 2086              		.syntax unified
 2087              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2088 0036 52E8003F 		ldrex r3, [r2]
 2089              	@ 0 "" 2
 2090              	.LVL252:
 2091              		.thumb
 2092              		.syntax unified
 2093              	.LBE558:
 2094              	.LBE557:
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2095              		.loc 1 1908 0 discriminator 1
 2096 003a 23F01003 		bic	r3, r3, #16
 2097              	.LVL253:
 2098              	.LBB559:
 2099              	.LBB560:
 2100              		.loc 2 1206 0 discriminator 1
 2101              		.syntax unified
 2102              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2103 003e 42E80031 		strex r1, r3, [r2]
 2104              	@ 0 "" 2
 2105              	.LVL254:
 2106              		.thumb
 2107              		.syntax unified
 2108              	.LBE560:
 2109              	.LBE559:
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2110              		.loc 1 1908 0 discriminator 1
 2111 0042 0029     		cmp	r1, #0
 2112 0044 F6D1     		bne	.L98
 2113              	.LVL255:
 2114              	.L97:
 2115              	.LBE556:
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2116              		.loc 1 1912 0
 2117 0046 2368     		ldr	r3, [r4]
 2118 0048 9B68     		ldr	r3, [r3, #8]
 2119 004a 13F0400F 		tst	r3, #64
 2120 004e 1DD0     		beq	.L99
 2121              	.L100:
 2122              	.LBB561:
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2123              		.loc 1 1915 0 discriminator 1
 2124 0050 2268     		ldr	r2, [r4]
 2125              	.LVL256:
 2126              	.LBB562:
 2127              	.LBB563:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2128              		.loc 2 1155 0 discriminator 1
 2129 0052 02F10803 		add	r3, r2, #8
 2130              	.LVL257:
 2131              		.syntax unified
 2132              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 138


 2133 0056 53E8003F 		ldrex r3, [r3]
 2134              	@ 0 "" 2
 2135              	.LVL258:
 2136              		.thumb
 2137              		.syntax unified
 2138              	.LBE563:
 2139              	.LBE562:
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2140              		.loc 1 1915 0 discriminator 1
 2141 005a 23F04003 		bic	r3, r3, #64
 2142              	.LVL259:
 2143              	.LBB564:
 2144              	.LBB565:
 2145              		.loc 2 1206 0 discriminator 1
 2146 005e 0832     		adds	r2, r2, #8
 2147              	.LVL260:
 2148              		.syntax unified
 2149              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2150 0060 42E80031 		strex r1, r3, [r2]
 2151              	@ 0 "" 2
 2152              	.LVL261:
 2153              		.thumb
 2154              		.syntax unified
 2155              	.LBE565:
 2156              	.LBE564:
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2157              		.loc 1 1915 0 discriminator 1
 2158 0064 0029     		cmp	r1, #0
 2159 0066 F3D1     		bne	.L100
 2160              	.LBE561:
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2161              		.loc 1 1918 0
 2162 0068 236F     		ldr	r3, [r4, #112]
 2163              	.LVL262:
 2164 006a 7BB1     		cbz	r3, .L99
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2165              		.loc 1 1922 0
 2166 006c 0022     		movs	r2, #0
 2167 006e 9A63     		str	r2, [r3, #56]
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2168              		.loc 1 1924 0
 2169 0070 206F     		ldr	r0, [r4, #112]
 2170              	.LVL263:
 2171 0072 FFF7FEFF 		bl	HAL_DMA_Abort
 2172              	.LVL264:
 2173 0076 48B1     		cbz	r0, .L99
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 2174              		.loc 1 1926 0
 2175 0078 206F     		ldr	r0, [r4, #112]
 2176 007a FFF7FEFF 		bl	HAL_DMA_GetError
 2177              	.LVL265:
 2178 007e 2028     		cmp	r0, #32
 2179 0080 04D1     		bne	.L99
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2180              		.loc 1 1929 0
 2181 0082 1023     		movs	r3, #16
 2182 0084 C4F88030 		str	r3, [r4, #128]
ARM GAS  /tmp/cc9Y1vpF.s 			page 139


1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 2183              		.loc 1 1931 0
 2184 0088 0320     		movs	r0, #3
 2185 008a 10BD     		pop	{r4, pc}
 2186              	.LVL266:
 2187              	.L99:
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2188              		.loc 1 1938 0
 2189 008c 0020     		movs	r0, #0
 2190 008e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2191              		.loc 1 1941 0
 2192 0092 2368     		ldr	r3, [r4]
 2193 0094 0F22     		movs	r2, #15
 2194 0096 1A62     		str	r2, [r3, #32]
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2195              		.loc 1 1944 0
 2196 0098 2268     		ldr	r2, [r4]
 2197 009a 138B     		ldrh	r3, [r2, #24]
 2198 009c 9BB2     		uxth	r3, r3
 2199 009e 43F00803 		orr	r3, r3, #8
 2200 00a2 1383     		strh	r3, [r2, #24]	@ movhi
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2201              		.loc 1 1947 0
 2202 00a4 2023     		movs	r3, #32
 2203 00a6 E367     		str	r3, [r4, #124]
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2204              		.loc 1 1948 0
 2205 00a8 2066     		str	r0, [r4, #96]
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2206              		.loc 1 1951 0
 2207 00aa 10BD     		pop	{r4, pc}
 2208              		.cfi_endproc
 2209              	.LFE150:
 2211              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2212              		.align	2
 2213              		.weak	HAL_UART_TxCpltCallback
 2214              		.thumb
 2215              		.thumb_func
 2217              	HAL_UART_TxCpltCallback:
 2218              	.LFB155:
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2219              		.loc 1 2680 0
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 0, uses_anonymous_args = 0
 2223              		@ link register save eliminated.
 2224              	.LVL267:
 2225 0000 7047     		bx	lr
 2226              		.cfi_endproc
 2227              	.LFE155:
 2229 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2230              		.align	2
 2231              		.thumb
 2232              		.thumb_func
 2234              	UART_DMATransmitCplt:
 2235              	.LFB183:
ARM GAS  /tmp/cc9Y1vpF.s 			page 140


3812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2236              		.loc 1 3812 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240              	.LVL268:
3812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2241              		.loc 1 3812 0
 2242 0000 08B5     		push	{r3, lr}
 2243              	.LCFI9:
 2244              		.cfi_def_cfa_offset 8
 2245              		.cfi_offset 3, -8
 2246              		.cfi_offset 14, -4
3813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2247              		.loc 1 3813 0
 2248 0002 816A     		ldr	r1, [r0, #40]
 2249              	.LVL269:
3816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2250              		.loc 1 3816 0
 2251 0004 0368     		ldr	r3, [r0]
 2252 0006 1B68     		ldr	r3, [r3]
 2253 0008 13F0200F 		tst	r3, #32
 2254 000c 18D1     		bne	.L105
3818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2255              		.loc 1 3818 0
 2256 000e 0023     		movs	r3, #0
 2257 0010 A1F85230 		strh	r3, [r1, #82]	@ movhi
 2258              	.LVL270:
 2259              	.L106:
 2260              	.LBB566:
3822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2261              		.loc 1 3822 0 discriminator 1
 2262 0014 0A68     		ldr	r2, [r1]
 2263              	.LVL271:
 2264              	.LBB567:
 2265              	.LBB568:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2266              		.loc 2 1155 0 discriminator 1
 2267 0016 02F10803 		add	r3, r2, #8
 2268              	.LVL272:
 2269              		.syntax unified
 2270              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2271 001a 53E8003F 		ldrex r3, [r3]
 2272              	@ 0 "" 2
 2273              	.LVL273:
 2274              		.thumb
 2275              		.syntax unified
 2276              	.LBE568:
 2277              	.LBE567:
3822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2278              		.loc 1 3822 0 discriminator 1
 2279 001e 23F08003 		bic	r3, r3, #128
 2280              	.LVL274:
 2281              	.LBB569:
 2282              	.LBB570:
 2283              		.loc 2 1206 0 discriminator 1
 2284 0022 0832     		adds	r2, r2, #8
ARM GAS  /tmp/cc9Y1vpF.s 			page 141


 2285              	.LVL275:
 2286              		.syntax unified
 2287              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2288 0024 42E80030 		strex r0, r3, [r2]
 2289              	@ 0 "" 2
 2290              	.LVL276:
 2291              		.thumb
 2292              		.syntax unified
 2293              	.LBE570:
 2294              	.LBE569:
3822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2295              		.loc 1 3822 0 discriminator 1
 2296 0028 0028     		cmp	r0, #0
 2297 002a F3D1     		bne	.L106
 2298              	.LVL277:
 2299              	.L107:
 2300              	.LBE566:
 2301              	.LBB571:
3825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2302              		.loc 1 3825 0 discriminator 1
 2303 002c 0A68     		ldr	r2, [r1]
 2304              	.LVL278:
 2305              	.LBB572:
 2306              	.LBB573:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2307              		.loc 2 1155 0 discriminator 1
 2308              		.syntax unified
 2309              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2310 002e 52E8003F 		ldrex r3, [r2]
 2311              	@ 0 "" 2
 2312              	.LVL279:
 2313              		.thumb
 2314              		.syntax unified
 2315              	.LBE573:
 2316              	.LBE572:
3825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2317              		.loc 1 3825 0 discriminator 1
 2318 0032 43F04003 		orr	r3, r3, #64
 2319              	.LVL280:
 2320              	.LBB574:
 2321              	.LBB575:
 2322              		.loc 2 1206 0 discriminator 1
 2323              		.syntax unified
 2324              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2325 0036 42E80030 		strex r0, r3, [r2]
 2326              	@ 0 "" 2
 2327              	.LVL281:
 2328              		.thumb
 2329              		.syntax unified
 2330              	.LBE575:
 2331              	.LBE574:
3825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2332              		.loc 1 3825 0 discriminator 1
 2333 003a 0028     		cmp	r0, #0
 2334 003c F6D1     		bne	.L107
 2335 003e 08BD     		pop	{r3, pc}
 2336              	.LVL282:
ARM GAS  /tmp/cc9Y1vpF.s 			page 142


 2337              	.L105:
 2338              	.LBE571:
3835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2339              		.loc 1 3835 0
 2340 0040 0846     		mov	r0, r1
 2341              	.LVL283:
 2342 0042 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2343              	.LVL284:
 2344 0046 08BD     		pop	{r3, pc}
 2345              		.cfi_endproc
 2346              	.LFE183:
 2348              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2349              		.align	2
 2350              		.thumb
 2351              		.thumb_func
 2353              	UART_EndTransmit_IT:
 2354              	.LFB195:
4252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
4259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
4266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
4267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
4270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
4272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
4274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
4277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
4282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr++;
4287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
4288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
4290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
ARM GAS  /tmp/cc9Y1vpF.s 			page 143


4292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
4306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const uint16_t *tmp;
4307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
4308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
4311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
4313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
4315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
4318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
4323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (const uint16_t *) huart->pTxBuffPtr;
4327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
4329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
4330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
4332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
4334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
4342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
4343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
4344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
4347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2355              		.loc 1 4347 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 144


 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 0
 2358              		@ frame_needed = 0, uses_anonymous_args = 0
 2359              	.LVL285:
 2360 0000 08B5     		push	{r3, lr}
 2361              	.LCFI10:
 2362              		.cfi_def_cfa_offset 8
 2363              		.cfi_offset 3, -8
 2364              		.cfi_offset 14, -4
 2365              	.L111:
 2366              	.LBB576:
4348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
4349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 2367              		.loc 1 4349 0 discriminator 1
 2368 0002 0268     		ldr	r2, [r0]
 2369              	.LVL286:
 2370              	.LBB577:
 2371              	.LBB578:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2372              		.loc 2 1155 0 discriminator 1
 2373              		.syntax unified
 2374              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2375 0004 52E8003F 		ldrex r3, [r2]
 2376              	@ 0 "" 2
 2377              	.LVL287:
 2378              		.thumb
 2379              		.syntax unified
 2380              	.LBE578:
 2381              	.LBE577:
 2382              		.loc 1 4349 0 discriminator 1
 2383 0008 23F04003 		bic	r3, r3, #64
 2384              	.LVL288:
 2385              	.LBB579:
 2386              	.LBB580:
 2387              		.loc 2 1206 0 discriminator 1
 2388              		.syntax unified
 2389              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2390 000c 42E80031 		strex r1, r3, [r2]
 2391              	@ 0 "" 2
 2392              	.LVL289:
 2393              		.thumb
 2394              		.syntax unified
 2395              	.LBE580:
 2396              	.LBE579:
 2397              		.loc 1 4349 0 discriminator 1
 2398 0010 0029     		cmp	r1, #0
 2399 0012 F6D1     		bne	.L111
 2400              	.LBE576:
4350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
4352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2401              		.loc 1 4352 0
 2402 0014 2023     		movs	r3, #32
 2403              	.LVL290:
 2404 0016 8367     		str	r3, [r0, #120]
4353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
ARM GAS  /tmp/cc9Y1vpF.s 			page 145


4355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 2405              		.loc 1 4355 0
 2406 0018 0023     		movs	r3, #0
 2407 001a 8366     		str	r3, [r0, #104]
4356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
4359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
4360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
4362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 2408              		.loc 1 4362 0
 2409 001c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2410              	.LVL291:
 2411 0020 08BD     		pop	{r3, pc}
 2412              		.cfi_endproc
 2413              	.LFE195:
 2415 0022 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2416              		.align	2
 2417              		.weak	HAL_UART_TxHalfCpltCallback
 2418              		.thumb
 2419              		.thumb_func
 2421              	HAL_UART_TxHalfCpltCallback:
 2422              	.LFB156:
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2423              		.loc 1 2695 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 0
 2426              		@ frame_needed = 0, uses_anonymous_args = 0
 2427              		@ link register save eliminated.
 2428              	.LVL292:
 2429 0000 7047     		bx	lr
 2430              		.cfi_endproc
 2431              	.LFE156:
 2433 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2434              		.align	2
 2435              		.thumb
 2436              		.thumb_func
 2438              	UART_DMATxHalfCplt:
 2439              	.LFB184:
3846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2440              		.loc 1 3846 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 2444              	.LVL293:
3846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2445              		.loc 1 3846 0
 2446 0000 08B5     		push	{r3, lr}
 2447              	.LCFI11:
 2448              		.cfi_def_cfa_offset 8
 2449              		.cfi_offset 3, -8
 2450              		.cfi_offset 14, -4
 2451              	.LVL294:
3854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2452              		.loc 1 3854 0
 2453 0002 806A     		ldr	r0, [r0, #40]
ARM GAS  /tmp/cc9Y1vpF.s 			page 146


 2454              	.LVL295:
 2455 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2456              	.LVL296:
 2457 0008 08BD     		pop	{r3, pc}
 2458              		.cfi_endproc
 2459              	.LFE184:
 2461 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2462              		.align	2
 2463              		.weak	HAL_UART_RxCpltCallback
 2464              		.thumb
 2465              		.thumb_func
 2467              	HAL_UART_RxCpltCallback:
 2468              	.LFB157:
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2469              		.loc 1 2710 0
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 0
 2472              		@ frame_needed = 0, uses_anonymous_args = 0
 2473              		@ link register save eliminated.
 2474              	.LVL297:
 2475 0000 7047     		bx	lr
 2476              		.cfi_endproc
 2477              	.LFE157:
 2479 0002 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2480              		.align	2
 2481              		.weak	HAL_UART_RxHalfCpltCallback
 2482              		.thumb
 2483              		.thumb_func
 2485              	HAL_UART_RxHalfCpltCallback:
 2486              	.LFB158:
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2487              		.loc 1 2725 0
 2488              		.cfi_startproc
 2489              		@ args = 0, pretend = 0, frame = 0
 2490              		@ frame_needed = 0, uses_anonymous_args = 0
 2491              		@ link register save eliminated.
 2492              	.LVL298:
 2493 0000 7047     		bx	lr
 2494              		.cfi_endproc
 2495              	.LFE158:
 2497 0002 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2498              		.align	2
 2499              		.weak	HAL_UART_ErrorCallback
 2500              		.thumb
 2501              		.thumb_func
 2503              	HAL_UART_ErrorCallback:
 2504              	.LFB159:
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2505              		.loc 1 2740 0
 2506              		.cfi_startproc
 2507              		@ args = 0, pretend = 0, frame = 0
 2508              		@ frame_needed = 0, uses_anonymous_args = 0
 2509              		@ link register save eliminated.
 2510              	.LVL299:
 2511 0000 7047     		bx	lr
 2512              		.cfi_endproc
 2513              	.LFE159:
ARM GAS  /tmp/cc9Y1vpF.s 			page 147


 2515 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 2516              		.align	2
 2517              		.thumb
 2518              		.thumb_func
 2520              	UART_DMAError:
 2521              	.LFB187:
3955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2522              		.loc 1 3955 0
 2523              		.cfi_startproc
 2524              		@ args = 0, pretend = 0, frame = 0
 2525              		@ frame_needed = 0, uses_anonymous_args = 0
 2526              	.LVL300:
3955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2527              		.loc 1 3955 0
 2528 0000 38B5     		push	{r3, r4, r5, lr}
 2529              	.LCFI12:
 2530              		.cfi_def_cfa_offset 16
 2531              		.cfi_offset 3, -16
 2532              		.cfi_offset 4, -12
 2533              		.cfi_offset 5, -8
 2534              		.cfi_offset 14, -4
3956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2535              		.loc 1 3956 0
 2536 0002 846A     		ldr	r4, [r0, #40]
 2537              	.LVL301:
3958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2538              		.loc 1 3958 0
 2539 0004 A26F     		ldr	r2, [r4, #120]
 2540              	.LVL302:
3959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2541              		.loc 1 3959 0
 2542 0006 E56F     		ldr	r5, [r4, #124]
 2543              	.LVL303:
3962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2544              		.loc 1 3962 0
 2545 0008 2368     		ldr	r3, [r4]
 2546 000a 9B68     		ldr	r3, [r3, #8]
 2547 000c 13F0800F 		tst	r3, #128
 2548 0010 07D0     		beq	.L120
3962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2549              		.loc 1 3962 0 is_stmt 0 discriminator 1
 2550 0012 212A     		cmp	r2, #33
 2551 0014 05D1     		bne	.L120
3965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2552              		.loc 1 3965 0 is_stmt 1
 2553 0016 0023     		movs	r3, #0
 2554 0018 A4F85230 		strh	r3, [r4, #82]	@ movhi
3966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2555              		.loc 1 3966 0
 2556 001c 2046     		mov	r0, r4
 2557              	.LVL304:
 2558 001e FFF7FEFF 		bl	UART_EndTxTransfer
 2559              	.LVL305:
 2560              	.L120:
3970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2561              		.loc 1 3970 0
 2562 0022 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc9Y1vpF.s 			page 148


 2563 0024 9B68     		ldr	r3, [r3, #8]
 2564 0026 13F0400F 		tst	r3, #64
 2565 002a 07D0     		beq	.L121
3970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2566              		.loc 1 3970 0 is_stmt 0 discriminator 1
 2567 002c 222D     		cmp	r5, #34
 2568 002e 05D1     		bne	.L121
3973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2569              		.loc 1 3973 0 is_stmt 1
 2570 0030 0023     		movs	r3, #0
 2571 0032 A4F85A30 		strh	r3, [r4, #90]	@ movhi
3974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2572              		.loc 1 3974 0
 2573 0036 2046     		mov	r0, r4
 2574 0038 FFF7FEFF 		bl	UART_EndRxTransfer
 2575              	.LVL306:
 2576              	.L121:
3977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2577              		.loc 1 3977 0
 2578 003c D4F88030 		ldr	r3, [r4, #128]
 2579 0040 43F01003 		orr	r3, r3, #16
 2580 0044 C4F88030 		str	r3, [r4, #128]
3984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2581              		.loc 1 3984 0
 2582 0048 2046     		mov	r0, r4
 2583 004a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2584              	.LVL307:
 2585 004e 38BD     		pop	{r3, r4, r5, pc}
 2586              		.cfi_endproc
 2587              	.LFE187:
 2589              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2590              		.align	2
 2591              		.thumb
 2592              		.thumb_func
 2594              	UART_DMAAbortOnError:
 2595              	.LFB188:
3995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2596              		.loc 1 3995 0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 0
 2599              		@ frame_needed = 0, uses_anonymous_args = 0
 2600              	.LVL308:
 2601 0000 08B5     		push	{r3, lr}
 2602              	.LCFI13:
 2603              		.cfi_def_cfa_offset 8
 2604              		.cfi_offset 3, -8
 2605              		.cfi_offset 14, -4
3996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2606              		.loc 1 3996 0
 2607 0002 806A     		ldr	r0, [r0, #40]
 2608              	.LVL309:
3997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2609              		.loc 1 3997 0
 2610 0004 0023     		movs	r3, #0
 2611 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2612              		.loc 1 3998 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 149


 2613 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
4005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2614              		.loc 1 4005 0
 2615 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2616              	.LVL310:
 2617 0012 08BD     		pop	{r3, pc}
 2618              		.cfi_endproc
 2619              	.LFE188:
 2621              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2622              		.align	2
 2623              		.weak	HAL_UART_AbortCpltCallback
 2624              		.thumb
 2625              		.thumb_func
 2627              	HAL_UART_AbortCpltCallback:
 2628              	.LFB160:
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2629              		.loc 1 2755 0
 2630              		.cfi_startproc
 2631              		@ args = 0, pretend = 0, frame = 0
 2632              		@ frame_needed = 0, uses_anonymous_args = 0
 2633              		@ link register save eliminated.
 2634              	.LVL311:
 2635 0000 7047     		bx	lr
 2636              		.cfi_endproc
 2637              	.LFE160:
 2639 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2640              		.align	2
 2641              		.global	HAL_UART_Abort_IT
 2642              		.thumb
 2643              		.thumb_func
 2645              	HAL_UART_Abort_IT:
 2646              	.LFB151:
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2647              		.loc 1 1968 0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 0
 2650              		@ frame_needed = 0, uses_anonymous_args = 0
 2651              	.LVL312:
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2652              		.loc 1 1968 0
 2653 0000 38B5     		push	{r3, r4, r5, lr}
 2654              	.LCFI14:
 2655              		.cfi_def_cfa_offset 16
 2656              		.cfi_offset 3, -16
 2657              		.cfi_offset 4, -12
 2658              		.cfi_offset 5, -8
 2659              		.cfi_offset 14, -4
 2660 0002 0446     		mov	r4, r0
 2661              	.LVL313:
 2662              	.L127:
 2663              	.LBB581:
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2664              		.loc 1 1977 0 discriminator 1
 2665 0004 2268     		ldr	r2, [r4]
 2666              	.LVL314:
 2667              	.LBB582:
 2668              	.LBB583:
ARM GAS  /tmp/cc9Y1vpF.s 			page 150


1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2669              		.loc 2 1155 0 discriminator 1
 2670              		.syntax unified
 2671              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2672 0006 52E8003F 		ldrex r3, [r2]
 2673              	@ 0 "" 2
 2674              	.LVL315:
 2675              		.thumb
 2676              		.syntax unified
 2677              	.LBE583:
 2678              	.LBE582:
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2679              		.loc 1 1977 0 discriminator 1
 2680 000a 23F4F073 		bic	r3, r3, #480
 2681              	.LVL316:
 2682              	.LBB584:
 2683              	.LBB585:
 2684              		.loc 2 1206 0 discriminator 1
 2685              		.syntax unified
 2686              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2687 000e 42E80031 		strex r1, r3, [r2]
 2688              	@ 0 "" 2
 2689              	.LVL317:
 2690              		.thumb
 2691              		.syntax unified
 2692              	.LBE585:
 2693              	.LBE584:
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2694              		.loc 1 1977 0 discriminator 1
 2695 0012 0029     		cmp	r1, #0
 2696 0014 F6D1     		bne	.L127
 2697              	.LVL318:
 2698              	.L128:
 2699              	.LBE581:
 2700              	.LBB586:
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2701              		.loc 1 1978 0 discriminator 1
 2702 0016 2268     		ldr	r2, [r4]
 2703              	.LVL319:
 2704              	.LBB587:
 2705              	.LBB588:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2706              		.loc 2 1155 0 discriminator 1
 2707 0018 02F10803 		add	r3, r2, #8
 2708              	.LVL320:
 2709              		.syntax unified
 2710              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2711 001c 53E8003F 		ldrex r3, [r3]
 2712              	@ 0 "" 2
 2713              	.LVL321:
 2714              		.thumb
 2715              		.syntax unified
 2716              	.LBE588:
 2717              	.LBE587:
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2718              		.loc 1 1978 0 discriminator 1
 2719 0020 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/cc9Y1vpF.s 			page 151


 2720              	.LVL322:
 2721              	.LBB589:
 2722              	.LBB590:
 2723              		.loc 2 1206 0 discriminator 1
 2724 0024 0832     		adds	r2, r2, #8
 2725              	.LVL323:
 2726              		.syntax unified
 2727              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2728 0026 42E80031 		strex r1, r3, [r2]
 2729              	@ 0 "" 2
 2730              	.LVL324:
 2731              		.thumb
 2732              		.syntax unified
 2733              	.LBE590:
 2734              	.LBE589:
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2735              		.loc 1 1978 0 discriminator 1
 2736 002a 0029     		cmp	r1, #0
 2737 002c F3D1     		bne	.L128
 2738              	.LBE586:
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2739              		.loc 1 1982 0
 2740 002e 236E     		ldr	r3, [r4, #96]
 2741              	.LVL325:
 2742 0030 012B     		cmp	r3, #1
 2743 0032 08D1     		bne	.L129
 2744              	.L130:
 2745              	.LBB591:
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2746              		.loc 1 1984 0 discriminator 1
 2747 0034 2268     		ldr	r2, [r4]
 2748              	.LVL326:
 2749              	.LBB592:
 2750              	.LBB593:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2751              		.loc 2 1155 0 discriminator 1
 2752              		.syntax unified
 2753              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2754 0036 52E8003F 		ldrex r3, [r2]
 2755              	@ 0 "" 2
 2756              	.LVL327:
 2757              		.thumb
 2758              		.syntax unified
 2759              	.LBE593:
 2760              	.LBE592:
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2761              		.loc 1 1984 0 discriminator 1
 2762 003a 23F01003 		bic	r3, r3, #16
 2763              	.LVL328:
 2764              	.LBB594:
 2765              	.LBB595:
 2766              		.loc 2 1206 0 discriminator 1
 2767              		.syntax unified
 2768              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2769 003e 42E80031 		strex r1, r3, [r2]
 2770              	@ 0 "" 2
 2771              	.LVL329:
ARM GAS  /tmp/cc9Y1vpF.s 			page 152


 2772              		.thumb
 2773              		.syntax unified
 2774              	.LBE595:
 2775              	.LBE594:
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2776              		.loc 1 1984 0 discriminator 1
 2777 0042 0029     		cmp	r1, #0
 2778 0044 F6D1     		bne	.L130
 2779              	.LVL330:
 2780              	.L129:
 2781              	.LBE591:
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2782              		.loc 1 1990 0
 2783 0046 E36E     		ldr	r3, [r4, #108]
 2784 0048 4BB1     		cbz	r3, .L131
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2785              		.loc 1 1994 0
 2786 004a 2268     		ldr	r2, [r4]
 2787 004c 9268     		ldr	r2, [r2, #8]
 2788 004e 12F0800F 		tst	r2, #128
 2789 0052 02D0     		beq	.L132
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2790              		.loc 1 1996 0
 2791 0054 344A     		ldr	r2, .L145
 2792 0056 9A63     		str	r2, [r3, #56]
 2793 0058 01E0     		b	.L131
 2794              	.L132:
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2795              		.loc 1 2000 0
 2796 005a 0022     		movs	r2, #0
 2797 005c 9A63     		str	r2, [r3, #56]
 2798              	.L131:
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2799              		.loc 1 2004 0
 2800 005e 236F     		ldr	r3, [r4, #112]
 2801 0060 4BB1     		cbz	r3, .L133
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2802              		.loc 1 2008 0
 2803 0062 2268     		ldr	r2, [r4]
 2804 0064 9268     		ldr	r2, [r2, #8]
 2805 0066 12F0400F 		tst	r2, #64
 2806 006a 02D0     		beq	.L134
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2807              		.loc 1 2010 0
 2808 006c 2F4A     		ldr	r2, .L145+4
 2809 006e 9A63     		str	r2, [r3, #56]
 2810 0070 01E0     		b	.L133
 2811              	.L134:
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2812              		.loc 1 2014 0
 2813 0072 0022     		movs	r2, #0
 2814 0074 9A63     		str	r2, [r3, #56]
 2815              	.L133:
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2816              		.loc 1 2019 0
 2817 0076 2368     		ldr	r3, [r4]
 2818 0078 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/cc9Y1vpF.s 			page 153


 2819 007a 13F0800F 		tst	r3, #128
 2820 007e 15D0     		beq	.L140
 2821              	.L136:
 2822              	.LBB596:
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2823              		.loc 1 2022 0 discriminator 1
 2824 0080 2268     		ldr	r2, [r4]
 2825              	.LVL331:
 2826              	.LBB597:
 2827              	.LBB598:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2828              		.loc 2 1155 0 discriminator 1
 2829 0082 02F10803 		add	r3, r2, #8
 2830              	.LVL332:
 2831              		.syntax unified
 2832              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2833 0086 53E8003F 		ldrex r3, [r3]
 2834              	@ 0 "" 2
 2835              	.LVL333:
 2836              		.thumb
 2837              		.syntax unified
 2838              	.LBE598:
 2839              	.LBE597:
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2840              		.loc 1 2022 0 discriminator 1
 2841 008a 23F08003 		bic	r3, r3, #128
 2842              	.LVL334:
 2843              	.LBB599:
 2844              	.LBB600:
 2845              		.loc 2 1206 0 discriminator 1
 2846 008e 0832     		adds	r2, r2, #8
 2847              	.LVL335:
 2848              		.syntax unified
 2849              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2850 0090 42E80031 		strex r1, r3, [r2]
 2851              	@ 0 "" 2
 2852              	.LVL336:
 2853              		.thumb
 2854              		.syntax unified
 2855              	.LBE600:
 2856              	.LBE599:
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2857              		.loc 1 2022 0 discriminator 1
 2858 0094 0029     		cmp	r1, #0
 2859 0096 F3D1     		bne	.L136
 2860              	.LBE596:
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2861              		.loc 1 2025 0
 2862 0098 E06E     		ldr	r0, [r4, #108]
 2863              	.LVL337:
 2864 009a 48B1     		cbz	r0, .L141
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2865              		.loc 1 2031 0
 2866 009c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2867              	.LVL338:
 2868 00a0 40B1     		cbz	r0, .L142
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
ARM GAS  /tmp/cc9Y1vpF.s 			page 154


 2869              		.loc 1 2033 0
 2870 00a2 E36E     		ldr	r3, [r4, #108]
 2871 00a4 0022     		movs	r2, #0
 2872 00a6 9A63     		str	r2, [r3, #56]
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2873              		.loc 1 1969 0
 2874 00a8 0125     		movs	r5, #1
 2875 00aa 04E0     		b	.L135
 2876              	.LVL339:
 2877              	.L140:
 2878 00ac 0125     		movs	r5, #1
 2879 00ae 02E0     		b	.L135
 2880              	.LVL340:
 2881              	.L141:
 2882 00b0 0125     		movs	r5, #1
 2883 00b2 00E0     		b	.L135
 2884              	.LVL341:
 2885              	.L142:
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2886              		.loc 1 2037 0
 2887 00b4 0025     		movs	r5, #0
 2888              	.L135:
 2889              	.LVL342:
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2890              		.loc 1 2043 0
 2891 00b6 2368     		ldr	r3, [r4]
 2892 00b8 9B68     		ldr	r3, [r3, #8]
 2893 00ba 13F0400F 		tst	r3, #64
 2894 00be 16D0     		beq	.L137
 2895              	.L138:
 2896              	.LBB601:
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2897              		.loc 1 2046 0 discriminator 1
 2898 00c0 2268     		ldr	r2, [r4]
 2899              	.LVL343:
 2900              	.LBB602:
 2901              	.LBB603:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2902              		.loc 2 1155 0 discriminator 1
 2903 00c2 02F10803 		add	r3, r2, #8
 2904              	.LVL344:
 2905              		.syntax unified
 2906              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2907 00c6 53E8003F 		ldrex r3, [r3]
 2908              	@ 0 "" 2
 2909              	.LVL345:
 2910              		.thumb
 2911              		.syntax unified
 2912              	.LBE603:
 2913              	.LBE602:
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2914              		.loc 1 2046 0 discriminator 1
 2915 00ca 23F04003 		bic	r3, r3, #64
 2916              	.LVL346:
 2917              	.LBB604:
 2918              	.LBB605:
 2919              		.loc 2 1206 0 discriminator 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 155


 2920 00ce 0832     		adds	r2, r2, #8
 2921              	.LVL347:
 2922              		.syntax unified
 2923              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2924 00d0 42E80031 		strex r1, r3, [r2]
 2925              	@ 0 "" 2
 2926              	.LVL348:
 2927              		.thumb
 2928              		.syntax unified
 2929              	.LBE605:
 2930              	.LBE604:
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2931              		.loc 1 2046 0 discriminator 1
 2932 00d4 0029     		cmp	r1, #0
 2933 00d6 F3D1     		bne	.L138
 2934              	.LBE601:
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2935              		.loc 1 2049 0
 2936 00d8 206F     		ldr	r0, [r4, #112]
 2937 00da 40B1     		cbz	r0, .L137
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2938              		.loc 1 2055 0
 2939 00dc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2940              	.LVL349:
 2941 00e0 20B1     		cbz	r0, .L143
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 2942              		.loc 1 2057 0
 2943 00e2 236F     		ldr	r3, [r4, #112]
 2944 00e4 0022     		movs	r2, #0
 2945 00e6 9A63     		str	r2, [r3, #56]
 2946              	.LVL350:
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2947              		.loc 1 2058 0
 2948 00e8 0125     		movs	r5, #1
 2949 00ea 00E0     		b	.L137
 2950              	.LVL351:
 2951              	.L143:
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2952              		.loc 1 2062 0
 2953 00ec 0025     		movs	r5, #0
 2954              	.LVL352:
 2955              	.L137:
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2956              		.loc 1 2068 0
 2957 00ee C5B1     		cbz	r5, .L139
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2958              		.loc 1 2071 0
 2959 00f0 0023     		movs	r3, #0
 2960 00f2 A4F85230 		strh	r3, [r4, #82]	@ movhi
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2961              		.loc 1 2072 0
 2962 00f6 A4F85A30 		strh	r3, [r4, #90]	@ movhi
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 2963              		.loc 1 2075 0
 2964 00fa 6366     		str	r3, [r4, #100]
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2965              		.loc 1 2076 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 156


 2966 00fc A366     		str	r3, [r4, #104]
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2967              		.loc 1 2079 0
 2968 00fe C4F88030 		str	r3, [r4, #128]
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2969              		.loc 1 2082 0
 2970 0102 2268     		ldr	r2, [r4]
 2971 0104 0F21     		movs	r1, #15
 2972 0106 1162     		str	r1, [r2, #32]
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2973              		.loc 1 2093 0
 2974 0108 2168     		ldr	r1, [r4]
 2975 010a 0A8B     		ldrh	r2, [r1, #24]
 2976 010c 92B2     		uxth	r2, r2
 2977 010e 42F00802 		orr	r2, r2, #8
 2978 0112 0A83     		strh	r2, [r1, #24]	@ movhi
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2979              		.loc 1 2096 0
 2980 0114 2022     		movs	r2, #32
 2981 0116 A267     		str	r2, [r4, #120]
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2982              		.loc 1 2097 0
 2983 0118 E267     		str	r2, [r4, #124]
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2984              		.loc 1 2098 0
 2985 011a 2366     		str	r3, [r4, #96]
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2986              		.loc 1 2106 0
 2987 011c 2046     		mov	r0, r4
 2988 011e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2989              	.LVL353:
 2990              	.L139:
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2991              		.loc 1 2111 0
 2992 0122 0020     		movs	r0, #0
 2993 0124 38BD     		pop	{r3, r4, r5, pc}
 2994              	.LVL354:
 2995              	.L146:
 2996 0126 00BF     		.align	2
 2997              	.L145:
 2998 0128 00000000 		.word	UART_DMATxAbortCallback
 2999 012c 00000000 		.word	UART_DMARxAbortCallback
 3000              		.cfi_endproc
 3001              	.LFE151:
 3003              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3004              		.align	2
 3005              		.thumb
 3006              		.thumb_func
 3008              	UART_DMARxAbortCallback:
 3009              	.LFB190:
4075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3010              		.loc 1 4075 0
 3011              		.cfi_startproc
 3012              		@ args = 0, pretend = 0, frame = 0
 3013              		@ frame_needed = 0, uses_anonymous_args = 0
 3014              	.LVL355:
 3015 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cc9Y1vpF.s 			page 157


 3016              	.LCFI15:
 3017              		.cfi_def_cfa_offset 8
 3018              		.cfi_offset 3, -8
 3019              		.cfi_offset 14, -4
4076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3020              		.loc 1 4076 0
 3021 0002 806A     		ldr	r0, [r0, #40]
 3022              	.LVL356:
4078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3023              		.loc 1 4078 0
 3024 0004 036F     		ldr	r3, [r0, #112]
 3025 0006 0022     		movs	r2, #0
 3026 0008 9A63     		str	r2, [r3, #56]
4081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3027              		.loc 1 4081 0
 3028 000a C36E     		ldr	r3, [r0, #108]
 3029 000c 0BB1     		cbz	r3, .L148
4083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3030              		.loc 1 4083 0
 3031 000e 9B6B     		ldr	r3, [r3, #56]
 3032 0010 ABB9     		cbnz	r3, .L147
 3033              	.L148:
4090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3034              		.loc 1 4090 0
 3035 0012 0022     		movs	r2, #0
 3036 0014 A0F85220 		strh	r2, [r0, #82]	@ movhi
4091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3037              		.loc 1 4091 0
 3038 0018 A0F85A20 		strh	r2, [r0, #90]	@ movhi
4094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3039              		.loc 1 4094 0
 3040 001c C0F88020 		str	r2, [r0, #128]
4097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3041              		.loc 1 4097 0
 3042 0020 0368     		ldr	r3, [r0]
 3043 0022 0F21     		movs	r1, #15
 3044 0024 1962     		str	r1, [r3, #32]
4100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3045              		.loc 1 4100 0
 3046 0026 0168     		ldr	r1, [r0]
 3047 0028 0B8B     		ldrh	r3, [r1, #24]
 3048 002a 9BB2     		uxth	r3, r3
 3049 002c 43F00803 		orr	r3, r3, #8
 3050 0030 0B83     		strh	r3, [r1, #24]	@ movhi
4103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3051              		.loc 1 4103 0
 3052 0032 2023     		movs	r3, #32
 3053 0034 8367     		str	r3, [r0, #120]
4104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3054              		.loc 1 4104 0
 3055 0036 C367     		str	r3, [r0, #124]
4105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3056              		.loc 1 4105 0
 3057 0038 0266     		str	r2, [r0, #96]
4113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3058              		.loc 1 4113 0
 3059 003a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
ARM GAS  /tmp/cc9Y1vpF.s 			page 158


 3060              	.LVL357:
 3061              	.L147:
 3062 003e 08BD     		pop	{r3, pc}
 3063              		.cfi_endproc
 3064              	.LFE190:
 3066              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3067              		.align	2
 3068              		.thumb
 3069              		.thumb_func
 3071              	UART_DMATxAbortCallback:
 3072              	.LFB189:
4018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3073              		.loc 1 4018 0
 3074              		.cfi_startproc
 3075              		@ args = 0, pretend = 0, frame = 0
 3076              		@ frame_needed = 0, uses_anonymous_args = 0
 3077              	.LVL358:
 3078 0000 08B5     		push	{r3, lr}
 3079              	.LCFI16:
 3080              		.cfi_def_cfa_offset 8
 3081              		.cfi_offset 3, -8
 3082              		.cfi_offset 14, -4
4019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3083              		.loc 1 4019 0
 3084 0002 806A     		ldr	r0, [r0, #40]
 3085              	.LVL359:
4021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3086              		.loc 1 4021 0
 3087 0004 C36E     		ldr	r3, [r0, #108]
 3088 0006 0022     		movs	r2, #0
 3089 0008 9A63     		str	r2, [r3, #56]
4024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3090              		.loc 1 4024 0
 3091 000a 036F     		ldr	r3, [r0, #112]
 3092 000c 0BB1     		cbz	r3, .L152
4026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3093              		.loc 1 4026 0
 3094 000e 9B6B     		ldr	r3, [r3, #56]
 3095 0010 7BB9     		cbnz	r3, .L151
 3096              	.L152:
4033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3097              		.loc 1 4033 0
 3098 0012 0023     		movs	r3, #0
 3099 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
4034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3100              		.loc 1 4034 0
 3101 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
4037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3102              		.loc 1 4037 0
 3103 001c C0F88030 		str	r3, [r0, #128]
4040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3104              		.loc 1 4040 0
 3105 0020 0268     		ldr	r2, [r0]
 3106 0022 0F21     		movs	r1, #15
 3107 0024 1162     		str	r1, [r2, #32]
4051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3108              		.loc 1 4051 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 159


 3109 0026 2022     		movs	r2, #32
 3110 0028 8267     		str	r2, [r0, #120]
4052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3111              		.loc 1 4052 0
 3112 002a C267     		str	r2, [r0, #124]
4053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3113              		.loc 1 4053 0
 3114 002c 0366     		str	r3, [r0, #96]
4061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3115              		.loc 1 4061 0
 3116 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3117              	.LVL360:
 3118              	.L151:
 3119 0032 08BD     		pop	{r3, pc}
 3120              		.cfi_endproc
 3121              	.LFE189:
 3123              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3124              		.align	2
 3125              		.weak	HAL_UART_AbortTransmitCpltCallback
 3126              		.thumb
 3127              		.thumb_func
 3129              	HAL_UART_AbortTransmitCpltCallback:
 3130              	.LFB161:
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3131              		.loc 1 2770 0
 3132              		.cfi_startproc
 3133              		@ args = 0, pretend = 0, frame = 0
 3134              		@ frame_needed = 0, uses_anonymous_args = 0
 3135              		@ link register save eliminated.
 3136              	.LVL361:
 3137 0000 7047     		bx	lr
 3138              		.cfi_endproc
 3139              	.LFE161:
 3141 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3142              		.align	2
 3143              		.global	HAL_UART_AbortTransmit_IT
 3144              		.thumb
 3145              		.thumb_func
 3147              	HAL_UART_AbortTransmit_IT:
 3148              	.LFB152:
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 3149              		.loc 1 2128 0
 3150              		.cfi_startproc
 3151              		@ args = 0, pretend = 0, frame = 0
 3152              		@ frame_needed = 0, uses_anonymous_args = 0
 3153              	.LVL362:
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 3154              		.loc 1 2128 0
 3155 0000 10B5     		push	{r4, lr}
 3156              	.LCFI17:
 3157              		.cfi_def_cfa_offset 8
 3158              		.cfi_offset 4, -8
 3159              		.cfi_offset 14, -4
 3160 0002 0446     		mov	r4, r0
 3161              	.L157:
 3162              	.LBB606:
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
ARM GAS  /tmp/cc9Y1vpF.s 			page 160


 3163              		.loc 1 2134 0 discriminator 1
 3164 0004 2268     		ldr	r2, [r4]
 3165              	.LVL363:
 3166              	.LBB607:
 3167              	.LBB608:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3168              		.loc 2 1155 0 discriminator 1
 3169              		.syntax unified
 3170              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3171 0006 52E8003F 		ldrex r3, [r2]
 3172              	@ 0 "" 2
 3173              	.LVL364:
 3174              		.thumb
 3175              		.syntax unified
 3176              	.LBE608:
 3177              	.LBE607:
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 3178              		.loc 1 2134 0 discriminator 1
 3179 000a 23F0C003 		bic	r3, r3, #192
 3180              	.LVL365:
 3181              	.LBB609:
 3182              	.LBB610:
 3183              		.loc 2 1206 0 discriminator 1
 3184              		.syntax unified
 3185              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3186 000e 42E80031 		strex r1, r3, [r2]
 3187              	@ 0 "" 2
 3188              	.LVL366:
 3189              		.thumb
 3190              		.syntax unified
 3191              	.LBE610:
 3192              	.LBE609:
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 3193              		.loc 1 2134 0 discriminator 1
 3194 0012 0029     		cmp	r1, #0
 3195 0014 F6D1     		bne	.L157
 3196              	.LBE606:
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3197              		.loc 1 2138 0
 3198 0016 2368     		ldr	r3, [r4]
 3199              	.LVL367:
 3200 0018 9B68     		ldr	r3, [r3, #8]
 3201 001a 13F0800F 		tst	r3, #128
 3202 001e 21D0     		beq	.L158
 3203              	.L159:
 3204              	.LBB611:
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3205              		.loc 1 2141 0 discriminator 1
 3206 0020 2268     		ldr	r2, [r4]
 3207              	.LVL368:
 3208              	.LBB612:
 3209              	.LBB613:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3210              		.loc 2 1155 0 discriminator 1
 3211 0022 02F10803 		add	r3, r2, #8
 3212              	.LVL369:
 3213              		.syntax unified
ARM GAS  /tmp/cc9Y1vpF.s 			page 161


 3214              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3215 0026 53E8003F 		ldrex r3, [r3]
 3216              	@ 0 "" 2
 3217              	.LVL370:
 3218              		.thumb
 3219              		.syntax unified
 3220              	.LBE613:
 3221              	.LBE612:
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3222              		.loc 1 2141 0 discriminator 1
 3223 002a 23F08003 		bic	r3, r3, #128
 3224              	.LVL371:
 3225              	.LBB614:
 3226              	.LBB615:
 3227              		.loc 2 1206 0 discriminator 1
 3228 002e 0832     		adds	r2, r2, #8
 3229              	.LVL372:
 3230              		.syntax unified
 3231              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3232 0030 42E80031 		strex r1, r3, [r2]
 3233              	@ 0 "" 2
 3234              	.LVL373:
 3235              		.thumb
 3236              		.syntax unified
 3237              	.LBE615:
 3238              	.LBE614:
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3239              		.loc 1 2141 0 discriminator 1
 3240 0034 0029     		cmp	r1, #0
 3241 0036 F3D1     		bne	.L159
 3242              	.LBE611:
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3243              		.loc 1 2144 0
 3244 0038 E36E     		ldr	r3, [r4, #108]
 3245              	.LVL374:
 3246 003a 4BB1     		cbz	r3, .L160
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3247              		.loc 1 2148 0
 3248 003c 0F4A     		ldr	r2, .L163
 3249 003e 9A63     		str	r2, [r3, #56]
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 3250              		.loc 1 2151 0
 3251 0040 E06E     		ldr	r0, [r4, #108]
 3252              	.LVL375:
 3253 0042 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3254              	.LVL376:
 3255 0046 B0B1     		cbz	r0, .L161
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3256              		.loc 1 2154 0
 3257 0048 E06E     		ldr	r0, [r4, #108]
 3258 004a 836B     		ldr	r3, [r0, #56]
 3259 004c 9847     		blx	r3
 3260              	.LVL377:
 3261 004e 12E0     		b	.L161
 3262              	.LVL378:
 3263              	.L160:
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 162


 3264              		.loc 1 2160 0
 3265 0050 0023     		movs	r3, #0
 3266 0052 A4F85230 		strh	r3, [r4, #82]	@ movhi
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3267              		.loc 1 2163 0
 3268 0056 A366     		str	r3, [r4, #104]
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3269              		.loc 1 2166 0
 3270 0058 2023     		movs	r3, #32
 3271 005a A367     		str	r3, [r4, #120]
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3272              		.loc 1 2174 0
 3273 005c 2046     		mov	r0, r4
 3274              	.LVL379:
 3275 005e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3276              	.LVL380:
 3277 0062 08E0     		b	.L161
 3278              	.LVL381:
 3279              	.L158:
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3280              		.loc 1 2181 0
 3281 0064 0023     		movs	r3, #0
 3282 0066 A4F85230 		strh	r3, [r4, #82]	@ movhi
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3283              		.loc 1 2184 0
 3284 006a A366     		str	r3, [r4, #104]
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3285              		.loc 1 2195 0
 3286 006c 2023     		movs	r3, #32
 3287 006e A367     		str	r3, [r4, #120]
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3288              		.loc 1 2203 0
 3289 0070 2046     		mov	r0, r4
 3290              	.LVL382:
 3291 0072 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3292              	.LVL383:
 3293              	.L161:
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3294              		.loc 1 2208 0
 3295 0076 0020     		movs	r0, #0
 3296 0078 10BD     		pop	{r4, pc}
 3297              	.LVL384:
 3298              	.L164:
 3299 007a 00BF     		.align	2
 3300              	.L163:
 3301 007c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3302              		.cfi_endproc
 3303              	.LFE152:
 3305              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3306              		.align	2
 3307              		.thumb
 3308              		.thumb_func
 3310              	UART_DMATxOnlyAbortCallback:
 3311              	.LFB191:
4127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3312              		.loc 1 4127 0
 3313              		.cfi_startproc
ARM GAS  /tmp/cc9Y1vpF.s 			page 163


 3314              		@ args = 0, pretend = 0, frame = 0
 3315              		@ frame_needed = 0, uses_anonymous_args = 0
 3316              	.LVL385:
 3317 0000 08B5     		push	{r3, lr}
 3318              	.LCFI18:
 3319              		.cfi_def_cfa_offset 8
 3320              		.cfi_offset 3, -8
 3321              		.cfi_offset 14, -4
4128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3322              		.loc 1 4128 0
 3323 0002 806A     		ldr	r0, [r0, #40]
 3324              	.LVL386:
4130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3325              		.loc 1 4130 0
 3326 0004 0023     		movs	r3, #0
 3327 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
4141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3328              		.loc 1 4141 0
 3329 000a 2023     		movs	r3, #32
 3330 000c 8367     		str	r3, [r0, #120]
4149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3331              		.loc 1 4149 0
 3332 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3333              	.LVL387:
 3334 0012 08BD     		pop	{r3, pc}
 3335              		.cfi_endproc
 3336              	.LFE191:
 3338              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3339              		.align	2
 3340              		.weak	HAL_UART_AbortReceiveCpltCallback
 3341              		.thumb
 3342              		.thumb_func
 3344              	HAL_UART_AbortReceiveCpltCallback:
 3345              	.LFB162:
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3346              		.loc 1 2785 0
 3347              		.cfi_startproc
 3348              		@ args = 0, pretend = 0, frame = 0
 3349              		@ frame_needed = 0, uses_anonymous_args = 0
 3350              		@ link register save eliminated.
 3351              	.LVL388:
 3352 0000 7047     		bx	lr
 3353              		.cfi_endproc
 3354              	.LFE162:
 3356 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3357              		.align	2
 3358              		.global	HAL_UART_AbortReceive_IT
 3359              		.thumb
 3360              		.thumb_func
 3362              	HAL_UART_AbortReceive_IT:
 3363              	.LFB153:
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3364              		.loc 1 2225 0
 3365              		.cfi_startproc
 3366              		@ args = 0, pretend = 0, frame = 0
 3367              		@ frame_needed = 0, uses_anonymous_args = 0
 3368              	.LVL389:
ARM GAS  /tmp/cc9Y1vpF.s 			page 164


2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3369              		.loc 1 2225 0
 3370 0000 10B5     		push	{r4, lr}
 3371              	.LCFI19:
 3372              		.cfi_def_cfa_offset 8
 3373              		.cfi_offset 4, -8
 3374              		.cfi_offset 14, -4
 3375 0002 0446     		mov	r4, r0
 3376              	.L169:
 3377              	.LBB616:
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3378              		.loc 1 2231 0 discriminator 1
 3379 0004 2268     		ldr	r2, [r4]
 3380              	.LVL390:
 3381              	.LBB617:
 3382              	.LBB618:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3383              		.loc 2 1155 0 discriminator 1
 3384              		.syntax unified
 3385              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3386 0006 52E8003F 		ldrex r3, [r2]
 3387              	@ 0 "" 2
 3388              	.LVL391:
 3389              		.thumb
 3390              		.syntax unified
 3391              	.LBE618:
 3392              	.LBE617:
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3393              		.loc 1 2231 0 discriminator 1
 3394 000a 23F49073 		bic	r3, r3, #288
 3395              	.LVL392:
 3396              	.LBB619:
 3397              	.LBB620:
 3398              		.loc 2 1206 0 discriminator 1
 3399              		.syntax unified
 3400              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3401 000e 42E80031 		strex r1, r3, [r2]
 3402              	@ 0 "" 2
 3403              	.LVL393:
 3404              		.thumb
 3405              		.syntax unified
 3406              	.LBE620:
 3407              	.LBE619:
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3408              		.loc 1 2231 0 discriminator 1
 3409 0012 0029     		cmp	r1, #0
 3410 0014 F6D1     		bne	.L169
 3411              	.LVL394:
 3412              	.L170:
 3413              	.LBE616:
 3414              	.LBB621:
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 3415              		.loc 1 2232 0 discriminator 1
 3416 0016 2268     		ldr	r2, [r4]
 3417              	.LVL395:
 3418              	.LBB622:
 3419              	.LBB623:
ARM GAS  /tmp/cc9Y1vpF.s 			page 165


1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3420              		.loc 2 1155 0 discriminator 1
 3421 0018 02F10803 		add	r3, r2, #8
 3422              	.LVL396:
 3423              		.syntax unified
 3424              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3425 001c 53E8003F 		ldrex r3, [r3]
 3426              	@ 0 "" 2
 3427              	.LVL397:
 3428              		.thumb
 3429              		.syntax unified
 3430              	.LBE623:
 3431              	.LBE622:
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 3432              		.loc 1 2232 0 discriminator 1
 3433 0020 23F00103 		bic	r3, r3, #1
 3434              	.LVL398:
 3435              	.LBB624:
 3436              	.LBB625:
 3437              		.loc 2 1206 0 discriminator 1
 3438 0024 0832     		adds	r2, r2, #8
 3439              	.LVL399:
 3440              		.syntax unified
 3441              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3442 0026 42E80031 		strex r1, r3, [r2]
 3443              	@ 0 "" 2
 3444              	.LVL400:
 3445              		.thumb
 3446              		.syntax unified
 3447              	.LBE625:
 3448              	.LBE624:
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 3449              		.loc 1 2232 0 discriminator 1
 3450 002a 0029     		cmp	r1, #0
 3451 002c F3D1     		bne	.L170
 3452              	.LBE621:
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3453              		.loc 1 2236 0
 3454 002e 236E     		ldr	r3, [r4, #96]
 3455              	.LVL401:
 3456 0030 012B     		cmp	r3, #1
 3457 0032 08D1     		bne	.L171
 3458              	.L172:
 3459              	.LBB626:
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3460              		.loc 1 2238 0 discriminator 1
 3461 0034 2268     		ldr	r2, [r4]
 3462              	.LVL402:
 3463              	.LBB627:
 3464              	.LBB628:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3465              		.loc 2 1155 0 discriminator 1
 3466              		.syntax unified
 3467              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3468 0036 52E8003F 		ldrex r3, [r2]
 3469              	@ 0 "" 2
 3470              	.LVL403:
ARM GAS  /tmp/cc9Y1vpF.s 			page 166


 3471              		.thumb
 3472              		.syntax unified
 3473              	.LBE628:
 3474              	.LBE627:
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3475              		.loc 1 2238 0 discriminator 1
 3476 003a 23F01003 		bic	r3, r3, #16
 3477              	.LVL404:
 3478              	.LBB629:
 3479              	.LBB630:
 3480              		.loc 2 1206 0 discriminator 1
 3481              		.syntax unified
 3482              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3483 003e 42E80031 		strex r1, r3, [r2]
 3484              	@ 0 "" 2
 3485              	.LVL405:
 3486              		.thumb
 3487              		.syntax unified
 3488              	.LBE630:
 3489              	.LBE629:
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3490              		.loc 1 2238 0 discriminator 1
 3491 0042 0029     		cmp	r1, #0
 3492 0044 F6D1     		bne	.L172
 3493              	.LVL406:
 3494              	.L171:
 3495              	.LBE626:
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3496              		.loc 1 2242 0
 3497 0046 2368     		ldr	r3, [r4]
 3498 0048 9A68     		ldr	r2, [r3, #8]
 3499 004a 12F0400F 		tst	r2, #64
 3500 004e 2BD0     		beq	.L173
 3501              	.L174:
 3502              	.LBB631:
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3503              		.loc 1 2245 0 discriminator 1
 3504 0050 2268     		ldr	r2, [r4]
 3505              	.LVL407:
 3506              	.LBB632:
 3507              	.LBB633:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3508              		.loc 2 1155 0 discriminator 1
 3509 0052 02F10803 		add	r3, r2, #8
 3510              	.LVL408:
 3511              		.syntax unified
 3512              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3513 0056 53E8003F 		ldrex r3, [r3]
 3514              	@ 0 "" 2
 3515              	.LVL409:
 3516              		.thumb
 3517              		.syntax unified
 3518              	.LBE633:
 3519              	.LBE632:
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3520              		.loc 1 2245 0 discriminator 1
 3521 005a 23F04003 		bic	r3, r3, #64
ARM GAS  /tmp/cc9Y1vpF.s 			page 167


 3522              	.LVL410:
 3523              	.LBB634:
 3524              	.LBB635:
 3525              		.loc 2 1206 0 discriminator 1
 3526 005e 0832     		adds	r2, r2, #8
 3527              	.LVL411:
 3528              		.syntax unified
 3529              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3530 0060 42E80031 		strex r1, r3, [r2]
 3531              	@ 0 "" 2
 3532              	.LVL412:
 3533              		.thumb
 3534              		.syntax unified
 3535              	.LBE635:
 3536              	.LBE634:
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3537              		.loc 1 2245 0 discriminator 1
 3538 0064 0029     		cmp	r1, #0
 3539 0066 F3D1     		bne	.L174
 3540              	.LBE631:
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3541              		.loc 1 2248 0
 3542 0068 236F     		ldr	r3, [r4, #112]
 3543              	.LVL413:
 3544 006a 4BB1     		cbz	r3, .L175
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3545              		.loc 1 2252 0
 3546 006c 154A     		ldr	r2, .L178
 3547 006e 9A63     		str	r2, [r3, #56]
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 3548              		.loc 1 2255 0
 3549 0070 206F     		ldr	r0, [r4, #112]
 3550              	.LVL414:
 3551 0072 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3552              	.LVL415:
 3553 0076 18B3     		cbz	r0, .L176
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3554              		.loc 1 2258 0
 3555 0078 206F     		ldr	r0, [r4, #112]
 3556 007a 836B     		ldr	r3, [r0, #56]
 3557 007c 9847     		blx	r3
 3558              	.LVL416:
 3559 007e 1FE0     		b	.L176
 3560              	.LVL417:
 3561              	.L175:
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3562              		.loc 1 2264 0
 3563 0080 0022     		movs	r2, #0
 3564 0082 A4F85A20 		strh	r2, [r4, #90]	@ movhi
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3565              		.loc 1 2267 0
 3566 0086 6265     		str	r2, [r4, #84]
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3567              		.loc 1 2270 0
 3568 0088 2368     		ldr	r3, [r4]
 3569 008a 0F21     		movs	r1, #15
 3570 008c 1962     		str	r1, [r3, #32]
ARM GAS  /tmp/cc9Y1vpF.s 			page 168


2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3571              		.loc 1 2273 0
 3572 008e 2168     		ldr	r1, [r4]
 3573 0090 0B8B     		ldrh	r3, [r1, #24]
 3574 0092 9BB2     		uxth	r3, r3
 3575 0094 43F00803 		orr	r3, r3, #8
 3576 0098 0B83     		strh	r3, [r1, #24]	@ movhi
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3577              		.loc 1 2276 0
 3578 009a 2023     		movs	r3, #32
 3579 009c E367     		str	r3, [r4, #124]
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3580              		.loc 1 2277 0
 3581 009e 2266     		str	r2, [r4, #96]
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3582              		.loc 1 2285 0
 3583 00a0 2046     		mov	r0, r4
 3584              	.LVL418:
 3585 00a2 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3586              	.LVL419:
 3587 00a6 0BE0     		b	.L176
 3588              	.LVL420:
 3589              	.L173:
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3590              		.loc 1 2292 0
 3591 00a8 0022     		movs	r2, #0
 3592 00aa A4F85A20 		strh	r2, [r4, #90]	@ movhi
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3593              		.loc 1 2295 0
 3594 00ae 6265     		str	r2, [r4, #84]
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3595              		.loc 1 2298 0
 3596 00b0 0F21     		movs	r1, #15
 3597 00b2 1962     		str	r1, [r3, #32]
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3598              		.loc 1 2301 0
 3599 00b4 2023     		movs	r3, #32
 3600 00b6 E367     		str	r3, [r4, #124]
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3601              		.loc 1 2302 0
 3602 00b8 2266     		str	r2, [r4, #96]
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3603              		.loc 1 2310 0
 3604 00ba 2046     		mov	r0, r4
 3605              	.LVL421:
 3606 00bc FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3607              	.LVL422:
 3608              	.L176:
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3609              		.loc 1 2315 0
 3610 00c0 0020     		movs	r0, #0
 3611 00c2 10BD     		pop	{r4, pc}
 3612              	.LVL423:
 3613              	.L179:
 3614              		.align	2
 3615              	.L178:
 3616 00c4 00000000 		.word	UART_DMARxOnlyAbortCallback
ARM GAS  /tmp/cc9Y1vpF.s 			page 169


 3617              		.cfi_endproc
 3618              	.LFE153:
 3620              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3621              		.align	2
 3622              		.thumb
 3623              		.thumb_func
 3625              	UART_DMARxOnlyAbortCallback:
 3626              	.LFB192:
4162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3627              		.loc 1 4162 0
 3628              		.cfi_startproc
 3629              		@ args = 0, pretend = 0, frame = 0
 3630              		@ frame_needed = 0, uses_anonymous_args = 0
 3631              	.LVL424:
 3632 0000 08B5     		push	{r3, lr}
 3633              	.LCFI20:
 3634              		.cfi_def_cfa_offset 8
 3635              		.cfi_offset 3, -8
 3636              		.cfi_offset 14, -4
4163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3637              		.loc 1 4163 0
 3638 0002 806A     		ldr	r0, [r0, #40]
 3639              	.LVL425:
4165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3640              		.loc 1 4165 0
 3641 0004 0022     		movs	r2, #0
 3642 0006 A0F85A20 		strh	r2, [r0, #90]	@ movhi
4168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3643              		.loc 1 4168 0
 3644 000a 0368     		ldr	r3, [r0]
 3645 000c 0F21     		movs	r1, #15
 3646 000e 1962     		str	r1, [r3, #32]
4171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3647              		.loc 1 4171 0
 3648 0010 0168     		ldr	r1, [r0]
 3649 0012 0B8B     		ldrh	r3, [r1, #24]
 3650 0014 9BB2     		uxth	r3, r3
 3651 0016 43F00803 		orr	r3, r3, #8
 3652 001a 0B83     		strh	r3, [r1, #24]	@ movhi
4174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3653              		.loc 1 4174 0
 3654 001c 2023     		movs	r3, #32
 3655 001e C367     		str	r3, [r0, #124]
4175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3656              		.loc 1 4175 0
 3657 0020 0266     		str	r2, [r0, #96]
4183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3658              		.loc 1 4183 0
 3659 0022 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3660              	.LVL426:
 3661 0026 08BD     		pop	{r3, pc}
 3662              		.cfi_endproc
 3663              	.LFE192:
 3665              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 3666              		.align	2
 3667              		.weak	HAL_UARTEx_RxEventCallback
 3668              		.thumb
ARM GAS  /tmp/cc9Y1vpF.s 			page 170


 3669              		.thumb_func
 3671              	HAL_UARTEx_RxEventCallback:
 3672              	.LFB163:
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3673              		.loc 1 2802 0
 3674              		.cfi_startproc
 3675              		@ args = 0, pretend = 0, frame = 0
 3676              		@ frame_needed = 0, uses_anonymous_args = 0
 3677              		@ link register save eliminated.
 3678              	.LVL427:
 3679 0000 7047     		bx	lr
 3680              		.cfi_endproc
 3681              	.LFE163:
 3683 0002 00BF     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3684              		.align	2
 3685              		.global	HAL_UART_IRQHandler
 3686              		.thumb
 3687              		.thumb_func
 3689              	HAL_UART_IRQHandler:
 3690              	.LFB154:
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3691              		.loc 1 2323 0
 3692              		.cfi_startproc
 3693              		@ args = 0, pretend = 0, frame = 0
 3694              		@ frame_needed = 0, uses_anonymous_args = 0
 3695              	.LVL428:
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3696              		.loc 1 2323 0
 3697 0000 70B5     		push	{r4, r5, r6, lr}
 3698              	.LCFI21:
 3699              		.cfi_def_cfa_offset 16
 3700              		.cfi_offset 4, -16
 3701              		.cfi_offset 5, -12
 3702              		.cfi_offset 6, -8
 3703              		.cfi_offset 14, -4
 3704 0002 0446     		mov	r4, r0
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3705              		.loc 1 2324 0
 3706 0004 0168     		ldr	r1, [r0]
 3707 0006 CB69     		ldr	r3, [r1, #28]
 3708              	.LVL429:
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3709              		.loc 1 2325 0
 3710 0008 0868     		ldr	r0, [r1]
 3711              	.LVL430:
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3712              		.loc 1 2326 0
 3713 000a 8D68     		ldr	r5, [r1, #8]
 3714              	.LVL431:
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
 3715              		.loc 1 2332 0
 3716 000c 40F60F02 		movw	r2, #2063
 3717              	.LVL432:
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3718              		.loc 1 2333 0
 3719 0010 1A40     		ands	r2, r3, r2
 3720              	.LVL433:
ARM GAS  /tmp/cc9Y1vpF.s 			page 171


 3721 0012 0CD1     		bne	.L184
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 3722              		.loc 1 2341 0
 3723 0014 13F0200F 		tst	r3, #32
 3724 0018 09D0     		beq	.L184
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 3725              		.loc 1 2342 0
 3726 001a 10F0200F 		tst	r0, #32
 3727 001e 06D0     		beq	.L184
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 3728              		.loc 1 2345 0
 3729 0020 636E     		ldr	r3, [r4, #100]
 3730              	.LVL434:
 3731 0022 002B     		cmp	r3, #0
 3732 0024 00F05581 		beq	.L183
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3733              		.loc 1 2347 0
 3734 0028 2046     		mov	r0, r4
 3735              	.LVL435:
 3736 002a 9847     		blx	r3
 3737              	.LVL436:
 3738 002c 70BD     		pop	{r4, r5, r6, pc}
 3739              	.LVL437:
 3740              	.L184:
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 3741              		.loc 1 2359 0
 3742 002e 002A     		cmp	r2, #0
 3743 0030 00F09780 		beq	.L186
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 3744              		.loc 1 2360 0
 3745 0034 15F00102 		ands	r2, r5, #1
 3746              	.LVL438:
 3747 0038 03D1     		bne	.L187
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 3748              		.loc 1 2361 0
 3749 003a A64E     		ldr	r6, .L213
 3750 003c 3042     		tst	r0, r6
 3751 003e 00F09080 		beq	.L186
 3752              	.L187:
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3753              		.loc 1 2365 0
 3754 0042 13F0010F 		tst	r3, #1
 3755 0046 09D0     		beq	.L188
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3756              		.loc 1 2365 0 is_stmt 0 discriminator 1
 3757 0048 10F4807F 		tst	r0, #256
 3758 004c 06D0     		beq	.L188
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3759              		.loc 1 2367 0 is_stmt 1
 3760 004e 0125     		movs	r5, #1
 3761              	.LVL439:
 3762 0050 0D62     		str	r5, [r1, #32]
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3763              		.loc 1 2369 0
 3764 0052 D4F88010 		ldr	r1, [r4, #128]
 3765 0056 2943     		orrs	r1, r1, r5
 3766 0058 C4F88010 		str	r1, [r4, #128]
ARM GAS  /tmp/cc9Y1vpF.s 			page 172


 3767              	.L188:
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3768              		.loc 1 2373 0
 3769 005c 13F0020F 		tst	r3, #2
 3770 0060 09D0     		beq	.L189
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3771              		.loc 1 2373 0 is_stmt 0 discriminator 1
 3772 0062 42B1     		cbz	r2, .L189
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3773              		.loc 1 2375 0 is_stmt 1
 3774 0064 2168     		ldr	r1, [r4]
 3775 0066 0225     		movs	r5, #2
 3776 0068 0D62     		str	r5, [r1, #32]
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3777              		.loc 1 2377 0
 3778 006a D4F88010 		ldr	r1, [r4, #128]
 3779 006e 41F00401 		orr	r1, r1, #4
 3780 0072 C4F88010 		str	r1, [r4, #128]
 3781              	.L189:
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3782              		.loc 1 2381 0
 3783 0076 13F0040F 		tst	r3, #4
 3784 007a 09D0     		beq	.L190
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3785              		.loc 1 2381 0 is_stmt 0 discriminator 1
 3786 007c 42B1     		cbz	r2, .L190
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3787              		.loc 1 2383 0 is_stmt 1
 3788 007e 2168     		ldr	r1, [r4]
 3789 0080 0425     		movs	r5, #4
 3790 0082 0D62     		str	r5, [r1, #32]
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3791              		.loc 1 2385 0
 3792 0084 D4F88010 		ldr	r1, [r4, #128]
 3793 0088 41F00201 		orr	r1, r1, #2
 3794 008c C4F88010 		str	r1, [r4, #128]
 3795              	.L190:
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3796              		.loc 1 2394 0
 3797 0090 13F0080F 		tst	r3, #8
 3798 0094 0BD0     		beq	.L191
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 3799              		.loc 1 2395 0
 3800 0096 10F0200F 		tst	r0, #32
 3801 009a 00D1     		bne	.L192
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 3802              		.loc 1 2395 0 is_stmt 0 discriminator 1
 3803 009c 3AB1     		cbz	r2, .L191
 3804              	.L192:
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3805              		.loc 1 2399 0 is_stmt 1
 3806 009e 2268     		ldr	r2, [r4]
 3807 00a0 0821     		movs	r1, #8
 3808 00a2 1162     		str	r1, [r2, #32]
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3809              		.loc 1 2401 0
 3810 00a4 D4F88020 		ldr	r2, [r4, #128]
ARM GAS  /tmp/cc9Y1vpF.s 			page 173


 3811 00a8 0A43     		orrs	r2, r2, r1
 3812 00aa C4F88020 		str	r2, [r4, #128]
 3813              	.L191:
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3814              		.loc 1 2405 0
 3815 00ae 13F4006F 		tst	r3, #2048
 3816 00b2 0CD0     		beq	.L193
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3817              		.loc 1 2405 0 is_stmt 0 discriminator 1
 3818 00b4 10F0806F 		tst	r0, #67108864
 3819 00b8 09D0     		beq	.L193
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3820              		.loc 1 2407 0 is_stmt 1
 3821 00ba 2268     		ldr	r2, [r4]
 3822 00bc 4FF40061 		mov	r1, #2048
 3823 00c0 1162     		str	r1, [r2, #32]
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3824              		.loc 1 2409 0
 3825 00c2 D4F88020 		ldr	r2, [r4, #128]
 3826 00c6 42F02002 		orr	r2, r2, #32
 3827 00ca C4F88020 		str	r2, [r4, #128]
 3828              	.L193:
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3829              		.loc 1 2413 0
 3830 00ce D4F88020 		ldr	r2, [r4, #128]
 3831 00d2 002A     		cmp	r2, #0
 3832 00d4 00F0FD80 		beq	.L183
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 3833              		.loc 1 2421 0
 3834 00d8 13F0200F 		tst	r3, #32
 3835 00dc 06D0     		beq	.L194
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 3836              		.loc 1 2422 0
 3837 00de 10F0200F 		tst	r0, #32
 3838 00e2 03D0     		beq	.L194
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3839              		.loc 1 2425 0
 3840 00e4 636E     		ldr	r3, [r4, #100]
 3841              	.LVL440:
 3842 00e6 0BB1     		cbz	r3, .L194
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 3843              		.loc 1 2427 0
 3844 00e8 2046     		mov	r0, r4
 3845              	.LVL441:
 3846 00ea 9847     		blx	r3
 3847              	.LVL442:
 3848              	.L194:
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3849              		.loc 1 2436 0
 3850 00ec D4F88020 		ldr	r2, [r4, #128]
 3851              	.LVL443:
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 3852              		.loc 1 2437 0
 3853 00f0 2368     		ldr	r3, [r4]
 3854 00f2 9B68     		ldr	r3, [r3, #8]
 3855 00f4 13F0400F 		tst	r3, #64
 3856 00f8 02D1     		bne	.L195
ARM GAS  /tmp/cc9Y1vpF.s 			page 174


2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 3857              		.loc 1 2437 0 is_stmt 0 discriminator 1
 3858 00fa 12F0280F 		tst	r2, #40
 3859 00fe 29D0     		beq	.L196
 3860              	.L195:
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3861              		.loc 1 2443 0 is_stmt 1
 3862 0100 2046     		mov	r0, r4
 3863 0102 FFF7FEFF 		bl	UART_EndRxTransfer
 3864              	.LVL444:
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3865              		.loc 1 2446 0
 3866 0106 2368     		ldr	r3, [r4]
 3867 0108 9B68     		ldr	r3, [r3, #8]
 3868 010a 13F0400F 		tst	r3, #64
 3869 010e 1DD0     		beq	.L197
 3870              	.L198:
 3871              	.LBB636:
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3872              		.loc 1 2449 0 discriminator 1
 3873 0110 2268     		ldr	r2, [r4]
 3874              	.LVL445:
 3875              	.LBB637:
 3876              	.LBB638:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3877              		.loc 2 1155 0 discriminator 1
 3878 0112 02F10803 		add	r3, r2, #8
 3879              	.LVL446:
 3880              		.syntax unified
 3881              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3882 0116 53E8003F 		ldrex r3, [r3]
 3883              	@ 0 "" 2
 3884              	.LVL447:
 3885              		.thumb
 3886              		.syntax unified
 3887              	.LBE638:
 3888              	.LBE637:
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3889              		.loc 1 2449 0 discriminator 1
 3890 011a 23F04003 		bic	r3, r3, #64
 3891              	.LVL448:
 3892              	.LBB639:
 3893              	.LBB640:
 3894              		.loc 2 1206 0 discriminator 1
 3895 011e 0832     		adds	r2, r2, #8
 3896              	.LVL449:
 3897              		.syntax unified
 3898              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3899 0120 42E80031 		strex r1, r3, [r2]
 3900              	@ 0 "" 2
 3901              	.LVL450:
 3902              		.thumb
 3903              		.syntax unified
 3904              	.LBE640:
 3905              	.LBE639:
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3906              		.loc 1 2449 0 discriminator 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 175


 3907 0124 0029     		cmp	r1, #0
 3908 0126 F3D1     		bne	.L198
 3909              	.LBE636:
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
 3910              		.loc 1 2452 0
 3911 0128 236F     		ldr	r3, [r4, #112]
 3912              	.LVL451:
 3913 012a 5BB1     		cbz	r3, .L199
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3914              		.loc 1 2456 0
 3915 012c 6A4A     		ldr	r2, .L213+4
 3916 012e 9A63     		str	r2, [r3, #56]
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
 3917              		.loc 1 2459 0
 3918 0130 206F     		ldr	r0, [r4, #112]
 3919 0132 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3920              	.LVL452:
 3921 0136 0028     		cmp	r0, #0
 3922 0138 00F0CB80 		beq	.L183
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
 3923              		.loc 1 2462 0
 3924 013c 206F     		ldr	r0, [r4, #112]
 3925 013e 836B     		ldr	r3, [r0, #56]
 3926 0140 9847     		blx	r3
 3927              	.LVL453:
 3928 0142 70BD     		pop	{r4, r5, r6, pc}
 3929              	.LVL454:
 3930              	.L199:
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3931              		.loc 1 2473 0
 3932 0144 2046     		mov	r0, r4
 3933 0146 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3934              	.LVL455:
 3935 014a 70BD     		pop	{r4, r5, r6, pc}
 3936              	.LVL456:
 3937              	.L197:
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3938              		.loc 1 2486 0
 3939 014c 2046     		mov	r0, r4
 3940 014e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3941              	.LVL457:
 3942 0152 70BD     		pop	{r4, r5, r6, pc}
 3943              	.LVL458:
 3944              	.L196:
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3945              		.loc 1 2499 0
 3946 0154 2046     		mov	r0, r4
 3947 0156 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3948              	.LVL459:
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3949              		.loc 1 2501 0
 3950 015a 0023     		movs	r3, #0
 3951 015c C4F88030 		str	r3, [r4, #128]
 3952 0160 70BD     		pop	{r4, r5, r6, pc}
 3953              	.LVL460:
 3954              	.L186:
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
ARM GAS  /tmp/cc9Y1vpF.s 			page 176


 3955              		.loc 1 2510 0
 3956 0162 226E     		ldr	r2, [r4, #96]
 3957 0164 012A     		cmp	r2, #1
 3958 0166 40F09380 		bne	.L200
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
 3959              		.loc 1 2511 0
 3960 016a 13F0100F 		tst	r3, #16
 3961 016e 00F08F80 		beq	.L200
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3962              		.loc 1 2512 0
 3963 0172 10F0100F 		tst	r0, #16
 3964 0176 00F08B80 		beq	.L200
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3965              		.loc 1 2514 0
 3966 017a 1023     		movs	r3, #16
 3967              	.LVL461:
 3968 017c 0B62     		str	r3, [r1, #32]
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3969              		.loc 1 2517 0
 3970 017e 2368     		ldr	r3, [r4]
 3971 0180 9B68     		ldr	r3, [r3, #8]
 3972 0182 13F0400F 		tst	r3, #64
 3973 0186 4ED0     		beq	.L201
 3974              	.LBB641:
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 3975              		.loc 1 2523 0
 3976 0188 226F     		ldr	r2, [r4, #112]
 3977 018a 1368     		ldr	r3, [r2]
 3978 018c 5B68     		ldr	r3, [r3, #4]
 3979 018e 9BB2     		uxth	r3, r3
 3980              	.LVL462:
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 3981              		.loc 1 2524 0
 3982 0190 002B     		cmp	r3, #0
 3983 0192 00F09E80 		beq	.L183
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 3984              		.loc 1 2525 0
 3985 0196 B4F85810 		ldrh	r1, [r4, #88]
 3986 019a 8B42     		cmp	r3, r1
 3987 019c 80F09980 		bcs	.L183
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3988              		.loc 1 2528 0
 3989 01a0 A4F85A30 		strh	r3, [r4, #90]	@ movhi
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3990              		.loc 1 2531 0
 3991 01a4 1368     		ldr	r3, [r2]
 3992              	.LVL463:
 3993 01a6 1B68     		ldr	r3, [r3]
 3994 01a8 13F0200F 		tst	r3, #32
 3995 01ac 30D1     		bne	.L202
 3996              	.L203:
 3997              	.LBB642:
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3998              		.loc 1 2534 0 discriminator 1
 3999 01ae 2268     		ldr	r2, [r4]
 4000              	.LVL464:
 4001              	.LBB643:
ARM GAS  /tmp/cc9Y1vpF.s 			page 177


 4002              	.LBB644:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4003              		.loc 2 1155 0 discriminator 1
 4004              		.syntax unified
 4005              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4006 01b0 52E8003F 		ldrex r3, [r2]
 4007              	@ 0 "" 2
 4008              	.LVL465:
 4009              		.thumb
 4010              		.syntax unified
 4011              	.LBE644:
 4012              	.LBE643:
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4013              		.loc 1 2534 0 discriminator 1
 4014 01b4 23F48073 		bic	r3, r3, #256
 4015              	.LVL466:
 4016              	.LBB645:
 4017              	.LBB646:
 4018              		.loc 2 1206 0 discriminator 1
 4019              		.syntax unified
 4020              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4021 01b8 42E80031 		strex r1, r3, [r2]
 4022              	@ 0 "" 2
 4023              	.LVL467:
 4024              		.thumb
 4025              		.syntax unified
 4026              	.LBE646:
 4027              	.LBE645:
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4028              		.loc 1 2534 0 discriminator 1
 4029 01bc 0029     		cmp	r1, #0
 4030 01be F6D1     		bne	.L203
 4031              	.LVL468:
 4032              	.L204:
 4033              	.LBE642:
 4034              	.LBB647:
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4035              		.loc 1 2535 0 discriminator 1
 4036 01c0 2268     		ldr	r2, [r4]
 4037              	.LVL469:
 4038              	.LBB648:
 4039              	.LBB649:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4040              		.loc 2 1155 0 discriminator 1
 4041 01c2 02F10803 		add	r3, r2, #8
 4042              	.LVL470:
 4043              		.syntax unified
 4044              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4045 01c6 53E8003F 		ldrex r3, [r3]
 4046              	@ 0 "" 2
 4047              	.LVL471:
 4048              		.thumb
 4049              		.syntax unified
 4050              	.LBE649:
 4051              	.LBE648:
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4052              		.loc 1 2535 0 discriminator 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 178


 4053 01ca 23F00103 		bic	r3, r3, #1
 4054              	.LVL472:
 4055              	.LBB650:
 4056              	.LBB651:
 4057              		.loc 2 1206 0 discriminator 1
 4058 01ce 0832     		adds	r2, r2, #8
 4059              	.LVL473:
 4060              		.syntax unified
 4061              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4062 01d0 42E80031 		strex r1, r3, [r2]
 4063              	@ 0 "" 2
 4064              	.LVL474:
 4065              		.thumb
 4066              		.syntax unified
 4067              	.LBE651:
 4068              	.LBE650:
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4069              		.loc 1 2535 0 discriminator 1
 4070 01d4 0029     		cmp	r1, #0
 4071 01d6 F3D1     		bne	.L204
 4072              	.LVL475:
 4073              	.L205:
 4074              	.LBE647:
 4075              	.LBB652:
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4076              		.loc 1 2539 0 discriminator 1
 4077 01d8 2268     		ldr	r2, [r4]
 4078              	.LVL476:
 4079              	.LBB653:
 4080              	.LBB654:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4081              		.loc 2 1155 0 discriminator 1
 4082 01da 02F10803 		add	r3, r2, #8
 4083              	.LVL477:
 4084              		.syntax unified
 4085              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4086 01de 53E8003F 		ldrex r3, [r3]
 4087              	@ 0 "" 2
 4088              	.LVL478:
 4089              		.thumb
 4090              		.syntax unified
 4091              	.LBE654:
 4092              	.LBE653:
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4093              		.loc 1 2539 0 discriminator 1
 4094 01e2 23F04003 		bic	r3, r3, #64
 4095              	.LVL479:
 4096              	.LBB655:
 4097              	.LBB656:
 4098              		.loc 2 1206 0 discriminator 1
 4099 01e6 0832     		adds	r2, r2, #8
 4100              	.LVL480:
 4101              		.syntax unified
 4102              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4103 01e8 42E80031 		strex r1, r3, [r2]
 4104              	@ 0 "" 2
 4105              	.LVL481:
ARM GAS  /tmp/cc9Y1vpF.s 			page 179


 4106              		.thumb
 4107              		.syntax unified
 4108              	.LBE656:
 4109              	.LBE655:
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4110              		.loc 1 2539 0 discriminator 1
 4111 01ec 0029     		cmp	r1, #0
 4112 01ee F3D1     		bne	.L205
 4113              	.LBE652:
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4114              		.loc 1 2542 0
 4115 01f0 2023     		movs	r3, #32
 4116              	.LVL482:
 4117 01f2 E367     		str	r3, [r4, #124]
 4118              	.LVL483:
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4119              		.loc 1 2543 0
 4120 01f4 0023     		movs	r3, #0
 4121 01f6 2366     		str	r3, [r4, #96]
 4122              	.L206:
 4123              	.LBB657:
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4124              		.loc 1 2545 0 discriminator 1
 4125 01f8 2268     		ldr	r2, [r4]
 4126              	.LVL484:
 4127              	.LBB658:
 4128              	.LBB659:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4129              		.loc 2 1155 0 discriminator 1
 4130              		.syntax unified
 4131              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4132 01fa 52E8003F 		ldrex r3, [r2]
 4133              	@ 0 "" 2
 4134              	.LVL485:
 4135              		.thumb
 4136              		.syntax unified
 4137              	.LBE659:
 4138              	.LBE658:
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4139              		.loc 1 2545 0 discriminator 1
 4140 01fe 23F01003 		bic	r3, r3, #16
 4141              	.LVL486:
 4142              	.LBB660:
 4143              	.LBB661:
 4144              		.loc 2 1206 0 discriminator 1
 4145              		.syntax unified
 4146              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4147 0202 42E80031 		strex r1, r3, [r2]
 4148              	@ 0 "" 2
 4149              	.LVL487:
 4150              		.thumb
 4151              		.syntax unified
 4152              	.LBE661:
 4153              	.LBE660:
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4154              		.loc 1 2545 0 discriminator 1
 4155 0206 0029     		cmp	r1, #0
ARM GAS  /tmp/cc9Y1vpF.s 			page 180


 4156 0208 F6D1     		bne	.L206
 4157              	.LBE657:
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 4158              		.loc 1 2548 0
 4159 020a 206F     		ldr	r0, [r4, #112]
 4160              	.LVL488:
 4161 020c FFF7FEFF 		bl	HAL_DMA_Abort
 4162              	.LVL489:
 4163              	.L202:
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4164              		.loc 1 2555 0
 4165 0210 B4F85830 		ldrh	r3, [r4, #88]
 4166 0214 B4F85A10 		ldrh	r1, [r4, #90]
 4167 0218 89B2     		uxth	r1, r1
 4168 021a 591A     		subs	r1, r3, r1
 4169 021c 89B2     		uxth	r1, r1
 4170 021e 2046     		mov	r0, r4
 4171 0220 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4172              	.LVL490:
 4173 0224 70BD     		pop	{r4, r5, r6, pc}
 4174              	.LVL491:
 4175              	.L201:
 4176              	.LBE641:
 4177              	.LBB662:
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 4178              		.loc 1 2565 0
 4179 0226 B4F85830 		ldrh	r3, [r4, #88]
 4180 022a B4F85A10 		ldrh	r1, [r4, #90]
 4181 022e 89B2     		uxth	r1, r1
 4182 0230 591A     		subs	r1, r3, r1
 4183 0232 89B2     		uxth	r1, r1
 4184              	.LVL492:
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (nb_rx_data > 0U))
 4185              		.loc 1 2566 0
 4186 0234 B4F85A30 		ldrh	r3, [r4, #90]
 4187 0238 9BB2     		uxth	r3, r3
 4188 023a 002B     		cmp	r3, #0
 4189 023c 49D0     		beq	.L183
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4190              		.loc 1 2567 0
 4191 023e 0029     		cmp	r1, #0
 4192 0240 47D0     		beq	.L183
 4193              	.LVL493:
 4194              	.L207:
 4195              	.LBB663:
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4196              		.loc 1 2577 0 discriminator 1
 4197 0242 2268     		ldr	r2, [r4]
 4198              	.LVL494:
 4199              	.LBB664:
 4200              	.LBB665:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4201              		.loc 2 1155 0 discriminator 1
 4202              		.syntax unified
 4203              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4204 0244 52E8003F 		ldrex r3, [r2]
 4205              	@ 0 "" 2
ARM GAS  /tmp/cc9Y1vpF.s 			page 181


 4206              	.LVL495:
 4207              		.thumb
 4208              		.syntax unified
 4209              	.LBE665:
 4210              	.LBE664:
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4211              		.loc 1 2577 0 discriminator 1
 4212 0248 23F49073 		bic	r3, r3, #288
 4213              	.LVL496:
 4214              	.LBB666:
 4215              	.LBB667:
 4216              		.loc 2 1206 0 discriminator 1
 4217              		.syntax unified
 4218              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4219 024c 42E80030 		strex r0, r3, [r2]
 4220              	@ 0 "" 2
 4221              	.LVL497:
 4222              		.thumb
 4223              		.syntax unified
 4224              	.LBE667:
 4225              	.LBE666:
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4226              		.loc 1 2577 0 discriminator 1
 4227 0250 0028     		cmp	r0, #0
 4228 0252 F6D1     		bne	.L207
 4229              	.LVL498:
 4230              	.L208:
 4231              	.LBE663:
 4232              	.LBB668:
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 4233              		.loc 1 2580 0 discriminator 1
 4234 0254 2268     		ldr	r2, [r4]
 4235              	.LVL499:
 4236              	.LBB669:
 4237              	.LBB670:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4238              		.loc 2 1155 0 discriminator 1
 4239 0256 02F10803 		add	r3, r2, #8
 4240              	.LVL500:
 4241              		.syntax unified
 4242              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4243 025a 53E8003F 		ldrex r3, [r3]
 4244              	@ 0 "" 2
 4245              	.LVL501:
 4246              		.thumb
 4247              		.syntax unified
 4248              	.LBE670:
 4249              	.LBE669:
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 4250              		.loc 1 2580 0 discriminator 1
 4251 025e 23F00103 		bic	r3, r3, #1
 4252              	.LVL502:
 4253              	.LBB671:
 4254              	.LBB672:
 4255              		.loc 2 1206 0 discriminator 1
 4256 0262 0832     		adds	r2, r2, #8
 4257              	.LVL503:
ARM GAS  /tmp/cc9Y1vpF.s 			page 182


 4258              		.syntax unified
 4259              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4260 0264 42E80030 		strex r0, r3, [r2]
 4261              	@ 0 "" 2
 4262              	.LVL504:
 4263              		.thumb
 4264              		.syntax unified
 4265              	.LBE672:
 4266              	.LBE671:
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 4267              		.loc 1 2580 0 discriminator 1
 4268 0268 0028     		cmp	r0, #0
 4269 026a F3D1     		bne	.L208
 4270              	.LBE668:
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4271              		.loc 1 2584 0
 4272 026c 2023     		movs	r3, #32
 4273              	.LVL505:
 4274 026e E367     		str	r3, [r4, #124]
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4275              		.loc 1 2585 0
 4276 0270 0023     		movs	r3, #0
 4277 0272 2366     		str	r3, [r4, #96]
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4278              		.loc 1 2588 0
 4279 0274 6366     		str	r3, [r4, #100]
 4280              	.L209:
 4281              	.LBB673:
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 4282              		.loc 1 2590 0 discriminator 1
 4283 0276 2268     		ldr	r2, [r4]
 4284              	.LVL506:
 4285              	.LBB674:
 4286              	.LBB675:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4287              		.loc 2 1155 0 discriminator 1
 4288              		.syntax unified
 4289              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4290 0278 52E8003F 		ldrex r3, [r2]
 4291              	@ 0 "" 2
 4292              	.LVL507:
 4293              		.thumb
 4294              		.syntax unified
 4295              	.LBE675:
 4296              	.LBE674:
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 4297              		.loc 1 2590 0 discriminator 1
 4298 027c 23F01003 		bic	r3, r3, #16
 4299              	.LVL508:
 4300              	.LBB676:
 4301              	.LBB677:
 4302              		.loc 2 1206 0 discriminator 1
 4303              		.syntax unified
 4304              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4305 0280 42E80030 		strex r0, r3, [r2]
 4306              	@ 0 "" 2
 4307              	.LVL509:
ARM GAS  /tmp/cc9Y1vpF.s 			page 183


 4308              		.thumb
 4309              		.syntax unified
 4310              	.LBE677:
 4311              	.LBE676:
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 4312              		.loc 1 2590 0 discriminator 1
 4313 0284 0028     		cmp	r0, #0
 4314 0286 F6D1     		bne	.L209
 4315              	.LBE673:
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4316              		.loc 1 2596 0
 4317 0288 2046     		mov	r0, r4
 4318 028a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4319              	.LVL510:
 4320 028e 70BD     		pop	{r4, r5, r6, pc}
 4321              	.LVL511:
 4322              	.L200:
 4323              	.LBE662:
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4324              		.loc 1 2604 0
 4325 0290 13F4801F 		tst	r3, #1048576
 4326 0294 09D0     		beq	.L210
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4327              		.loc 1 2604 0 is_stmt 0 discriminator 1
 4328 0296 15F4800F 		tst	r5, #4194304
 4329 029a 06D0     		beq	.L210
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4330              		.loc 1 2606 0 is_stmt 1
 4331 029c 4FF48013 		mov	r3, #1048576
 4332              	.LVL512:
 4333 02a0 0B62     		str	r3, [r1, #32]
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4334              		.loc 1 2616 0
 4335 02a2 2046     		mov	r0, r4
 4336              	.LVL513:
 4337 02a4 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 4338              	.LVL514:
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4339              		.loc 1 2618 0
 4340 02a8 70BD     		pop	{r4, r5, r6, pc}
 4341              	.LVL515:
 4342              	.L210:
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 4343              		.loc 1 2627 0
 4344 02aa 13F0800F 		tst	r3, #128
 4345 02ae 07D0     		beq	.L211
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 4346              		.loc 1 2628 0
 4347 02b0 10F0800F 		tst	r0, #128
 4348 02b4 04D0     		beq	.L211
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4349              		.loc 1 2631 0
 4350 02b6 A36E     		ldr	r3, [r4, #104]
 4351              	.LVL516:
 4352 02b8 5BB1     		cbz	r3, .L183
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4353              		.loc 1 2633 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 184


 4354 02ba 2046     		mov	r0, r4
 4355              	.LVL517:
 4356 02bc 9847     		blx	r3
 4357              	.LVL518:
 4358 02be 70BD     		pop	{r4, r5, r6, pc}
 4359              	.LVL519:
 4360              	.L211:
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4361              		.loc 1 2639 0
 4362 02c0 13F0400F 		tst	r3, #64
 4363 02c4 05D0     		beq	.L183
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4364              		.loc 1 2639 0 is_stmt 0 discriminator 1
 4365 02c6 10F0400F 		tst	r0, #64
 4366 02ca 02D0     		beq	.L183
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 4367              		.loc 1 2641 0 is_stmt 1
 4368 02cc 2046     		mov	r0, r4
 4369              	.LVL520:
 4370 02ce FFF7FEFF 		bl	UART_EndTransmit_IT
 4371              	.LVL521:
 4372              	.L183:
 4373 02d2 70BD     		pop	{r4, r5, r6, pc}
 4374              	.LVL522:
 4375              	.L214:
 4376              		.align	2
 4377              	.L213:
 4378 02d4 20010004 		.word	67109152
 4379 02d8 00000000 		.word	UART_DMAAbortOnError
 4380              		.cfi_endproc
 4381              	.LFE154:
 4383              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 4384              		.align	2
 4385              		.thumb
 4386              		.thumb_func
 4388              	UART_RxISR_8BIT:
 4389              	.LFB196:
4363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
4368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
4372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4390              		.loc 1 4372 0
 4391              		.cfi_startproc
 4392              		@ args = 0, pretend = 0, frame = 0
 4393              		@ frame_needed = 0, uses_anonymous_args = 0
 4394              	.LVL523:
 4395 0000 08B5     		push	{r3, lr}
 4396              	.LCFI22:
 4397              		.cfi_def_cfa_offset 8
 4398              		.cfi_offset 3, -8
 4399              		.cfi_offset 14, -4
ARM GAS  /tmp/cc9Y1vpF.s 			page 185


4373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 4400              		.loc 1 4373 0
 4401 0002 B0F85C20 		ldrh	r2, [r0, #92]
 4402              	.LVL524:
4374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
4375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 4403              		.loc 1 4377 0
 4404 0006 C36F     		ldr	r3, [r0, #124]
 4405 0008 222B     		cmp	r3, #34
 4406 000a 4AD1     		bne	.L216
4378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4407              		.loc 1 4379 0
 4408 000c 0368     		ldr	r3, [r0]
 4409 000e 9B8C     		ldrh	r3, [r3, #36]
 4410              	.LVL525:
4380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 4411              		.loc 1 4380 0
 4412 0010 416D     		ldr	r1, [r0, #84]
 4413 0012 D2B2     		uxtb	r2, r2
 4414              	.LVL526:
 4415 0014 1A40     		ands	r2, r2, r3
 4416 0016 0A70     		strb	r2, [r1]
 4417              	.LVL527:
4381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 4418              		.loc 1 4381 0
 4419 0018 436D     		ldr	r3, [r0, #84]
 4420              	.LVL528:
 4421 001a 0133     		adds	r3, r3, #1
 4422 001c 4365     		str	r3, [r0, #84]
4382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 4423              		.loc 1 4382 0
 4424 001e B0F85A30 		ldrh	r3, [r0, #90]
 4425 0022 9BB2     		uxth	r3, r3
 4426 0024 013B     		subs	r3, r3, #1
 4427 0026 9BB2     		uxth	r3, r3
 4428 0028 A0F85A30 		strh	r3, [r0, #90]	@ movhi
4383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 4429              		.loc 1 4384 0
 4430 002c B0F85A30 		ldrh	r3, [r0, #90]
 4431 0030 9BB2     		uxth	r3, r3
 4432 0032 002B     		cmp	r3, #0
 4433 0034 3BD1     		bne	.L215
 4434              	.L218:
 4435              	.LBB678:
4385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4436              		.loc 1 4390 0 discriminator 1
 4437 0036 0268     		ldr	r2, [r0]
 4438              	.LVL529:
ARM GAS  /tmp/cc9Y1vpF.s 			page 186


 4439              	.LBB679:
 4440              	.LBB680:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4441              		.loc 2 1155 0 discriminator 1
 4442              		.syntax unified
 4443              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4444 0038 52E8003F 		ldrex r3, [r2]
 4445              	@ 0 "" 2
 4446              	.LVL530:
 4447              		.thumb
 4448              		.syntax unified
 4449              	.LBE680:
 4450              	.LBE679:
 4451              		.loc 1 4390 0 discriminator 1
 4452 003c 23F49073 		bic	r3, r3, #288
 4453              	.LVL531:
 4454              	.LBB681:
 4455              	.LBB682:
 4456              		.loc 2 1206 0 discriminator 1
 4457              		.syntax unified
 4458              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4459 0040 42E80031 		strex r1, r3, [r2]
 4460              	@ 0 "" 2
 4461              	.LVL532:
 4462              		.thumb
 4463              		.syntax unified
 4464              	.LBE682:
 4465              	.LBE681:
 4466              		.loc 1 4390 0 discriminator 1
 4467 0044 0029     		cmp	r1, #0
 4468 0046 F6D1     		bne	.L218
 4469              	.LVL533:
 4470              	.L219:
 4471              	.LBE678:
 4472              	.LBB683:
4391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4473              		.loc 1 4394 0 discriminator 1
 4474 0048 0268     		ldr	r2, [r0]
 4475              	.LVL534:
 4476              	.LBB684:
 4477              	.LBB685:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4478              		.loc 2 1155 0 discriminator 1
 4479 004a 02F10803 		add	r3, r2, #8
 4480              	.LVL535:
 4481              		.syntax unified
 4482              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4483 004e 53E8003F 		ldrex r3, [r3]
 4484              	@ 0 "" 2
 4485              	.LVL536:
 4486              		.thumb
 4487              		.syntax unified
 4488              	.LBE685:
 4489              	.LBE684:
ARM GAS  /tmp/cc9Y1vpF.s 			page 187


 4490              		.loc 1 4394 0 discriminator 1
 4491 0052 23F00103 		bic	r3, r3, #1
 4492              	.LVL537:
 4493              	.LBB686:
 4494              	.LBB687:
 4495              		.loc 2 1206 0 discriminator 1
 4496 0056 0832     		adds	r2, r2, #8
 4497              	.LVL538:
 4498              		.syntax unified
 4499              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4500 0058 42E80031 		strex r1, r3, [r2]
 4501              	@ 0 "" 2
 4502              	.LVL539:
 4503              		.thumb
 4504              		.syntax unified
 4505              	.LBE687:
 4506              	.LBE686:
 4507              		.loc 1 4394 0 discriminator 1
 4508 005c 0029     		cmp	r1, #0
 4509 005e F3D1     		bne	.L219
 4510              	.LBE683:
4395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4511              		.loc 1 4397 0
 4512 0060 2023     		movs	r3, #32
 4513              	.LVL540:
 4514 0062 C367     		str	r3, [r0, #124]
4398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 4515              		.loc 1 4400 0
 4516 0064 0023     		movs	r3, #0
 4517 0066 4366     		str	r3, [r0, #100]
4401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check current reception Mode :
4403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4518              		.loc 1 4404 0
 4519 0068 036E     		ldr	r3, [r0, #96]
 4520 006a 012B     		cmp	r3, #1
 4521 006c 16D1     		bne	.L220
4405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set reception type to Standard */
4407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4522              		.loc 1 4407 0
 4523 006e 0023     		movs	r3, #0
 4524 0070 0366     		str	r3, [r0, #96]
 4525              	.L221:
 4526              	.LBB688:
4408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable IDLE interrupt */
4410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 4527              		.loc 1 4410 0 discriminator 1
 4528 0072 0268     		ldr	r2, [r0]
 4529              	.LVL541:
 4530              	.LBB689:
ARM GAS  /tmp/cc9Y1vpF.s 			page 188


 4531              	.LBB690:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4532              		.loc 2 1155 0 discriminator 1
 4533              		.syntax unified
 4534              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4535 0074 52E8003F 		ldrex r3, [r2]
 4536              	@ 0 "" 2
 4537              	.LVL542:
 4538              		.thumb
 4539              		.syntax unified
 4540              	.LBE690:
 4541              	.LBE689:
 4542              		.loc 1 4410 0 discriminator 1
 4543 0078 23F01003 		bic	r3, r3, #16
 4544              	.LVL543:
 4545              	.LBB691:
 4546              	.LBB692:
 4547              		.loc 2 1206 0 discriminator 1
 4548              		.syntax unified
 4549              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4550 007c 42E80031 		strex r1, r3, [r2]
 4551              	@ 0 "" 2
 4552              	.LVL544:
 4553              		.thumb
 4554              		.syntax unified
 4555              	.LBE692:
 4556              	.LBE691:
 4557              		.loc 1 4410 0 discriminator 1
 4558 0080 0029     		cmp	r1, #0
 4559 0082 F6D1     		bne	.L221
 4560              	.LBE688:
4411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 4561              		.loc 1 4412 0
 4562 0084 0368     		ldr	r3, [r0]
 4563              	.LVL545:
 4564 0086 DA69     		ldr	r2, [r3, #28]
 4565 0088 12F0100F 		tst	r2, #16
 4566 008c 01D0     		beq	.L222
4413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
4414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Clear IDLE Flag */
4415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 4567              		.loc 1 4415 0
 4568 008e 1022     		movs	r2, #16
 4569 0090 1A62     		str	r2, [r3, #32]
 4570              	.L222:
4416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
4417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 4571              		.loc 1 4422 0
 4572 0092 B0F85810 		ldrh	r1, [r0, #88]
 4573 0096 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4574              	.LVL546:
ARM GAS  /tmp/cc9Y1vpF.s 			page 189


 4575 009a 08BD     		pop	{r3, pc}
 4576              	.LVL547:
 4577              	.L220:
4423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
4426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Standard reception API called */
4428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 4578              		.loc 1 4433 0
 4579 009c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4580              	.LVL548:
 4581 00a0 08BD     		pop	{r3, pc}
 4582              	.LVL549:
 4583              	.L216:
4434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
4439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4584              		.loc 1 4441 0
 4585 00a2 0268     		ldr	r2, [r0]
 4586              	.LVL550:
 4587 00a4 138B     		ldrh	r3, [r2, #24]
 4588 00a6 9BB2     		uxth	r3, r3
 4589 00a8 43F00803 		orr	r3, r3, #8
 4590 00ac 1383     		strh	r3, [r2, #24]	@ movhi
 4591              	.LVL551:
 4592              	.L215:
 4593 00ae 08BD     		pop	{r3, pc}
 4594              		.cfi_endproc
 4595              	.LFE196:
 4597              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 4598              		.align	2
 4599              		.thumb
 4600              		.thumb_func
 4602              	UART_RxISR_16BIT:
 4603              	.LFB197:
4442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
4447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc9Y1vpF.s 			page 190


4453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4604              		.loc 1 4453 0
 4605              		.cfi_startproc
 4606              		@ args = 0, pretend = 0, frame = 0
 4607              		@ frame_needed = 0, uses_anonymous_args = 0
 4608              	.LVL552:
 4609 0000 08B5     		push	{r3, lr}
 4610              	.LCFI23:
 4611              		.cfi_def_cfa_offset 8
 4612              		.cfi_offset 3, -8
 4613              		.cfi_offset 14, -4
4454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
4455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 4614              		.loc 1 4455 0
 4615 0002 B0F85C20 		ldrh	r2, [r0, #92]
 4616              	.LVL553:
4456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
4457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 4617              		.loc 1 4459 0
 4618 0006 C36F     		ldr	r3, [r0, #124]
 4619 0008 222B     		cmp	r3, #34
 4620 000a 49D1     		bne	.L225
4460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4621              		.loc 1 4461 0
 4622 000c 0368     		ldr	r3, [r0]
 4623 000e 9B8C     		ldrh	r3, [r3, #36]
 4624              	.LVL554:
4462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 4625              		.loc 1 4462 0
 4626 0010 416D     		ldr	r1, [r0, #84]
 4627              	.LVL555:
4463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 4628              		.loc 1 4463 0
 4629 0012 1A40     		ands	r2, r2, r3
 4630              	.LVL556:
 4631 0014 0A80     		strh	r2, [r1]	@ movhi
 4632              	.LVL557:
4464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 4633              		.loc 1 4464 0
 4634 0016 436D     		ldr	r3, [r0, #84]
 4635              	.LVL558:
 4636 0018 0233     		adds	r3, r3, #2
 4637 001a 4365     		str	r3, [r0, #84]
4465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 4638              		.loc 1 4465 0
 4639 001c B0F85A30 		ldrh	r3, [r0, #90]
 4640 0020 9BB2     		uxth	r3, r3
 4641 0022 013B     		subs	r3, r3, #1
 4642 0024 9BB2     		uxth	r3, r3
 4643 0026 A0F85A30 		strh	r3, [r0, #90]	@ movhi
4466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 4644              		.loc 1 4467 0
 4645 002a B0F85A30 		ldrh	r3, [r0, #90]
ARM GAS  /tmp/cc9Y1vpF.s 			page 191


 4646 002e 9BB2     		uxth	r3, r3
 4647 0030 002B     		cmp	r3, #0
 4648 0032 3BD1     		bne	.L224
 4649              	.LVL559:
 4650              	.L227:
 4651              	.LBB693:
4468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4652              		.loc 1 4473 0 discriminator 1
 4653 0034 0268     		ldr	r2, [r0]
 4654              	.LVL560:
 4655              	.LBB694:
 4656              	.LBB695:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4657              		.loc 2 1155 0 discriminator 1
 4658              		.syntax unified
 4659              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4660 0036 52E8003F 		ldrex r3, [r2]
 4661              	@ 0 "" 2
 4662              	.LVL561:
 4663              		.thumb
 4664              		.syntax unified
 4665              	.LBE695:
 4666              	.LBE694:
 4667              		.loc 1 4473 0 discriminator 1
 4668 003a 23F49073 		bic	r3, r3, #288
 4669              	.LVL562:
 4670              	.LBB696:
 4671              	.LBB697:
 4672              		.loc 2 1206 0 discriminator 1
 4673              		.syntax unified
 4674              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4675 003e 42E80031 		strex r1, r3, [r2]
 4676              	@ 0 "" 2
 4677              	.LVL563:
 4678              		.thumb
 4679              		.syntax unified
 4680              	.LBE697:
 4681              	.LBE696:
 4682              		.loc 1 4473 0 discriminator 1
 4683 0042 0029     		cmp	r1, #0
 4684 0044 F6D1     		bne	.L227
 4685              	.LVL564:
 4686              	.L228:
 4687              	.LBE693:
 4688              	.LBB698:
4474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4689              		.loc 1 4477 0 discriminator 1
 4690 0046 0268     		ldr	r2, [r0]
 4691              	.LVL565:
ARM GAS  /tmp/cc9Y1vpF.s 			page 192


 4692              	.LBB699:
 4693              	.LBB700:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4694              		.loc 2 1155 0 discriminator 1
 4695 0048 02F10803 		add	r3, r2, #8
 4696              	.LVL566:
 4697              		.syntax unified
 4698              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4699 004c 53E8003F 		ldrex r3, [r3]
 4700              	@ 0 "" 2
 4701              	.LVL567:
 4702              		.thumb
 4703              		.syntax unified
 4704              	.LBE700:
 4705              	.LBE699:
 4706              		.loc 1 4477 0 discriminator 1
 4707 0050 23F00103 		bic	r3, r3, #1
 4708              	.LVL568:
 4709              	.LBB701:
 4710              	.LBB702:
 4711              		.loc 2 1206 0 discriminator 1
 4712 0054 0832     		adds	r2, r2, #8
 4713              	.LVL569:
 4714              		.syntax unified
 4715              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4716 0056 42E80031 		strex r1, r3, [r2]
 4717              	@ 0 "" 2
 4718              	.LVL570:
 4719              		.thumb
 4720              		.syntax unified
 4721              	.LBE702:
 4722              	.LBE701:
 4723              		.loc 1 4477 0 discriminator 1
 4724 005a 0029     		cmp	r1, #0
 4725 005c F3D1     		bne	.L228
 4726              	.LBE698:
4478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4727              		.loc 1 4480 0
 4728 005e 2023     		movs	r3, #32
 4729              	.LVL571:
 4730 0060 C367     		str	r3, [r0, #124]
4481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 4731              		.loc 1 4483 0
 4732 0062 0023     		movs	r3, #0
 4733 0064 4366     		str	r3, [r0, #100]
4484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check current reception Mode :
4486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4734              		.loc 1 4487 0
 4735 0066 036E     		ldr	r3, [r0, #96]
 4736 0068 012B     		cmp	r3, #1
 4737 006a 16D1     		bne	.L229
ARM GAS  /tmp/cc9Y1vpF.s 			page 193


4488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set reception type to Standard */
4490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4738              		.loc 1 4490 0
 4739 006c 0023     		movs	r3, #0
 4740 006e 0366     		str	r3, [r0, #96]
 4741              	.L230:
 4742              	.LBB703:
4491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable IDLE interrupt */
4493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 4743              		.loc 1 4493 0 discriminator 1
 4744 0070 0268     		ldr	r2, [r0]
 4745              	.LVL572:
 4746              	.LBB704:
 4747              	.LBB705:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4748              		.loc 2 1155 0 discriminator 1
 4749              		.syntax unified
 4750              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4751 0072 52E8003F 		ldrex r3, [r2]
 4752              	@ 0 "" 2
 4753              	.LVL573:
 4754              		.thumb
 4755              		.syntax unified
 4756              	.LBE705:
 4757              	.LBE704:
 4758              		.loc 1 4493 0 discriminator 1
 4759 0076 23F01003 		bic	r3, r3, #16
 4760              	.LVL574:
 4761              	.LBB706:
 4762              	.LBB707:
 4763              		.loc 2 1206 0 discriminator 1
 4764              		.syntax unified
 4765              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4766 007a 42E80031 		strex r1, r3, [r2]
 4767              	@ 0 "" 2
 4768              	.LVL575:
 4769              		.thumb
 4770              		.syntax unified
 4771              	.LBE707:
 4772              	.LBE706:
 4773              		.loc 1 4493 0 discriminator 1
 4774 007e 0029     		cmp	r1, #0
 4775 0080 F6D1     		bne	.L230
 4776              	.LBE703:
4494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 4777              		.loc 1 4495 0
 4778 0082 0368     		ldr	r3, [r0]
 4779              	.LVL576:
 4780 0084 DA69     		ldr	r2, [r3, #28]
 4781 0086 12F0100F 		tst	r2, #16
 4782 008a 01D0     		beq	.L231
4496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
4497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Clear IDLE Flag */
4498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
ARM GAS  /tmp/cc9Y1vpF.s 			page 194


 4783              		.loc 1 4498 0
 4784 008c 1022     		movs	r2, #16
 4785 008e 1A62     		str	r2, [r3, #32]
 4786              	.L231:
4499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
4500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 4787              		.loc 1 4505 0
 4788 0090 B0F85810 		ldrh	r1, [r0, #88]
 4789 0094 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4790              	.LVL577:
 4791 0098 08BD     		pop	{r3, pc}
 4792              	.LVL578:
 4793              	.L229:
4506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
4509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Standard reception API called */
4511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 4794              		.loc 1 4516 0
 4795 009a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4796              	.LVL579:
 4797 009e 08BD     		pop	{r3, pc}
 4798              	.LVL580:
 4799              	.L225:
4517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
4522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4800              		.loc 1 4524 0
 4801 00a0 0268     		ldr	r2, [r0]
 4802              	.LVL581:
 4803 00a2 138B     		ldrh	r3, [r2, #24]
 4804 00a4 9BB2     		uxth	r3, r3
 4805 00a6 43F00803 		orr	r3, r3, #8
 4806 00aa 1383     		strh	r3, [r2, #24]	@ movhi
 4807              	.LVL582:
 4808              	.L224:
 4809 00ac 08BD     		pop	{r3, pc}
 4810              		.cfi_endproc
 4811              	.LFE197:
 4813 00ae 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 4814              		.align	2
ARM GAS  /tmp/cc9Y1vpF.s 			page 195


 4815              		.thumb
 4816              		.thumb_func
 4818              	UART_DMARxHalfCplt:
 4819              	.LFB186:
3921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 4820              		.loc 1 3921 0
 4821              		.cfi_startproc
 4822              		@ args = 0, pretend = 0, frame = 0
 4823              		@ frame_needed = 0, uses_anonymous_args = 0
 4824              	.LVL583:
 4825 0000 08B5     		push	{r3, lr}
 4826              	.LCFI24:
 4827              		.cfi_def_cfa_offset 8
 4828              		.cfi_offset 3, -8
 4829              		.cfi_offset 14, -4
3922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4830              		.loc 1 3922 0
 4831 0002 806A     		ldr	r0, [r0, #40]
 4832              	.LVL584:
3926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4833              		.loc 1 3926 0
 4834 0004 036E     		ldr	r3, [r0, #96]
 4835 0006 012B     		cmp	r3, #1
 4836 0008 05D1     		bne	.L234
3933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4837              		.loc 1 3933 0
 4838 000a B0F85810 		ldrh	r1, [r0, #88]
 4839 000e 4908     		lsrs	r1, r1, #1
 4840 0010 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4841              	.LVL585:
 4842 0014 08BD     		pop	{r3, pc}
 4843              	.LVL586:
 4844              	.L234:
3944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4845              		.loc 1 3944 0
 4846 0016 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 4847              	.LVL587:
 4848 001a 08BD     		pop	{r3, pc}
 4849              		.cfi_endproc
 4850              	.LFE186:
 4852              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 4853              		.align	2
 4854              		.thumb
 4855              		.thumb_func
 4857              	UART_DMAReceiveCplt:
 4858              	.LFB185:
3864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 4859              		.loc 1 3864 0
 4860              		.cfi_startproc
 4861              		@ args = 0, pretend = 0, frame = 0
 4862              		@ frame_needed = 0, uses_anonymous_args = 0
 4863              	.LVL588:
 4864 0000 08B5     		push	{r3, lr}
 4865              	.LCFI25:
 4866              		.cfi_def_cfa_offset 8
 4867              		.cfi_offset 3, -8
 4868              		.cfi_offset 14, -4
ARM GAS  /tmp/cc9Y1vpF.s 			page 196


3865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4869              		.loc 1 3865 0
 4870 0002 826A     		ldr	r2, [r0, #40]
 4871              	.LVL589:
3868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4872              		.loc 1 3868 0
 4873 0004 0368     		ldr	r3, [r0]
 4874 0006 1B68     		ldr	r3, [r3]
 4875 0008 13F0200F 		tst	r3, #32
 4876 000c 31D1     		bne	.L238
3870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4877              		.loc 1 3870 0
 4878 000e 0023     		movs	r3, #0
 4879 0010 A2F85A30 		strh	r3, [r2, #90]	@ movhi
 4880              	.LVL590:
 4881              	.L239:
 4882              	.LBB708:
3873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4883              		.loc 1 3873 0 discriminator 1
 4884 0014 1168     		ldr	r1, [r2]
 4885              	.LVL591:
 4886              	.LBB709:
 4887              	.LBB710:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4888              		.loc 2 1155 0 discriminator 1
 4889              		.syntax unified
 4890              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4891 0016 51E8003F 		ldrex r3, [r1]
 4892              	@ 0 "" 2
 4893              	.LVL592:
 4894              		.thumb
 4895              		.syntax unified
 4896              	.LBE710:
 4897              	.LBE709:
3873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4898              		.loc 1 3873 0 discriminator 1
 4899 001a 23F48073 		bic	r3, r3, #256
 4900              	.LVL593:
 4901              	.LBB711:
 4902              	.LBB712:
 4903              		.loc 2 1206 0 discriminator 1
 4904              		.syntax unified
 4905              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4906 001e 41E80030 		strex r0, r3, [r1]
 4907              	@ 0 "" 2
 4908              	.LVL594:
 4909              		.thumb
 4910              		.syntax unified
 4911              	.LBE712:
 4912              	.LBE711:
3873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4913              		.loc 1 3873 0 discriminator 1
 4914 0022 0028     		cmp	r0, #0
 4915 0024 F6D1     		bne	.L239
 4916              	.LVL595:
 4917              	.L240:
 4918              	.LBE708:
ARM GAS  /tmp/cc9Y1vpF.s 			page 197


 4919              	.LBB713:
3874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4920              		.loc 1 3874 0 discriminator 1
 4921 0026 1168     		ldr	r1, [r2]
 4922              	.LVL596:
 4923              	.LBB714:
 4924              	.LBB715:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4925              		.loc 2 1155 0 discriminator 1
 4926 0028 01F10803 		add	r3, r1, #8
 4927              	.LVL597:
 4928              		.syntax unified
 4929              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4930 002c 53E8003F 		ldrex r3, [r3]
 4931              	@ 0 "" 2
 4932              	.LVL598:
 4933              		.thumb
 4934              		.syntax unified
 4935              	.LBE715:
 4936              	.LBE714:
3874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4937              		.loc 1 3874 0 discriminator 1
 4938 0030 23F00103 		bic	r3, r3, #1
 4939              	.LVL599:
 4940              	.LBB716:
 4941              	.LBB717:
 4942              		.loc 2 1206 0 discriminator 1
 4943 0034 0831     		adds	r1, r1, #8
 4944              	.LVL600:
 4945              		.syntax unified
 4946              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4947 0036 41E80030 		strex r0, r3, [r1]
 4948              	@ 0 "" 2
 4949              	.LVL601:
 4950              		.thumb
 4951              		.syntax unified
 4952              	.LBE717:
 4953              	.LBE716:
3874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4954              		.loc 1 3874 0 discriminator 1
 4955 003a 0028     		cmp	r0, #0
 4956 003c F3D1     		bne	.L240
 4957              	.LVL602:
 4958              	.L241:
 4959              	.LBE713:
 4960              	.LBB718:
3878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4961              		.loc 1 3878 0 discriminator 1
 4962 003e 1168     		ldr	r1, [r2]
 4963              	.LVL603:
 4964              	.LBB719:
 4965              	.LBB720:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4966              		.loc 2 1155 0 discriminator 1
 4967 0040 01F10803 		add	r3, r1, #8
 4968              	.LVL604:
 4969              		.syntax unified
ARM GAS  /tmp/cc9Y1vpF.s 			page 198


 4970              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4971 0044 53E8003F 		ldrex r3, [r3]
 4972              	@ 0 "" 2
 4973              	.LVL605:
 4974              		.thumb
 4975              		.syntax unified
 4976              	.LBE720:
 4977              	.LBE719:
3878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4978              		.loc 1 3878 0 discriminator 1
 4979 0048 23F04003 		bic	r3, r3, #64
 4980              	.LVL606:
 4981              	.LBB721:
 4982              	.LBB722:
 4983              		.loc 2 1206 0 discriminator 1
 4984 004c 0831     		adds	r1, r1, #8
 4985              	.LVL607:
 4986              		.syntax unified
 4987              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4988 004e 41E80030 		strex r0, r3, [r1]
 4989              	@ 0 "" 2
 4990              	.LVL608:
 4991              		.thumb
 4992              		.syntax unified
 4993              	.LBE722:
 4994              	.LBE721:
3878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4995              		.loc 1 3878 0 discriminator 1
 4996 0052 0028     		cmp	r0, #0
 4997 0054 F3D1     		bne	.L241
 4998              	.LBE718:
3881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4999              		.loc 1 3881 0
 5000 0056 2023     		movs	r3, #32
 5001              	.LVL609:
 5002 0058 D367     		str	r3, [r2, #124]
3884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 5003              		.loc 1 3884 0
 5004 005a 136E     		ldr	r3, [r2, #96]
 5005 005c 012B     		cmp	r3, #1
 5006 005e 08D1     		bne	.L238
 5007              	.L242:
 5008              	.LBB723:
3886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5009              		.loc 1 3886 0 discriminator 1
 5010 0060 1168     		ldr	r1, [r2]
 5011              	.LVL610:
 5012              	.LBB724:
 5013              	.LBB725:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5014              		.loc 2 1155 0 discriminator 1
 5015              		.syntax unified
 5016              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5017 0062 51E8003F 		ldrex r3, [r1]
 5018              	@ 0 "" 2
 5019              	.LVL611:
 5020              		.thumb
ARM GAS  /tmp/cc9Y1vpF.s 			page 199


 5021              		.syntax unified
 5022              	.LBE725:
 5023              	.LBE724:
3886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5024              		.loc 1 3886 0 discriminator 1
 5025 0066 23F01003 		bic	r3, r3, #16
 5026              	.LVL612:
 5027              	.LBB726:
 5028              	.LBB727:
 5029              		.loc 2 1206 0 discriminator 1
 5030              		.syntax unified
 5031              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5032 006a 41E80030 		strex r0, r3, [r1]
 5033              	@ 0 "" 2
 5034              	.LVL613:
 5035              		.thumb
 5036              		.syntax unified
 5037              	.LBE727:
 5038              	.LBE726:
3886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5039              		.loc 1 3886 0 discriminator 1
 5040 006e 0028     		cmp	r0, #0
 5041 0070 F6D1     		bne	.L242
 5042              	.LVL614:
 5043              	.L238:
 5044              	.LBE723:
3892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5045              		.loc 1 3892 0
 5046 0072 136E     		ldr	r3, [r2, #96]
 5047 0074 012B     		cmp	r3, #1
 5048 0076 05D1     		bne	.L243
3899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5049              		.loc 1 3899 0
 5050 0078 B2F85810 		ldrh	r1, [r2, #88]
 5051 007c 1046     		mov	r0, r2
 5052 007e FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5053              	.LVL615:
 5054 0082 08BD     		pop	{r3, pc}
 5055              	.LVL616:
 5056              	.L243:
3910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5057              		.loc 1 3910 0
 5058 0084 1046     		mov	r0, r2
 5059 0086 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5060              	.LVL617:
 5061 008a 08BD     		pop	{r3, pc}
 5062              		.cfi_endproc
 5063              	.LFE185:
 5065              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 5066              		.align	2
 5067              		.global	HAL_UART_ReceiverTimeout_Config
 5068              		.thumb
 5069              		.thumb_func
 5071              	HAL_UART_ReceiverTimeout_Config:
 5072              	.LFB164:
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 5073              		.loc 1 2850 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 200


 5074              		.cfi_startproc
 5075              		@ args = 0, pretend = 0, frame = 0
 5076              		@ frame_needed = 0, uses_anonymous_args = 0
 5077              		@ link register save eliminated.
 5078              	.LVL618:
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5079              		.loc 1 2851 0
 5080 0000 0368     		ldr	r3, [r0]
 5081 0002 044A     		ldr	r2, .L248
 5082 0004 9342     		cmp	r3, r2
 5083 0006 04D0     		beq	.L246
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5084              		.loc 1 2854 0
 5085 0008 5A69     		ldr	r2, [r3, #20]
 5086 000a 02F07F42 		and	r2, r2, #-16777216
 5087 000e 1143     		orrs	r1, r1, r2
 5088              	.LVL619:
 5089 0010 5961     		str	r1, [r3, #20]
 5090              	.L246:
 5091 0012 7047     		bx	lr
 5092              	.L249:
 5093              		.align	2
 5094              	.L248:
 5095 0014 00800040 		.word	1073774592
 5096              		.cfi_endproc
 5097              	.LFE164:
 5099              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 5100              		.align	2
 5101              		.global	HAL_UART_EnableReceiverTimeout
 5102              		.thumb
 5103              		.thumb_func
 5105              	HAL_UART_EnableReceiverTimeout:
 5106              	.LFB165:
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 5107              		.loc 1 2865 0
 5108              		.cfi_startproc
 5109              		@ args = 0, pretend = 0, frame = 0
 5110              		@ frame_needed = 0, uses_anonymous_args = 0
 5111              		@ link register save eliminated.
 5112              	.LVL620:
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5113              		.loc 1 2866 0
 5114 0000 0368     		ldr	r3, [r0]
 5115 0002 104A     		ldr	r2, .L255
 5116 0004 9342     		cmp	r3, r2
 5117 0006 16D0     		beq	.L252
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 5118              		.loc 1 2868 0
 5119 0008 826F     		ldr	r2, [r0, #120]
 5120 000a 202A     		cmp	r2, #32
 5121 000c 15D1     		bne	.L253
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5122              		.loc 1 2871 0
 5123 000e 90F87420 		ldrb	r2, [r0, #116]	@ zero_extendqisi2
 5124 0012 012A     		cmp	r2, #1
 5125 0014 13D0     		beq	.L254
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 201


 5126              		.loc 1 2871 0 is_stmt 0 discriminator 2
 5127 0016 0122     		movs	r2, #1
 5128 0018 80F87420 		strb	r2, [r0, #116]
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5129              		.loc 1 2873 0 is_stmt 1 discriminator 2
 5130 001c 2422     		movs	r2, #36
 5131 001e 8267     		str	r2, [r0, #120]
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5132              		.loc 1 2876 0 discriminator 2
 5133 0020 5A68     		ldr	r2, [r3, #4]
 5134 0022 42F40002 		orr	r2, r2, #8388608
 5135 0026 5A60     		str	r2, [r3, #4]
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5136              		.loc 1 2878 0 discriminator 2
 5137 0028 2023     		movs	r3, #32
 5138 002a 8367     		str	r3, [r0, #120]
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5139              		.loc 1 2881 0 discriminator 2
 5140 002c 0023     		movs	r3, #0
 5141 002e 80F87430 		strb	r3, [r0, #116]
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5142              		.loc 1 2883 0 discriminator 2
 5143 0032 1846     		mov	r0, r3
 5144              	.LVL621:
 5145 0034 7047     		bx	lr
 5146              	.LVL622:
 5147              	.L252:
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5148              		.loc 1 2892 0
 5149 0036 0120     		movs	r0, #1
 5150              	.LVL623:
 5151 0038 7047     		bx	lr
 5152              	.LVL624:
 5153              	.L253:
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5154              		.loc 1 2887 0
 5155 003a 0220     		movs	r0, #2
 5156              	.LVL625:
 5157 003c 7047     		bx	lr
 5158              	.LVL626:
 5159              	.L254:
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5160              		.loc 1 2871 0
 5161 003e 0220     		movs	r0, #2
 5162              	.LVL627:
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5163              		.loc 1 2894 0
 5164 0040 7047     		bx	lr
 5165              	.L256:
 5166 0042 00BF     		.align	2
 5167              	.L255:
 5168 0044 00800040 		.word	1073774592
 5169              		.cfi_endproc
 5170              	.LFE165:
 5172              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 5173              		.align	2
 5174              		.global	HAL_UART_DisableReceiverTimeout
ARM GAS  /tmp/cc9Y1vpF.s 			page 202


 5175              		.thumb
 5176              		.thumb_func
 5178              	HAL_UART_DisableReceiverTimeout:
 5179              	.LFB166:
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 5180              		.loc 1 2903 0
 5181              		.cfi_startproc
 5182              		@ args = 0, pretend = 0, frame = 0
 5183              		@ frame_needed = 0, uses_anonymous_args = 0
 5184              		@ link register save eliminated.
 5185              	.LVL628:
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5186              		.loc 1 2904 0
 5187 0000 0368     		ldr	r3, [r0]
 5188 0002 104A     		ldr	r2, .L262
 5189 0004 9342     		cmp	r3, r2
 5190 0006 16D0     		beq	.L259
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 5191              		.loc 1 2906 0
 5192 0008 826F     		ldr	r2, [r0, #120]
 5193 000a 202A     		cmp	r2, #32
 5194 000c 15D1     		bne	.L260
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5195              		.loc 1 2909 0
 5196 000e 90F87420 		ldrb	r2, [r0, #116]	@ zero_extendqisi2
 5197 0012 012A     		cmp	r2, #1
 5198 0014 13D0     		beq	.L261
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5199              		.loc 1 2909 0 is_stmt 0 discriminator 2
 5200 0016 0122     		movs	r2, #1
 5201 0018 80F87420 		strb	r2, [r0, #116]
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5202              		.loc 1 2911 0 is_stmt 1 discriminator 2
 5203 001c 2422     		movs	r2, #36
 5204 001e 8267     		str	r2, [r0, #120]
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5205              		.loc 1 2914 0 discriminator 2
 5206 0020 5A68     		ldr	r2, [r3, #4]
 5207 0022 22F40002 		bic	r2, r2, #8388608
 5208 0026 5A60     		str	r2, [r3, #4]
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5209              		.loc 1 2916 0 discriminator 2
 5210 0028 2023     		movs	r3, #32
 5211 002a 8367     		str	r3, [r0, #120]
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5212              		.loc 1 2919 0 discriminator 2
 5213 002c 0023     		movs	r3, #0
 5214 002e 80F87430 		strb	r3, [r0, #116]
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5215              		.loc 1 2921 0 discriminator 2
 5216 0032 1846     		mov	r0, r3
 5217              	.LVL629:
 5218 0034 7047     		bx	lr
 5219              	.LVL630:
 5220              	.L259:
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5221              		.loc 1 2930 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 203


 5222 0036 0120     		movs	r0, #1
 5223              	.LVL631:
 5224 0038 7047     		bx	lr
 5225              	.LVL632:
 5226              	.L260:
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5227              		.loc 1 2925 0
 5228 003a 0220     		movs	r0, #2
 5229              	.LVL633:
 5230 003c 7047     		bx	lr
 5231              	.LVL634:
 5232              	.L261:
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5233              		.loc 1 2909 0
 5234 003e 0220     		movs	r0, #2
 5235              	.LVL635:
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5236              		.loc 1 2932 0
 5237 0040 7047     		bx	lr
 5238              	.L263:
 5239 0042 00BF     		.align	2
 5240              	.L262:
 5241 0044 00800040 		.word	1073774592
 5242              		.cfi_endproc
 5243              	.LFE166:
 5245              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 5246              		.align	2
 5247              		.global	HAL_MultiProcessor_EnterMuteMode
 5248              		.thumb
 5249              		.thumb_func
 5251              	HAL_MultiProcessor_EnterMuteMode:
 5252              	.LFB169:
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 5253              		.loc 1 2981 0
 5254              		.cfi_startproc
 5255              		@ args = 0, pretend = 0, frame = 0
 5256              		@ frame_needed = 0, uses_anonymous_args = 0
 5257              		@ link register save eliminated.
 5258              	.LVL636:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5259              		.loc 1 2982 0
 5260 0000 0268     		ldr	r2, [r0]
 5261 0002 138B     		ldrh	r3, [r2, #24]
 5262 0004 9BB2     		uxth	r3, r3
 5263 0006 43F00403 		orr	r3, r3, #4
 5264 000a 1383     		strh	r3, [r2, #24]	@ movhi
 5265 000c 7047     		bx	lr
 5266              		.cfi_endproc
 5267              	.LFE169:
 5269 000e 00BF     		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 5270              		.align	2
 5271              		.global	HAL_HalfDuplex_EnableTransmitter
 5272              		.thumb
 5273              		.thumb_func
 5275              	HAL_HalfDuplex_EnableTransmitter:
 5276              	.LFB170:
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /tmp/cc9Y1vpF.s 			page 204


 5277              		.loc 1 2991 0
 5278              		.cfi_startproc
 5279              		@ args = 0, pretend = 0, frame = 0
 5280              		@ frame_needed = 0, uses_anonymous_args = 0
 5281              		@ link register save eliminated.
 5282              	.LVL637:
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5283              		.loc 1 2992 0
 5284 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 5285 0004 012B     		cmp	r3, #1
 5286 0006 1DD0     		beq	.L269
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5287              		.loc 1 2992 0 is_stmt 0 discriminator 2
 5288 0008 0123     		movs	r3, #1
 5289 000a 80F87430 		strb	r3, [r0, #116]
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5290              		.loc 1 2993 0 is_stmt 1 discriminator 2
 5291 000e 2423     		movs	r3, #36
 5292 0010 8367     		str	r3, [r0, #120]
 5293              	.L267:
 5294              	.LBB728:
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5295              		.loc 1 2996 0 discriminator 1
 5296 0012 0268     		ldr	r2, [r0]
 5297              	.LVL638:
 5298              	.LBB729:
 5299              	.LBB730:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5300              		.loc 2 1155 0 discriminator 1
 5301              		.syntax unified
 5302              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5303 0014 52E8003F 		ldrex r3, [r2]
 5304              	@ 0 "" 2
 5305              	.LVL639:
 5306              		.thumb
 5307              		.syntax unified
 5308              	.LBE730:
 5309              	.LBE729:
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5310              		.loc 1 2996 0 discriminator 1
 5311 0018 23F00C03 		bic	r3, r3, #12
 5312              	.LVL640:
 5313              	.LBB731:
 5314              	.LBB732:
 5315              		.loc 2 1206 0 discriminator 1
 5316              		.syntax unified
 5317              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5318 001c 42E80031 		strex r1, r3, [r2]
 5319              	@ 0 "" 2
 5320              	.LVL641:
 5321              		.thumb
 5322              		.syntax unified
 5323              	.LBE732:
 5324              	.LBE731:
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5325              		.loc 1 2996 0 discriminator 1
 5326 0020 0029     		cmp	r1, #0
ARM GAS  /tmp/cc9Y1vpF.s 			page 205


 5327 0022 F6D1     		bne	.L267
 5328              	.LVL642:
 5329              	.L268:
 5330              	.LBE728:
 5331              	.LBB733:
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5332              		.loc 1 2999 0 discriminator 1
 5333 0024 0268     		ldr	r2, [r0]
 5334              	.LVL643:
 5335              	.LBB734:
 5336              	.LBB735:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5337              		.loc 2 1155 0 discriminator 1
 5338              		.syntax unified
 5339              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5340 0026 52E8003F 		ldrex r3, [r2]
 5341              	@ 0 "" 2
 5342              	.LVL644:
 5343              		.thumb
 5344              		.syntax unified
 5345              	.LBE735:
 5346              	.LBE734:
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5347              		.loc 1 2999 0 discriminator 1
 5348 002a 43F00803 		orr	r3, r3, #8
 5349              	.LVL645:
 5350              	.LBB736:
 5351              	.LBB737:
 5352              		.loc 2 1206 0 discriminator 1
 5353              		.syntax unified
 5354              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5355 002e 42E80031 		strex r1, r3, [r2]
 5356              	@ 0 "" 2
 5357              	.LVL646:
 5358              		.thumb
 5359              		.syntax unified
 5360              	.LBE737:
 5361              	.LBE736:
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5362              		.loc 1 2999 0 discriminator 1
 5363 0032 0029     		cmp	r1, #0
 5364 0034 F6D1     		bne	.L268
 5365              	.LBE733:
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5366              		.loc 1 3001 0
 5367 0036 2023     		movs	r3, #32
 5368              	.LVL647:
 5369 0038 8367     		str	r3, [r0, #120]
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5370              		.loc 1 3003 0
 5371 003a 0023     		movs	r3, #0
 5372 003c 80F87430 		strb	r3, [r0, #116]
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5373              		.loc 1 3005 0
 5374 0040 1846     		mov	r0, r3
 5375              	.LVL648:
 5376 0042 7047     		bx	lr
ARM GAS  /tmp/cc9Y1vpF.s 			page 206


 5377              	.LVL649:
 5378              	.L269:
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5379              		.loc 1 2992 0
 5380 0044 0220     		movs	r0, #2
 5381              	.LVL650:
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5382              		.loc 1 3006 0
 5383 0046 7047     		bx	lr
 5384              		.cfi_endproc
 5385              	.LFE170:
 5387              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 5388              		.align	2
 5389              		.global	HAL_HalfDuplex_EnableReceiver
 5390              		.thumb
 5391              		.thumb_func
 5393              	HAL_HalfDuplex_EnableReceiver:
 5394              	.LFB171:
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 5395              		.loc 1 3014 0
 5396              		.cfi_startproc
 5397              		@ args = 0, pretend = 0, frame = 0
 5398              		@ frame_needed = 0, uses_anonymous_args = 0
 5399              		@ link register save eliminated.
 5400              	.LVL651:
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5401              		.loc 1 3015 0
 5402 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 5403 0004 012B     		cmp	r3, #1
 5404 0006 1DD0     		beq	.L274
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5405              		.loc 1 3015 0 is_stmt 0 discriminator 2
 5406 0008 0123     		movs	r3, #1
 5407 000a 80F87430 		strb	r3, [r0, #116]
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5408              		.loc 1 3016 0 is_stmt 1 discriminator 2
 5409 000e 2423     		movs	r3, #36
 5410 0010 8367     		str	r3, [r0, #120]
 5411              	.L272:
 5412              	.LBB738:
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5413              		.loc 1 3019 0 discriminator 1
 5414 0012 0268     		ldr	r2, [r0]
 5415              	.LVL652:
 5416              	.LBB739:
 5417              	.LBB740:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5418              		.loc 2 1155 0 discriminator 1
 5419              		.syntax unified
 5420              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5421 0014 52E8003F 		ldrex r3, [r2]
 5422              	@ 0 "" 2
 5423              	.LVL653:
 5424              		.thumb
 5425              		.syntax unified
 5426              	.LBE740:
 5427              	.LBE739:
ARM GAS  /tmp/cc9Y1vpF.s 			page 207


3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5428              		.loc 1 3019 0 discriminator 1
 5429 0018 23F00C03 		bic	r3, r3, #12
 5430              	.LVL654:
 5431              	.LBB741:
 5432              	.LBB742:
 5433              		.loc 2 1206 0 discriminator 1
 5434              		.syntax unified
 5435              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5436 001c 42E80031 		strex r1, r3, [r2]
 5437              	@ 0 "" 2
 5438              	.LVL655:
 5439              		.thumb
 5440              		.syntax unified
 5441              	.LBE742:
 5442              	.LBE741:
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5443              		.loc 1 3019 0 discriminator 1
 5444 0020 0029     		cmp	r1, #0
 5445 0022 F6D1     		bne	.L272
 5446              	.LVL656:
 5447              	.L273:
 5448              	.LBE738:
 5449              	.LBB743:
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5450              		.loc 1 3022 0 discriminator 1
 5451 0024 0268     		ldr	r2, [r0]
 5452              	.LVL657:
 5453              	.LBB744:
 5454              	.LBB745:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5455              		.loc 2 1155 0 discriminator 1
 5456              		.syntax unified
 5457              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5458 0026 52E8003F 		ldrex r3, [r2]
 5459              	@ 0 "" 2
 5460              	.LVL658:
 5461              		.thumb
 5462              		.syntax unified
 5463              	.LBE745:
 5464              	.LBE744:
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5465              		.loc 1 3022 0 discriminator 1
 5466 002a 43F00403 		orr	r3, r3, #4
 5467              	.LVL659:
 5468              	.LBB746:
 5469              	.LBB747:
 5470              		.loc 2 1206 0 discriminator 1
 5471              		.syntax unified
 5472              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5473 002e 42E80031 		strex r1, r3, [r2]
 5474              	@ 0 "" 2
 5475              	.LVL660:
 5476              		.thumb
 5477              		.syntax unified
 5478              	.LBE747:
 5479              	.LBE746:
ARM GAS  /tmp/cc9Y1vpF.s 			page 208


3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5480              		.loc 1 3022 0 discriminator 1
 5481 0032 0029     		cmp	r1, #0
 5482 0034 F6D1     		bne	.L273
 5483              	.LBE743:
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5484              		.loc 1 3024 0
 5485 0036 2023     		movs	r3, #32
 5486              	.LVL661:
 5487 0038 8367     		str	r3, [r0, #120]
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5488              		.loc 1 3026 0
 5489 003a 0023     		movs	r3, #0
 5490 003c 80F87430 		strb	r3, [r0, #116]
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5491              		.loc 1 3028 0
 5492 0040 1846     		mov	r0, r3
 5493              	.LVL662:
 5494 0042 7047     		bx	lr
 5495              	.LVL663:
 5496              	.L274:
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5497              		.loc 1 3015 0
 5498 0044 0220     		movs	r0, #2
 5499              	.LVL664:
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5500              		.loc 1 3029 0
 5501 0046 7047     		bx	lr
 5502              		.cfi_endproc
 5503              	.LFE171:
 5505              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5506              		.align	2
 5507              		.global	HAL_LIN_SendBreak
 5508              		.thumb
 5509              		.thumb_func
 5511              	HAL_LIN_SendBreak:
 5512              	.LFB172:
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 5513              		.loc 1 3038 0
 5514              		.cfi_startproc
 5515              		@ args = 0, pretend = 0, frame = 0
 5516              		@ frame_needed = 0, uses_anonymous_args = 0
 5517              		@ link register save eliminated.
 5518              	.LVL665:
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5519              		.loc 1 3042 0
 5520 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 5521 0004 012B     		cmp	r3, #1
 5522 0006 11D0     		beq	.L277
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5523              		.loc 1 3042 0 is_stmt 0 discriminator 2
 5524 0008 0123     		movs	r3, #1
 5525 000a 80F87430 		strb	r3, [r0, #116]
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5526              		.loc 1 3044 0 is_stmt 1 discriminator 2
 5527 000e 2423     		movs	r3, #36
 5528 0010 8367     		str	r3, [r0, #120]
ARM GAS  /tmp/cc9Y1vpF.s 			page 209


3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5529              		.loc 1 3047 0 discriminator 2
 5530 0012 0268     		ldr	r2, [r0]
 5531 0014 138B     		ldrh	r3, [r2, #24]
 5532 0016 9BB2     		uxth	r3, r3
 5533 0018 43F00203 		orr	r3, r3, #2
 5534 001c 1383     		strh	r3, [r2, #24]	@ movhi
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5535              		.loc 1 3049 0 discriminator 2
 5536 001e 2023     		movs	r3, #32
 5537 0020 8367     		str	r3, [r0, #120]
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5538              		.loc 1 3051 0 discriminator 2
 5539 0022 0023     		movs	r3, #0
 5540 0024 80F87430 		strb	r3, [r0, #116]
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5541              		.loc 1 3053 0 discriminator 2
 5542 0028 1846     		mov	r0, r3
 5543              	.LVL666:
 5544 002a 7047     		bx	lr
 5545              	.LVL667:
 5546              	.L277:
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5547              		.loc 1 3042 0
 5548 002c 0220     		movs	r0, #2
 5549              	.LVL668:
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5550              		.loc 1 3054 0
 5551 002e 7047     		bx	lr
 5552              		.cfi_endproc
 5553              	.LFE172:
 5555              		.section	.text.HAL_UART_GetState,"ax",%progbits
 5556              		.align	2
 5557              		.global	HAL_UART_GetState
 5558              		.thumb
 5559              		.thumb_func
 5561              	HAL_UART_GetState:
 5562              	.LFB173:
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1;
 5563              		.loc 1 3083 0
 5564              		.cfi_startproc
 5565              		@ args = 0, pretend = 0, frame = 0
 5566              		@ frame_needed = 0, uses_anonymous_args = 0
 5567              		@ link register save eliminated.
 5568              	.LVL669:
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 5569              		.loc 1 3086 0
 5570 0000 826F     		ldr	r2, [r0, #120]
 5571              	.LVL670:
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5572              		.loc 1 3087 0
 5573 0002 C06F     		ldr	r0, [r0, #124]
 5574              	.LVL671:
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5575              		.loc 1 3090 0
 5576 0004 1043     		orrs	r0, r0, r2
 5577              	.LVL672:
ARM GAS  /tmp/cc9Y1vpF.s 			page 210


 5578 0006 7047     		bx	lr
 5579              		.cfi_endproc
 5580              	.LFE173:
 5582              		.section	.text.HAL_UART_GetError,"ax",%progbits
 5583              		.align	2
 5584              		.global	HAL_UART_GetError
 5585              		.thumb
 5586              		.thumb_func
 5588              	HAL_UART_GetError:
 5589              	.LFB174:
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 5590              		.loc 1 3099 0
 5591              		.cfi_startproc
 5592              		@ args = 0, pretend = 0, frame = 0
 5593              		@ frame_needed = 0, uses_anonymous_args = 0
 5594              		@ link register save eliminated.
 5595              	.LVL673:
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5596              		.loc 1 3100 0
 5597 0000 D0F88000 		ldr	r0, [r0, #128]
 5598              	.LVL674:
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 5599              		.loc 1 3101 0
 5600 0004 7047     		bx	lr
 5601              		.cfi_endproc
 5602              	.LFE174:
 5604              		.global	__aeabi_uldivmod
 5605 0006 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 5606              		.align	2
 5607              		.global	UART_SetConfig
 5608              		.thumb
 5609              		.thumb_func
 5611              	UART_SetConfig:
 5612              	.LFB175:
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
 5613              		.loc 1 3147 0
 5614              		.cfi_startproc
 5615              		@ args = 0, pretend = 0, frame = 0
 5616              		@ frame_needed = 0, uses_anonymous_args = 0
 5617              	.LVL675:
 5618 0000 2DE9F048 		push	{r4, r5, r6, r7, fp, lr}
 5619              	.LCFI26:
 5620              		.cfi_def_cfa_offset 24
 5621              		.cfi_offset 4, -24
 5622              		.cfi_offset 5, -20
 5623              		.cfi_offset 6, -16
 5624              		.cfi_offset 7, -12
 5625              		.cfi_offset 11, -8
 5626              		.cfi_offset 14, -4
 5627 0004 0446     		mov	r4, r0
 5628              	.LVL676:
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 5629              		.loc 1 3186 0
 5630 0006 8268     		ldr	r2, [r0, #8]
 5631 0008 0369     		ldr	r3, [r0, #16]
 5632 000a 1A43     		orrs	r2, r2, r3
 5633 000c 4369     		ldr	r3, [r0, #20]
ARM GAS  /tmp/cc9Y1vpF.s 			page 211


 5634 000e 1A43     		orrs	r2, r2, r3
 5635 0010 C369     		ldr	r3, [r0, #28]
 5636 0012 1A43     		orrs	r2, r2, r3
 5637              	.LVL677:
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5638              		.loc 1 3187 0
 5639 0014 0168     		ldr	r1, [r0]
 5640 0016 0868     		ldr	r0, [r1]
 5641              	.LVL678:
 5642 0018 994B     		ldr	r3, .L343
 5643 001a 0340     		ands	r3, r3, r0
 5644 001c 1343     		orrs	r3, r3, r2
 5645 001e 0B60     		str	r3, [r1]
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5646              		.loc 1 3192 0
 5647 0020 2168     		ldr	r1, [r4]
 5648 0022 4B68     		ldr	r3, [r1, #4]
 5649 0024 23F44052 		bic	r2, r3, #12288
 5650              	.LVL679:
 5651 0028 E368     		ldr	r3, [r4, #12]
 5652 002a 1343     		orrs	r3, r3, r2
 5653 002c 4B60     		str	r3, [r1, #4]
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5654              		.loc 1 3200 0
 5655 002e A169     		ldr	r1, [r4, #24]
 5656              	.LVL680:
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5657              		.loc 1 3202 0
 5658 0030 2268     		ldr	r2, [r4]
 5659 0032 944B     		ldr	r3, .L343+4
 5660 0034 9A42     		cmp	r2, r3
 5661 0036 01D0     		beq	.L281
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5662              		.loc 1 3204 0
 5663 0038 236A     		ldr	r3, [r4, #32]
 5664 003a 1943     		orrs	r1, r1, r3
 5665              	.LVL681:
 5666              	.L281:
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5667              		.loc 1 3206 0
 5668 003c 9368     		ldr	r3, [r2, #8]
 5669 003e 23F43063 		bic	r3, r3, #2816
 5670 0042 0B43     		orrs	r3, r3, r1
 5671 0044 9360     		str	r3, [r2, #8]
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5672              		.loc 1 3216 0
 5673 0046 2368     		ldr	r3, [r4]
 5674 0048 8F4A     		ldr	r2, .L343+8
 5675 004a 9342     		cmp	r3, r2
 5676 004c 13D1     		bne	.L282
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5677              		.loc 1 3216 0 is_stmt 0 discriminator 1
 5678 004e 02F55842 		add	r2, r2, #55296
 5679 0052 D2F88820 		ldr	r2, [r2, #136]
 5680 0056 02F00302 		and	r2, r2, #3
 5681 005a 032A     		cmp	r2, #3
 5682 005c 09D8     		bhi	.L283
ARM GAS  /tmp/cc9Y1vpF.s 			page 212


 5683 005e DFE802F0 		tbb	[pc, r2]
 5684              	.LVL682:
 5685              	.L285:
 5686 0062 02       		.byte	(.L284-.L285)/2
 5687 0063 04       		.byte	(.L286-.L285)/2
 5688 0064 5F       		.byte	(.L329-.L285)/2
 5689 0065 06       		.byte	(.L288-.L285)/2
 5690              		.p2align 1
 5691              	.L284:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5692              		.loc 1 3216 0
 5693 0066 0122     		movs	r2, #1
 5694 0068 63E0     		b	.L287
 5695              	.L286:
 5696              	.LVL683:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5697              		.loc 1 3216 0 discriminator 5
 5698 006a 0422     		movs	r2, #4
 5699 006c 61E0     		b	.L287
 5700              	.LVL684:
 5701              	.L288:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5702              		.loc 1 3216 0 discriminator 7
 5703 006e 0822     		movs	r2, #8
 5704 0070 5FE0     		b	.L287
 5705              	.LVL685:
 5706              	.L283:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5707              		.loc 1 3216 0 discriminator 3
 5708 0072 1022     		movs	r2, #16
 5709 0074 5DE0     		b	.L287
 5710              	.LVL686:
 5711              	.L282:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5712              		.loc 1 3216 0 discriminator 2
 5713 0076 854A     		ldr	r2, .L343+12
 5714 0078 9342     		cmp	r3, r2
 5715 007a 18D1     		bne	.L289
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5716              		.loc 1 3216 0 discriminator 8
 5717 007c 02F5E632 		add	r2, r2, #117760
 5718 0080 D2F88820 		ldr	r2, [r2, #136]
 5719 0084 02F00C02 		and	r2, r2, #12
 5720 0088 0C2A     		cmp	r2, #12
 5721 008a 0ED8     		bhi	.L290
 5722 008c DFE802F0 		tbb	[pc, r2]
 5723              	.LVL687:
 5724              	.L292:
 5725 0090 07       		.byte	(.L291-.L292)/2
 5726 0091 0D       		.byte	(.L290-.L292)/2
 5727 0092 0D       		.byte	(.L290-.L292)/2
 5728 0093 0D       		.byte	(.L290-.L292)/2
 5729 0094 09       		.byte	(.L293-.L292)/2
 5730 0095 0D       		.byte	(.L290-.L292)/2
 5731 0096 0D       		.byte	(.L290-.L292)/2
 5732 0097 0D       		.byte	(.L290-.L292)/2
 5733 0098 4A       		.byte	(.L330-.L292)/2
ARM GAS  /tmp/cc9Y1vpF.s 			page 213


 5734 0099 0D       		.byte	(.L290-.L292)/2
 5735 009a 0D       		.byte	(.L290-.L292)/2
 5736 009b 0D       		.byte	(.L290-.L292)/2
 5737 009c 0B       		.byte	(.L294-.L292)/2
 5738 009d 00       		.p2align 1
 5739              	.L291:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5740              		.loc 1 3216 0
 5741 009e 0022     		movs	r2, #0
 5742 00a0 47E0     		b	.L287
 5743              	.L293:
 5744              	.LVL688:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5745              		.loc 1 3216 0 discriminator 12
 5746 00a2 0422     		movs	r2, #4
 5747 00a4 45E0     		b	.L287
 5748              	.LVL689:
 5749              	.L294:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5750              		.loc 1 3216 0 discriminator 14
 5751 00a6 0822     		movs	r2, #8
 5752 00a8 43E0     		b	.L287
 5753              	.LVL690:
 5754              	.L290:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5755              		.loc 1 3216 0 discriminator 10
 5756 00aa 1022     		movs	r2, #16
 5757 00ac 41E0     		b	.L287
 5758              	.LVL691:
 5759              	.L289:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5760              		.loc 1 3216 0 discriminator 9
 5761 00ae 784A     		ldr	r2, .L343+16
 5762 00b0 9342     		cmp	r3, r2
 5763 00b2 17D1     		bne	.L295
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5764              		.loc 1 3216 0 discriminator 15
 5765 00b4 02F5E432 		add	r2, r2, #116736
 5766 00b8 D2F88820 		ldr	r2, [r2, #136]
 5767 00bc 02F03002 		and	r2, r2, #48
 5768 00c0 102A     		cmp	r2, #16
 5769 00c2 09D0     		beq	.L297
 5770 00c4 01D8     		bhi	.L298
 5771 00c6 2AB1     		cbz	r2, .L299
 5772 00c8 0AE0     		b	.L296
 5773              	.L298:
 5774 00ca 202A     		cmp	r2, #32
 5775 00cc 2CD0     		beq	.L331
 5776 00ce 302A     		cmp	r2, #48
 5777 00d0 04D0     		beq	.L300
 5778 00d2 05E0     		b	.L296
 5779              	.L299:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5780              		.loc 1 3216 0
 5781 00d4 0022     		movs	r2, #0
 5782 00d6 2CE0     		b	.L287
 5783              	.L297:
ARM GAS  /tmp/cc9Y1vpF.s 			page 214


 5784              	.LVL692:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5785              		.loc 1 3216 0 discriminator 19
 5786 00d8 0422     		movs	r2, #4
 5787 00da 2AE0     		b	.L287
 5788              	.LVL693:
 5789              	.L300:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5790              		.loc 1 3216 0 discriminator 21
 5791 00dc 0822     		movs	r2, #8
 5792 00de 28E0     		b	.L287
 5793              	.LVL694:
 5794              	.L296:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5795              		.loc 1 3216 0 discriminator 17
 5796 00e0 1022     		movs	r2, #16
 5797 00e2 26E0     		b	.L287
 5798              	.LVL695:
 5799              	.L295:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5800              		.loc 1 3216 0 discriminator 16
 5801 00e4 674A     		ldr	r2, .L343+4
 5802 00e6 9342     		cmp	r3, r2
 5803 00e8 20D1     		bne	.L332
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5804              		.loc 1 3216 0 discriminator 22
 5805 00ea 02F5C832 		add	r2, r2, #102400
 5806 00ee D2F88820 		ldr	r2, [r2, #136]
 5807 00f2 02F44062 		and	r2, r2, #3072
 5808 00f6 B2F5806F 		cmp	r2, #1024
 5809 00fa 0BD0     		beq	.L302
 5810 00fc 01D8     		bhi	.L303
 5811 00fe 3AB1     		cbz	r2, .L304
 5812 0100 0CE0     		b	.L301
 5813              	.L303:
 5814 0102 B2F5006F 		cmp	r2, #2048
 5815 0106 13D0     		beq	.L333
 5816 0108 B2F5406F 		cmp	r2, #3072
 5817 010c 04D0     		beq	.L305
 5818 010e 05E0     		b	.L301
 5819              	.L304:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5820              		.loc 1 3216 0
 5821 0110 0022     		movs	r2, #0
 5822 0112 0EE0     		b	.L287
 5823              	.L302:
 5824              	.LVL696:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5825              		.loc 1 3216 0 discriminator 26
 5826 0114 0422     		movs	r2, #4
 5827 0116 0CE0     		b	.L287
 5828              	.LVL697:
 5829              	.L305:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5830              		.loc 1 3216 0 discriminator 28
 5831 0118 0822     		movs	r2, #8
 5832 011a 0AE0     		b	.L287
ARM GAS  /tmp/cc9Y1vpF.s 			page 215


 5833              	.LVL698:
 5834              	.L301:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5835              		.loc 1 3216 0 discriminator 24
 5836 011c 1022     		movs	r2, #16
 5837 011e 08E0     		b	.L287
 5838              	.LVL699:
 5839              	.L329:
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5840              		.loc 1 3216 0
 5841 0120 0222     		movs	r2, #2
 5842 0122 06E0     		b	.L287
 5843              	.L330:
 5844 0124 0222     		movs	r2, #2
 5845 0126 04E0     		b	.L287
 5846              	.LVL700:
 5847              	.L331:
 5848 0128 0222     		movs	r2, #2
 5849 012a 02E0     		b	.L287
 5850              	.L332:
 5851 012c 1022     		movs	r2, #16
 5852 012e 00E0     		b	.L287
 5853              	.L333:
 5854 0130 0222     		movs	r2, #2
 5855              	.LVL701:
 5856              	.L287:
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5857              		.loc 1 3219 0 is_stmt 1
 5858 0132 5449     		ldr	r1, .L343+4
 5859 0134 8B42     		cmp	r3, r1
 5860 0136 38D1     		bne	.L306
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 5861              		.loc 1 3222 0
 5862 0138 082A     		cmp	r2, #8
 5863 013a 11D8     		bhi	.L307
 5864 013c DFE802F0 		tbb	[pc, r2]
 5865              	.L309:
 5866 0140 08       		.byte	(.L308-.L309)/2
 5867 0141 10       		.byte	(.L307-.L309)/2
 5868 0142 05       		.byte	(.L310-.L309)/2
 5869 0143 10       		.byte	(.L307-.L309)/2
 5870 0144 0C       		.byte	(.L311-.L309)/2
 5871 0145 10       		.byte	(.L307-.L309)/2
 5872 0146 10       		.byte	(.L307-.L309)/2
 5873 0147 10       		.byte	(.L307-.L309)/2
 5874 0148 13       		.byte	(.L334-.L309)/2
 5875 0149 00       		.p2align 1
 5876              	.L310:
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5877              		.loc 1 3228 0
 5878 014a 5248     		ldr	r0, .L343+20
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 5879              		.loc 1 3152 0
 5880 014c 0025     		movs	r5, #0
 5881 014e 0DE0     		b	.L312
 5882              	.L308:
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/cc9Y1vpF.s 			page 216


 5883              		.loc 1 3225 0
 5884 0150 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5885              	.LVL702:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 5886              		.loc 1 3152 0
 5887 0154 0025     		movs	r5, #0
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 5888              		.loc 1 3226 0
 5889 0156 09E0     		b	.L312
 5890              	.LVL703:
 5891              	.L311:
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5892              		.loc 1 3231 0
 5893 0158 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5894              	.LVL704:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 5895              		.loc 1 3152 0
 5896 015c 0025     		movs	r5, #0
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 5897              		.loc 1 3232 0
 5898 015e 05E0     		b	.L312
 5899              	.LVL705:
 5900              	.L307:
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5901              		.loc 1 3237 0
 5902 0160 0020     		movs	r0, #0
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5903              		.loc 1 3238 0
 5904 0162 0125     		movs	r5, #1
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5905              		.loc 1 3239 0
 5906 0164 02E0     		b	.L312
 5907              	.LVL706:
 5908              	.L334:
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5909              		.loc 1 3234 0
 5910 0166 4FF40040 		mov	r0, #32768
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 5911              		.loc 1 3152 0
 5912 016a 0025     		movs	r5, #0
 5913              	.LVL707:
 5914              	.L312:
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 5915              		.loc 1 3243 0
 5916 016c 0028     		cmp	r0, #0
 5917 016e 00F09A80 		beq	.L313
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
 5918              		.loc 1 3273 0
 5919 0172 6268     		ldr	r2, [r4, #4]
 5920 0174 02EB4203 		add	r3, r2, r2, lsl #1
 5921 0178 9842     		cmp	r0, r3
 5922 017a 7DD3     		bcc	.L335
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
 5923              		.loc 1 3273 0 is_stmt 0 discriminator 1
 5924 017c B0EB023F 		cmp	r0, r2, lsl #12
 5925 0180 7CD8     		bhi	.L336
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
ARM GAS  /tmp/cc9Y1vpF.s 			page 217


 5926              		.loc 1 3280 0 is_stmt 1
 5927 0182 0023     		movs	r3, #0
 5928 0184 070E     		lsrs	r7, r0, #24
 5929 0186 0602     		lsls	r6, r0, #8
 5930 0188 5008     		lsrs	r0, r2, #1
 5931              	.LVL708:
 5932 018a 16EB000B 		adds	fp, r6, r0
 5933 018e 47F1000C 		adc	ip, r7, #0
 5934 0192 5846     		mov	r0, fp
 5935 0194 6146     		mov	r1, ip
 5936 0196 FFF7FEFF 		bl	__aeabi_uldivmod
 5937              	.LVL709:
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 5938              		.loc 1 3281 0
 5939 019a A0F54072 		sub	r2, r0, #768
 5940 019e 3E4B     		ldr	r3, .L343+24
 5941 01a0 9A42     		cmp	r2, r3
 5942 01a2 7BD8     		bhi	.L337
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 5943              		.loc 1 3283 0
 5944 01a4 2368     		ldr	r3, [r4]
 5945 01a6 D860     		str	r0, [r3, #12]
 5946 01a8 7DE0     		b	.L313
 5947              	.LVL710:
 5948              	.L306:
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5949              		.loc 1 3294 0
 5950 01aa E369     		ldr	r3, [r4, #28]
 5951 01ac B3F5004F 		cmp	r3, #32768
 5952 01b0 34D1     		bne	.L314
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 5953              		.loc 1 3296 0
 5954 01b2 082A     		cmp	r2, #8
 5955 01b4 15D8     		bhi	.L315
 5956 01b6 DFE802F0 		tbb	[pc, r2]
 5957              	.L317:
 5958 01ba 08       		.byte	(.L316-.L317)/2
 5959 01bb 0C       		.byte	(.L318-.L317)/2
 5960 01bc 05       		.byte	(.L319-.L317)/2
 5961 01bd 14       		.byte	(.L315-.L317)/2
 5962 01be 10       		.byte	(.L320-.L317)/2
 5963 01bf 14       		.byte	(.L315-.L317)/2
 5964 01c0 14       		.byte	(.L315-.L317)/2
 5965 01c1 14       		.byte	(.L315-.L317)/2
 5966 01c2 17       		.byte	(.L338-.L317)/2
 5967 01c3 00       		.p2align 1
 5968              	.L319:
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5969              		.loc 1 3305 0
 5970 01c4 3348     		ldr	r0, .L343+20
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 5971              		.loc 1 3152 0
 5972 01c6 0025     		movs	r5, #0
 5973 01c8 11E0     		b	.L321
 5974              	.L316:
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5975              		.loc 1 3299 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 218


 5976 01ca FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5977              	.LVL711:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 5978              		.loc 1 3152 0
 5979 01ce 0025     		movs	r5, #0
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 5980              		.loc 1 3300 0
 5981 01d0 0DE0     		b	.L321
 5982              	.LVL712:
 5983              	.L318:
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5984              		.loc 1 3302 0
 5985 01d2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5986              	.LVL713:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 5987              		.loc 1 3152 0
 5988 01d6 0025     		movs	r5, #0
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 5989              		.loc 1 3303 0
 5990 01d8 09E0     		b	.L321
 5991              	.LVL714:
 5992              	.L320:
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5993              		.loc 1 3308 0
 5994 01da FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5995              	.LVL715:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 5996              		.loc 1 3152 0
 5997 01de 0025     		movs	r5, #0
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 5998              		.loc 1 3309 0
 5999 01e0 05E0     		b	.L321
 6000              	.LVL716:
 6001              	.L315:
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 6002              		.loc 1 3314 0
 6003 01e2 0020     		movs	r0, #0
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 6004              		.loc 1 3315 0
 6005 01e4 0125     		movs	r5, #1
3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6006              		.loc 1 3316 0
 6007 01e6 02E0     		b	.L321
 6008              	.LVL717:
 6009              	.L338:
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 6010              		.loc 1 3311 0
 6011 01e8 4FF40040 		mov	r0, #32768
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 6012              		.loc 1 3152 0
 6013 01ec 0025     		movs	r5, #0
 6014              	.LVL718:
 6015              	.L321:
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6016              		.loc 1 3320 0
 6017 01ee 0028     		cmp	r0, #0
 6018 01f0 59D0     		beq	.L313
ARM GAS  /tmp/cc9Y1vpF.s 			page 219


3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 6019              		.loc 1 3325 0
 6020 01f2 6268     		ldr	r2, [r4, #4]
 6021 01f4 5308     		lsrs	r3, r2, #1
 6022 01f6 03EB4000 		add	r0, r3, r0, lsl #1
 6023              	.LVL719:
 6024 01fa B0FBF2F0 		udiv	r0, r0, r2
 6025              	.LVL720:
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 6026              		.loc 1 3327 0
 6027 01fe A0F11002 		sub	r2, r0, #16
 6028 0202 4FF6EF73 		movw	r3, #65519
 6029 0206 9A42     		cmp	r2, r3
 6030 0208 4AD8     		bhi	.L339
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 6031              		.loc 1 3329 0
 6032 020a 83B2     		uxth	r3, r0
 6033 020c 23F00F03 		bic	r3, r3, #15
 6034              	.LVL721:
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 6035              		.loc 1 3330 0
 6036 0210 C0F34200 		ubfx	r0, r0, #1, #3
 6037              	.LVL722:
 6038 0214 1843     		orrs	r0, r0, r3
 6039              	.LVL723:
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 6040              		.loc 1 3331 0
 6041 0216 2368     		ldr	r3, [r4]
 6042 0218 D860     		str	r0, [r3, #12]
 6043 021a 44E0     		b	.L313
 6044              	.LVL724:
 6045              	.L314:
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6046              		.loc 1 3341 0
 6047 021c 082A     		cmp	r2, #8
 6048 021e 15D8     		bhi	.L322
 6049 0220 DFE802F0 		tbb	[pc, r2]
 6050              	.L324:
 6051 0224 08       		.byte	(.L323-.L324)/2
 6052 0225 0C       		.byte	(.L325-.L324)/2
 6053 0226 05       		.byte	(.L326-.L324)/2
 6054 0227 14       		.byte	(.L322-.L324)/2
 6055 0228 10       		.byte	(.L327-.L324)/2
 6056 0229 14       		.byte	(.L322-.L324)/2
 6057 022a 14       		.byte	(.L322-.L324)/2
 6058 022b 14       		.byte	(.L322-.L324)/2
 6059 022c 17       		.byte	(.L340-.L324)/2
 6060 022d 00       		.p2align 1
 6061              	.L326:
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 6062              		.loc 1 3350 0
 6063 022e 1948     		ldr	r0, .L343+20
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 6064              		.loc 1 3152 0
 6065 0230 0025     		movs	r5, #0
 6066 0232 11E0     		b	.L328
 6067              	.L323:
ARM GAS  /tmp/cc9Y1vpF.s 			page 220


3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 6068              		.loc 1 3344 0
 6069 0234 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6070              	.LVL725:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 6071              		.loc 1 3152 0
 6072 0238 0025     		movs	r5, #0
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 6073              		.loc 1 3345 0
 6074 023a 0DE0     		b	.L328
 6075              	.LVL726:
 6076              	.L325:
3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 6077              		.loc 1 3347 0
 6078 023c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6079              	.LVL727:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 6080              		.loc 1 3152 0
 6081 0240 0025     		movs	r5, #0
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 6082              		.loc 1 3348 0
 6083 0242 09E0     		b	.L328
 6084              	.LVL728:
 6085              	.L327:
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 6086              		.loc 1 3353 0
 6087 0244 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 6088              	.LVL729:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 6089              		.loc 1 3152 0
 6090 0248 0025     		movs	r5, #0
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 6091              		.loc 1 3354 0
 6092 024a 05E0     		b	.L328
 6093              	.LVL730:
 6094              	.L322:
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 6095              		.loc 1 3359 0
 6096 024c 0020     		movs	r0, #0
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 6097              		.loc 1 3360 0
 6098 024e 0125     		movs	r5, #1
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6099              		.loc 1 3361 0
 6100 0250 02E0     		b	.L328
 6101              	.LVL731:
 6102              	.L340:
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 6103              		.loc 1 3356 0
 6104 0252 4FF40040 		mov	r0, #32768
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 6105              		.loc 1 3152 0
 6106 0256 0025     		movs	r5, #0
 6107              	.LVL732:
 6108              	.L328:
3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6109              		.loc 1 3364 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 221


 6110 0258 28B3     		cbz	r0, .L313
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 6111              		.loc 1 3370 0
 6112 025a 6368     		ldr	r3, [r4, #4]
 6113 025c 00EB5300 		add	r0, r0, r3, lsr #1
 6114              	.LVL733:
 6115 0260 B0FBF3F0 		udiv	r0, r0, r3
 6116              	.LVL734:
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 6117              		.loc 1 3372 0
 6118 0264 A0F11002 		sub	r2, r0, #16
 6119 0268 4FF6EF73 		movw	r3, #65519
 6120 026c 9A42     		cmp	r2, r3
 6121 026e 19D8     		bhi	.L341
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 6122              		.loc 1 3374 0
 6123 0270 2368     		ldr	r3, [r4]
 6124 0272 80B2     		uxth	r0, r0
 6125              	.LVL735:
 6126 0274 D860     		str	r0, [r3, #12]
 6127 0276 16E0     		b	.L313
 6128              	.LVL736:
 6129              	.L335:
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 6130              		.loc 1 3276 0
 6131 0278 0125     		movs	r5, #1
 6132              	.LVL737:
 6133 027a 14E0     		b	.L313
 6134              	.LVL738:
 6135              	.L336:
 6136 027c 0125     		movs	r5, #1
 6137              	.LVL739:
 6138 027e 12E0     		b	.L313
 6139              	.L344:
 6140              		.align	2
 6141              	.L343:
 6142 0280 F369FFEF 		.word	-268473869
 6143 0284 00800040 		.word	1073774592
 6144 0288 00380140 		.word	1073821696
 6145 028c 00440040 		.word	1073759232
 6146 0290 00480040 		.word	1073760256
 6147 0294 0024F400 		.word	16000000
 6148 0298 FFFC0F00 		.word	1047807
 6149              	.LVL740:
 6150              	.L337:
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 6151              		.loc 1 3287 0
 6152 029c 0125     		movs	r5, #1
 6153              	.LVL741:
 6154 029e 02E0     		b	.L313
 6155              	.LVL742:
 6156              	.L339:
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 6157              		.loc 1 3335 0
 6158 02a0 0125     		movs	r5, #1
 6159              	.LVL743:
 6160 02a2 00E0     		b	.L313
ARM GAS  /tmp/cc9Y1vpF.s 			page 222


 6161              	.LVL744:
 6162              	.L341:
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 6163              		.loc 1 3378 0
 6164 02a4 0125     		movs	r5, #1
 6165              	.LVL745:
 6166              	.L313:
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 6167              		.loc 1 3390 0
 6168 02a6 0023     		movs	r3, #0
 6169 02a8 6366     		str	r3, [r4, #100]
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6170              		.loc 1 3391 0
 6171 02aa A366     		str	r3, [r4, #104]
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6172              		.loc 1 3394 0
 6173 02ac 2846     		mov	r0, r5
 6174 02ae BDE8F088 		pop	{r4, r5, r6, r7, fp, pc}
 6175              		.cfi_endproc
 6176              	.LFE175:
 6178 02b2 00BF     		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 6179              		.align	2
 6180              		.global	UART_AdvFeatureConfig
 6181              		.thumb
 6182              		.thumb_func
 6184              	UART_AdvFeatureConfig:
 6185              	.LFB176:
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 6186              		.loc 1 3402 0
 6187              		.cfi_startproc
 6188              		@ args = 0, pretend = 0, frame = 0
 6189              		@ frame_needed = 0, uses_anonymous_args = 0
 6190              		@ link register save eliminated.
 6191              	.LVL746:
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6192              		.loc 1 3407 0
 6193 0000 436A     		ldr	r3, [r0, #36]
 6194 0002 13F0010F 		tst	r3, #1
 6195 0006 06D0     		beq	.L346
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6196              		.loc 1 3410 0
 6197 0008 0168     		ldr	r1, [r0]
 6198 000a 4B68     		ldr	r3, [r1, #4]
 6199 000c 23F40032 		bic	r2, r3, #131072
 6200 0010 836A     		ldr	r3, [r0, #40]
 6201 0012 1343     		orrs	r3, r3, r2
 6202 0014 4B60     		str	r3, [r1, #4]
 6203              	.L346:
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6204              		.loc 1 3414 0
 6205 0016 436A     		ldr	r3, [r0, #36]
 6206 0018 13F0020F 		tst	r3, #2
 6207 001c 06D0     		beq	.L347
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6208              		.loc 1 3417 0
 6209 001e 0168     		ldr	r1, [r0]
 6210 0020 4B68     		ldr	r3, [r1, #4]
ARM GAS  /tmp/cc9Y1vpF.s 			page 223


 6211 0022 23F48032 		bic	r2, r3, #65536
 6212 0026 C36A     		ldr	r3, [r0, #44]
 6213 0028 1343     		orrs	r3, r3, r2
 6214 002a 4B60     		str	r3, [r1, #4]
 6215              	.L347:
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6216              		.loc 1 3421 0
 6217 002c 436A     		ldr	r3, [r0, #36]
 6218 002e 13F0040F 		tst	r3, #4
 6219 0032 06D0     		beq	.L348
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6220              		.loc 1 3424 0
 6221 0034 0168     		ldr	r1, [r0]
 6222 0036 4B68     		ldr	r3, [r1, #4]
 6223 0038 23F48022 		bic	r2, r3, #262144
 6224 003c 036B     		ldr	r3, [r0, #48]
 6225 003e 1343     		orrs	r3, r3, r2
 6226 0040 4B60     		str	r3, [r1, #4]
 6227              	.L348:
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6228              		.loc 1 3428 0
 6229 0042 436A     		ldr	r3, [r0, #36]
 6230 0044 13F0080F 		tst	r3, #8
 6231 0048 06D0     		beq	.L349
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6232              		.loc 1 3431 0
 6233 004a 0168     		ldr	r1, [r0]
 6234 004c 4B68     		ldr	r3, [r1, #4]
 6235 004e 23F40042 		bic	r2, r3, #32768
 6236 0052 436B     		ldr	r3, [r0, #52]
 6237 0054 1343     		orrs	r3, r3, r2
 6238 0056 4B60     		str	r3, [r1, #4]
 6239              	.L349:
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6240              		.loc 1 3435 0
 6241 0058 436A     		ldr	r3, [r0, #36]
 6242 005a 13F0100F 		tst	r3, #16
 6243 005e 06D0     		beq	.L350
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6244              		.loc 1 3438 0
 6245 0060 0168     		ldr	r1, [r0]
 6246 0062 8B68     		ldr	r3, [r1, #8]
 6247 0064 23F48052 		bic	r2, r3, #4096
 6248 0068 836B     		ldr	r3, [r0, #56]
 6249 006a 1343     		orrs	r3, r3, r2
 6250 006c 8B60     		str	r3, [r1, #8]
 6251              	.L350:
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6252              		.loc 1 3442 0
 6253 006e 436A     		ldr	r3, [r0, #36]
 6254 0070 13F0200F 		tst	r3, #32
 6255 0074 06D0     		beq	.L351
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6256              		.loc 1 3445 0
 6257 0076 0168     		ldr	r1, [r0]
 6258 0078 8B68     		ldr	r3, [r1, #8]
 6259 007a 23F40052 		bic	r2, r3, #8192
ARM GAS  /tmp/cc9Y1vpF.s 			page 224


 6260 007e C36B     		ldr	r3, [r0, #60]
 6261 0080 1343     		orrs	r3, r3, r2
 6262 0082 8B60     		str	r3, [r1, #8]
 6263              	.L351:
3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6264              		.loc 1 3449 0
 6265 0084 436A     		ldr	r3, [r0, #36]
 6266 0086 13F0400F 		tst	r3, #64
 6267 008a 11D0     		beq	.L352
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 6268              		.loc 1 3453 0
 6269 008c 0168     		ldr	r1, [r0]
 6270 008e 4B68     		ldr	r3, [r1, #4]
 6271 0090 23F48012 		bic	r2, r3, #1048576
 6272 0094 036C     		ldr	r3, [r0, #64]
 6273 0096 1343     		orrs	r3, r3, r2
 6274 0098 4B60     		str	r3, [r1, #4]
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6275              		.loc 1 3455 0
 6276 009a 036C     		ldr	r3, [r0, #64]
 6277 009c B3F5801F 		cmp	r3, #1048576
 6278 00a0 06D1     		bne	.L352
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6279              		.loc 1 3458 0
 6280 00a2 0168     		ldr	r1, [r0]
 6281 00a4 4B68     		ldr	r3, [r1, #4]
 6282 00a6 23F4C002 		bic	r2, r3, #6291456
 6283 00aa 436C     		ldr	r3, [r0, #68]
 6284 00ac 1343     		orrs	r3, r3, r2
 6285 00ae 4B60     		str	r3, [r1, #4]
 6286              	.L352:
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6287              		.loc 1 3463 0
 6288 00b0 436A     		ldr	r3, [r0, #36]
 6289 00b2 13F0800F 		tst	r3, #128
 6290 00b6 06D0     		beq	.L345
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6291              		.loc 1 3466 0
 6292 00b8 0168     		ldr	r1, [r0]
 6293 00ba 4B68     		ldr	r3, [r1, #4]
 6294 00bc 23F40022 		bic	r2, r3, #524288
 6295 00c0 836C     		ldr	r3, [r0, #72]
 6296 00c2 1343     		orrs	r3, r3, r2
 6297 00c4 4B60     		str	r3, [r1, #4]
 6298              	.L345:
 6299 00c6 7047     		bx	lr
 6300              		.cfi_endproc
 6301              	.LFE176:
 6303              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 6304              		.align	2
 6305              		.global	UART_WaitOnFlagUntilTimeout
 6306              		.thumb
 6307              		.thumb_func
 6309              	UART_WaitOnFlagUntilTimeout:
 6310              	.LFB178:
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
 6311              		.loc 1 3529 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 225


 6312              		.cfi_startproc
 6313              		@ args = 4, pretend = 0, frame = 0
 6314              		@ frame_needed = 0, uses_anonymous_args = 0
 6315              	.LVL747:
 6316 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6317              	.LCFI27:
 6318              		.cfi_def_cfa_offset 24
 6319              		.cfi_offset 4, -24
 6320              		.cfi_offset 5, -20
 6321              		.cfi_offset 6, -16
 6322              		.cfi_offset 7, -12
 6323              		.cfi_offset 8, -8
 6324              		.cfi_offset 14, -4
 6325 0004 0446     		mov	r4, r0
 6326 0006 0F46     		mov	r7, r1
 6327 0008 1646     		mov	r6, r2
 6328 000a 9846     		mov	r8, r3
 6329 000c 069D     		ldr	r5, [sp, #24]
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6330              		.loc 1 3531 0
 6331 000e 53E0     		b	.L356
 6332              	.LVL748:
 6333              	.L363:
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6334              		.loc 1 3534 0
 6335 0010 B5F1FF3F 		cmp	r5, #-1
 6336 0014 50D0     		beq	.L356
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 6337              		.loc 1 3536 0
 6338 0016 FFF7FEFF 		bl	HAL_GetTick
 6339              	.LVL749:
 6340 001a C8EB0000 		rsb	r0, r8, r0
 6341 001e 8542     		cmp	r5, r0
 6342 0020 00D3     		bcc	.L357
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 6343              		.loc 1 3536 0 is_stmt 0 discriminator 1
 6344 0022 EDB9     		cbnz	r5, .L358
 6345              	.L357:
 6346              	.LBB748:
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 6347              		.loc 1 3544 0 is_stmt 1 discriminator 1
 6348 0024 2268     		ldr	r2, [r4]
 6349              	.LVL750:
 6350              	.LBB749:
 6351              	.LBB750:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6352              		.loc 2 1155 0 discriminator 1
 6353              		.syntax unified
 6354              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6355 0026 52E8003F 		ldrex r3, [r2]
 6356              	@ 0 "" 2
 6357              	.LVL751:
 6358              		.thumb
 6359              		.syntax unified
 6360              	.LBE750:
 6361              	.LBE749:
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
ARM GAS  /tmp/cc9Y1vpF.s 			page 226


 6362              		.loc 1 3544 0 discriminator 1
 6363 002a 23F4D073 		bic	r3, r3, #416
 6364              	.LVL752:
 6365              	.LBB751:
 6366              	.LBB752:
 6367              		.loc 2 1206 0 discriminator 1
 6368              		.syntax unified
 6369              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6370 002e 42E80031 		strex r1, r3, [r2]
 6371              	@ 0 "" 2
 6372              	.LVL753:
 6373              		.thumb
 6374              		.syntax unified
 6375              	.LBE752:
 6376              	.LBE751:
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 6377              		.loc 1 3544 0 discriminator 1
 6378 0032 0029     		cmp	r1, #0
 6379 0034 F6D1     		bne	.L357
 6380              	.LVL754:
 6381              	.L359:
 6382              	.LBE748:
 6383              	.LBB753:
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6384              		.loc 1 3546 0 discriminator 1
 6385 0036 2268     		ldr	r2, [r4]
 6386              	.LVL755:
 6387              	.LBB754:
 6388              	.LBB755:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6389              		.loc 2 1155 0 discriminator 1
 6390 0038 02F10803 		add	r3, r2, #8
 6391              	.LVL756:
 6392              		.syntax unified
 6393              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6394 003c 53E8003F 		ldrex r3, [r3]
 6395              	@ 0 "" 2
 6396              	.LVL757:
 6397              		.thumb
 6398              		.syntax unified
 6399              	.LBE755:
 6400              	.LBE754:
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6401              		.loc 1 3546 0 discriminator 1
 6402 0040 23F00103 		bic	r3, r3, #1
 6403              	.LVL758:
 6404              	.LBB756:
 6405              	.LBB757:
 6406              		.loc 2 1206 0 discriminator 1
 6407 0044 0832     		adds	r2, r2, #8
 6408              	.LVL759:
 6409              		.syntax unified
 6410              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6411 0046 42E80031 		strex r1, r3, [r2]
 6412              	@ 0 "" 2
 6413              	.LVL760:
 6414              		.thumb
ARM GAS  /tmp/cc9Y1vpF.s 			page 227


 6415              		.syntax unified
 6416              	.LBE757:
 6417              	.LBE756:
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6418              		.loc 1 3546 0 discriminator 1
 6419 004a 0029     		cmp	r1, #0
 6420 004c F3D1     		bne	.L359
 6421              	.LBE753:
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6422              		.loc 1 3548 0
 6423 004e 2023     		movs	r3, #32
 6424              	.LVL761:
 6425 0050 A367     		str	r3, [r4, #120]
3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6426              		.loc 1 3549 0
 6427 0052 E367     		str	r3, [r4, #124]
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6428              		.loc 1 3551 0
 6429 0054 0023     		movs	r3, #0
 6430 0056 84F87430 		strb	r3, [r4, #116]
3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 6431              		.loc 1 3553 0
 6432 005a 0320     		movs	r0, #3
 6433 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6434              	.LVL762:
 6435              	.L358:
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 6436              		.loc 1 3556 0
 6437 0060 2368     		ldr	r3, [r4]
 6438 0062 1A68     		ldr	r2, [r3]
 6439 0064 12F0040F 		tst	r2, #4
 6440 0068 26D0     		beq	.L356
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 6441              		.loc 1 3558 0
 6442 006a DA69     		ldr	r2, [r3, #28]
 6443 006c 12F4006F 		tst	r2, #2048
 6444 0070 22D0     		beq	.L356
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6445              		.loc 1 3561 0
 6446 0072 4FF40062 		mov	r2, #2048
 6447 0076 1A62     		str	r2, [r3, #32]
 6448              	.L361:
 6449              	.LBB758:
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 6450              		.loc 1 3569 0 discriminator 1
 6451 0078 2268     		ldr	r2, [r4]
 6452              	.LVL763:
 6453              	.LBB759:
 6454              	.LBB760:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6455              		.loc 2 1155 0 discriminator 1
 6456              		.syntax unified
 6457              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6458 007a 52E8003F 		ldrex r3, [r2]
 6459              	@ 0 "" 2
 6460              	.LVL764:
 6461              		.thumb
ARM GAS  /tmp/cc9Y1vpF.s 			page 228


 6462              		.syntax unified
 6463              	.LBE760:
 6464              	.LBE759:
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 6465              		.loc 1 3569 0 discriminator 1
 6466 007e 23F4D073 		bic	r3, r3, #416
 6467              	.LVL765:
 6468              	.LBB761:
 6469              	.LBB762:
 6470              		.loc 2 1206 0 discriminator 1
 6471              		.syntax unified
 6472              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6473 0082 42E80031 		strex r1, r3, [r2]
 6474              	@ 0 "" 2
 6475              	.LVL766:
 6476              		.thumb
 6477              		.syntax unified
 6478              	.LBE762:
 6479              	.LBE761:
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 6480              		.loc 1 3569 0 discriminator 1
 6481 0086 0029     		cmp	r1, #0
 6482 0088 F6D1     		bne	.L361
 6483              	.LVL767:
 6484              	.L362:
 6485              	.LBE758:
 6486              	.LBB763:
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6487              		.loc 1 3571 0 discriminator 1
 6488 008a 2268     		ldr	r2, [r4]
 6489              	.LVL768:
 6490              	.LBB764:
 6491              	.LBB765:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6492              		.loc 2 1155 0 discriminator 1
 6493 008c 02F10803 		add	r3, r2, #8
 6494              	.LVL769:
 6495              		.syntax unified
 6496              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6497 0090 53E8003F 		ldrex r3, [r3]
 6498              	@ 0 "" 2
 6499              	.LVL770:
 6500              		.thumb
 6501              		.syntax unified
 6502              	.LBE765:
 6503              	.LBE764:
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6504              		.loc 1 3571 0 discriminator 1
 6505 0094 23F00103 		bic	r3, r3, #1
 6506              	.LVL771:
 6507              	.LBB766:
 6508              	.LBB767:
 6509              		.loc 2 1206 0 discriminator 1
 6510 0098 0832     		adds	r2, r2, #8
 6511              	.LVL772:
 6512              		.syntax unified
 6513              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc9Y1vpF.s 			page 229


 6514 009a 42E80031 		strex r1, r3, [r2]
 6515              	@ 0 "" 2
 6516              	.LVL773:
 6517              		.thumb
 6518              		.syntax unified
 6519              	.LBE767:
 6520              	.LBE766:
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6521              		.loc 1 3571 0 discriminator 1
 6522 009e 0029     		cmp	r1, #0
 6523 00a0 F3D1     		bne	.L362
 6524              	.LBE763:
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 6525              		.loc 1 3573 0
 6526 00a2 2023     		movs	r3, #32
 6527              	.LVL774:
 6528 00a4 A367     		str	r3, [r4, #120]
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 6529              		.loc 1 3574 0
 6530 00a6 E367     		str	r3, [r4, #124]
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6531              		.loc 1 3575 0
 6532 00a8 C4F88030 		str	r3, [r4, #128]
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6533              		.loc 1 3578 0
 6534 00ac 0023     		movs	r3, #0
 6535 00ae 84F87430 		strb	r3, [r4, #116]
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 6536              		.loc 1 3580 0
 6537 00b2 0320     		movs	r0, #3
 6538 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6539              	.LVL775:
 6540              	.L356:
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6541              		.loc 1 3531 0
 6542 00b8 2368     		ldr	r3, [r4]
 6543 00ba DB69     		ldr	r3, [r3, #28]
 6544 00bc 37EA0303 		bics	r3, r7, r3
 6545 00c0 0CBF     		ite	eq
 6546 00c2 0123     		moveq	r3, #1
 6547 00c4 0023     		movne	r3, #0
 6548 00c6 B342     		cmp	r3, r6
 6549 00c8 A2D0     		beq	.L363
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6550              		.loc 1 3585 0
 6551 00ca 0020     		movs	r0, #0
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6552              		.loc 1 3586 0
 6553 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6554              		.cfi_endproc
 6555              	.LFE178:
 6557              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 6558              		.align	2
 6559              		.global	HAL_UART_Transmit
 6560              		.thumb
 6561              		.thumb_func
 6563              	HAL_UART_Transmit:
ARM GAS  /tmp/cc9Y1vpF.s 			page 230


 6564              	.LFB139:
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
 6565              		.loc 1 1150 0
 6566              		.cfi_startproc
 6567              		@ args = 0, pretend = 0, frame = 0
 6568              		@ frame_needed = 0, uses_anonymous_args = 0
 6569              	.LVL776:
 6570 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6571              	.LCFI28:
 6572              		.cfi_def_cfa_offset 24
 6573              		.cfi_offset 4, -24
 6574              		.cfi_offset 5, -20
 6575              		.cfi_offset 6, -16
 6576              		.cfi_offset 7, -12
 6577              		.cfi_offset 8, -8
 6578              		.cfi_offset 14, -4
 6579 0004 82B0     		sub	sp, sp, #8
 6580              	.LCFI29:
 6581              		.cfi_def_cfa_offset 32
 6582 0006 1E46     		mov	r6, r3
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6583              		.loc 1 1156 0
 6584 0008 836F     		ldr	r3, [r0, #120]
 6585              	.LVL777:
 6586 000a 202B     		cmp	r3, #32
 6587 000c 57D1     		bne	.L372
 6588 000e 0446     		mov	r4, r0
 6589 0010 0D46     		mov	r5, r1
 6590 0012 9046     		mov	r8, r2
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6591              		.loc 1 1158 0
 6592 0014 0029     		cmp	r1, #0
 6593 0016 54D0     		beq	.L373
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6594              		.loc 1 1158 0 is_stmt 0 discriminator 1
 6595 0018 002A     		cmp	r2, #0
 6596 001a 54D0     		beq	.L374
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6597              		.loc 1 1163 0 is_stmt 1
 6598 001c 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 6599 0020 012B     		cmp	r3, #1
 6600 0022 52D0     		beq	.L375
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6601              		.loc 1 1163 0 is_stmt 0 discriminator 2
 6602 0024 0123     		movs	r3, #1
 6603 0026 80F87430 		strb	r3, [r0, #116]
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 6604              		.loc 1 1165 0 is_stmt 1 discriminator 2
 6605 002a 0023     		movs	r3, #0
 6606 002c C0F88030 		str	r3, [r0, #128]
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6607              		.loc 1 1166 0 discriminator 2
 6608 0030 2123     		movs	r3, #33
 6609 0032 8367     		str	r3, [r0, #120]
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6610              		.loc 1 1169 0 discriminator 2
 6611 0034 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc9Y1vpF.s 			page 231


 6612              	.LVL778:
 6613 0038 0746     		mov	r7, r0
 6614              	.LVL779:
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 6615              		.loc 1 1171 0 discriminator 2
 6616 003a A4F85080 		strh	r8, [r4, #80]	@ movhi
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6617              		.loc 1 1172 0 discriminator 2
 6618 003e A4F85280 		strh	r8, [r4, #82]	@ movhi
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6619              		.loc 1 1175 0 discriminator 2
 6620 0042 A368     		ldr	r3, [r4, #8]
 6621 0044 B3F5805F 		cmp	r3, #4096
 6622 0048 04D1     		bne	.L376
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6623              		.loc 1 1175 0 is_stmt 0 discriminator 1
 6624 004a 2369     		ldr	r3, [r4, #16]
 6625 004c 2BB1     		cbz	r3, .L377
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6626              		.loc 1 1183 0 is_stmt 1
 6627 004e 4FF00008 		mov	r8, #0
 6628 0052 04E0     		b	.L367
 6629              	.L376:
 6630 0054 4FF00008 		mov	r8, #0
 6631 0058 01E0     		b	.L367
 6632              	.L377:
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6633              		.loc 1 1178 0
 6634 005a A846     		mov	r8, r5
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 6635              		.loc 1 1177 0
 6636 005c 0025     		movs	r5, #0
 6637              	.LVL780:
 6638              	.L367:
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6639              		.loc 1 1186 0
 6640 005e 0023     		movs	r3, #0
 6641 0060 84F87430 		strb	r3, [r4, #116]
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6642              		.loc 1 1188 0
 6643 0064 1AE0     		b	.L368
 6644              	.LVL781:
 6645              	.L371:
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 6646              		.loc 1 1190 0
 6647 0066 0096     		str	r6, [sp]
 6648 0068 3B46     		mov	r3, r7
 6649 006a 0022     		movs	r2, #0
 6650 006c 8021     		movs	r1, #128
 6651 006e 2046     		mov	r0, r4
 6652 0070 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6653              	.LVL782:
 6654 0074 58BB     		cbnz	r0, .L378
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 6655              		.loc 1 1194 0
 6656 0076 35B9     		cbnz	r5, .L369
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
ARM GAS  /tmp/cc9Y1vpF.s 			page 232


 6657              		.loc 1 1196 0
 6658 0078 2268     		ldr	r2, [r4]
 6659 007a 38F8023B 		ldrh	r3, [r8], #2
 6660              	.LVL783:
 6661 007e C3F30803 		ubfx	r3, r3, #0, #9
 6662 0082 1385     		strh	r3, [r2, #40]	@ movhi
 6663              	.LVL784:
 6664 0084 03E0     		b	.L370
 6665              	.L369:
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 6666              		.loc 1 1201 0
 6667 0086 2368     		ldr	r3, [r4]
 6668 0088 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 6669              	.LVL785:
 6670 008c 1A85     		strh	r2, [r3, #40]	@ movhi
 6671              	.LVL786:
 6672              	.L370:
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6673              		.loc 1 1204 0
 6674 008e B4F85230 		ldrh	r3, [r4, #82]
 6675 0092 9BB2     		uxth	r3, r3
 6676 0094 013B     		subs	r3, r3, #1
 6677 0096 9BB2     		uxth	r3, r3
 6678 0098 A4F85230 		strh	r3, [r4, #82]	@ movhi
 6679              	.L368:
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6680              		.loc 1 1188 0
 6681 009c B4F85230 		ldrh	r3, [r4, #82]
 6682 00a0 9BB2     		uxth	r3, r3
 6683 00a2 002B     		cmp	r3, #0
 6684 00a4 DFD1     		bne	.L371
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6685              		.loc 1 1207 0
 6686 00a6 0096     		str	r6, [sp]
 6687 00a8 3B46     		mov	r3, r7
 6688 00aa 0022     		movs	r2, #0
 6689 00ac 4021     		movs	r1, #64
 6690 00ae 2046     		mov	r0, r4
 6691 00b0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6692              	.LVL787:
 6693 00b4 0346     		mov	r3, r0
 6694 00b6 60B9     		cbnz	r0, .L379
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6695              		.loc 1 1213 0
 6696 00b8 2022     		movs	r2, #32
 6697 00ba A267     		str	r2, [r4, #120]
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6698              		.loc 1 1215 0
 6699 00bc 0AE0     		b	.L366
 6700              	.LVL788:
 6701              	.L372:
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6702              		.loc 1 1219 0
 6703 00be 0223     		movs	r3, #2
 6704 00c0 08E0     		b	.L366
 6705              	.L373:
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/cc9Y1vpF.s 			page 233


 6706              		.loc 1 1160 0
 6707 00c2 0123     		movs	r3, #1
 6708 00c4 06E0     		b	.L366
 6709              	.L374:
 6710 00c6 0123     		movs	r3, #1
 6711 00c8 04E0     		b	.L366
 6712              	.L375:
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6713              		.loc 1 1163 0
 6714 00ca 0223     		movs	r3, #2
 6715 00cc 02E0     		b	.L366
 6716              	.LVL789:
 6717              	.L378:
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 6718              		.loc 1 1192 0
 6719 00ce 0323     		movs	r3, #3
 6720 00d0 00E0     		b	.L366
 6721              	.L379:
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6722              		.loc 1 1209 0
 6723 00d2 0323     		movs	r3, #3
 6724              	.LVL790:
 6725              	.L366:
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6726              		.loc 1 1221 0
 6727 00d4 1846     		mov	r0, r3
 6728 00d6 02B0     		add	sp, sp, #8
 6729              	.LCFI30:
 6730              		.cfi_def_cfa_offset 24
 6731              		@ sp needed
 6732 00d8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6733              		.cfi_endproc
 6734              	.LFE139:
 6736              		.section	.text.HAL_UART_Receive,"ax",%progbits
 6737              		.align	2
 6738              		.global	HAL_UART_Receive
 6739              		.thumb
 6740              		.thumb_func
 6742              	HAL_UART_Receive:
 6743              	.LFB140:
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 6744              		.loc 1 1239 0
 6745              		.cfi_startproc
 6746              		@ args = 0, pretend = 0, frame = 0
 6747              		@ frame_needed = 0, uses_anonymous_args = 0
 6748              	.LVL791:
 6749 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6750              	.LCFI31:
 6751              		.cfi_def_cfa_offset 28
 6752              		.cfi_offset 4, -28
 6753              		.cfi_offset 5, -24
 6754              		.cfi_offset 6, -20
 6755              		.cfi_offset 7, -16
 6756              		.cfi_offset 8, -12
 6757              		.cfi_offset 9, -8
 6758              		.cfi_offset 14, -4
 6759 0004 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc9Y1vpF.s 			page 234


 6760              	.LCFI32:
 6761              		.cfi_def_cfa_offset 40
 6762 0006 1E46     		mov	r6, r3
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6763              		.loc 1 1246 0
 6764 0008 C36F     		ldr	r3, [r0, #124]
 6765              	.LVL792:
 6766 000a 202B     		cmp	r3, #32
 6767 000c 7ED1     		bne	.L395
 6768 000e 0446     		mov	r4, r0
 6769 0010 0D46     		mov	r5, r1
 6770 0012 9046     		mov	r8, r2
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6771              		.loc 1 1248 0
 6772 0014 0029     		cmp	r1, #0
 6773 0016 7BD0     		beq	.L396
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6774              		.loc 1 1248 0 is_stmt 0 discriminator 1
 6775 0018 002A     		cmp	r2, #0
 6776 001a 7BD0     		beq	.L397
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6777              		.loc 1 1253 0 is_stmt 1
 6778 001c 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 6779 0020 012B     		cmp	r3, #1
 6780 0022 79D0     		beq	.L398
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6781              		.loc 1 1253 0 is_stmt 0 discriminator 2
 6782 0024 0123     		movs	r3, #1
 6783 0026 80F87430 		strb	r3, [r0, #116]
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 6784              		.loc 1 1255 0 is_stmt 1 discriminator 2
 6785 002a 0023     		movs	r3, #0
 6786 002c C0F88030 		str	r3, [r0, #128]
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6787              		.loc 1 1256 0 discriminator 2
 6788 0030 2222     		movs	r2, #34
 6789              	.LVL793:
 6790 0032 C267     		str	r2, [r0, #124]
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6791              		.loc 1 1257 0 discriminator 2
 6792 0034 0366     		str	r3, [r0, #96]
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6793              		.loc 1 1260 0 discriminator 2
 6794 0036 FFF7FEFF 		bl	HAL_GetTick
 6795              	.LVL794:
 6796 003a 0746     		mov	r7, r0
 6797              	.LVL795:
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 6798              		.loc 1 1262 0 discriminator 2
 6799 003c A4F85880 		strh	r8, [r4, #88]	@ movhi
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6800              		.loc 1 1263 0 discriminator 2
 6801 0040 A4F85A80 		strh	r8, [r4, #90]	@ movhi
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6802              		.loc 1 1266 0 discriminator 2
 6803 0044 A368     		ldr	r3, [r4, #8]
 6804 0046 B3F5805F 		cmp	r3, #4096
ARM GAS  /tmp/cc9Y1vpF.s 			page 235


 6805 004a 0AD1     		bne	.L383
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6806              		.loc 1 1266 0 is_stmt 0 discriminator 1
 6807 004c 2269     		ldr	r2, [r4, #16]
 6808 004e 22B9     		cbnz	r2, .L384
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6809              		.loc 1 1266 0 discriminator 3
 6810 0050 40F2FF12 		movw	r2, #511
 6811 0054 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 6812 0058 1EE0     		b	.L385
 6813              	.L384:
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6814              		.loc 1 1266 0 discriminator 4
 6815 005a FF22     		movs	r2, #255
 6816 005c A4F85C20 		strh	r2, [r4, #92]	@ movhi
 6817 0060 1AE0     		b	.L385
 6818              	.L383:
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6819              		.loc 1 1266 0 discriminator 2
 6820 0062 4BB9     		cbnz	r3, .L386
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6821              		.loc 1 1266 0 discriminator 5
 6822 0064 2269     		ldr	r2, [r4, #16]
 6823 0066 1AB9     		cbnz	r2, .L387
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6824              		.loc 1 1266 0 discriminator 7
 6825 0068 FF22     		movs	r2, #255
 6826 006a A4F85C20 		strh	r2, [r4, #92]	@ movhi
 6827 006e 13E0     		b	.L385
 6828              	.L387:
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6829              		.loc 1 1266 0 discriminator 8
 6830 0070 7F22     		movs	r2, #127
 6831 0072 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 6832 0076 0FE0     		b	.L385
 6833              	.L386:
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6834              		.loc 1 1266 0 discriminator 6
 6835 0078 B3F1805F 		cmp	r3, #268435456
 6836 007c 09D1     		bne	.L388
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6837              		.loc 1 1266 0 discriminator 9
 6838 007e 2269     		ldr	r2, [r4, #16]
 6839 0080 1AB9     		cbnz	r2, .L389
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6840              		.loc 1 1266 0 discriminator 11
 6841 0082 7F22     		movs	r2, #127
 6842 0084 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 6843 0088 06E0     		b	.L385
 6844              	.L389:
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 6845              		.loc 1 1266 0 discriminator 12
 6846 008a 3F22     		movs	r2, #63
 6847 008c A4F85C20 		strh	r2, [r4, #92]	@ movhi
 6848 0090 02E0     		b	.L385
 6849              	.L388:
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  /tmp/cc9Y1vpF.s 			page 236


 6850              		.loc 1 1266 0 discriminator 10
 6851 0092 0022     		movs	r2, #0
 6852 0094 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 6853              	.L385:
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6854              		.loc 1 1267 0 is_stmt 1
 6855 0098 B4F85C80 		ldrh	r8, [r4, #92]
 6856              	.LVL796:
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6857              		.loc 1 1270 0
 6858 009c B3F5805F 		cmp	r3, #4096
 6859 00a0 04D1     		bne	.L399
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6860              		.loc 1 1270 0 is_stmt 0 discriminator 1
 6861 00a2 2369     		ldr	r3, [r4, #16]
 6862 00a4 2BB1     		cbz	r3, .L400
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6863              		.loc 1 1278 0 is_stmt 1
 6864 00a6 4FF00009 		mov	r9, #0
 6865 00aa 04E0     		b	.L390
 6866              	.L399:
 6867 00ac 4FF00009 		mov	r9, #0
 6868 00b0 01E0     		b	.L390
 6869              	.L400:
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6870              		.loc 1 1273 0
 6871 00b2 A946     		mov	r9, r5
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 6872              		.loc 1 1272 0
 6873 00b4 0025     		movs	r5, #0
 6874              	.LVL797:
 6875              	.L390:
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6876              		.loc 1 1281 0
 6877 00b6 0023     		movs	r3, #0
 6878 00b8 84F87430 		strb	r3, [r4, #116]
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6879              		.loc 1 1284 0
 6880 00bc 1DE0     		b	.L391
 6881              	.LVL798:
 6882              	.L394:
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 6883              		.loc 1 1286 0
 6884 00be 0096     		str	r6, [sp]
 6885 00c0 3B46     		mov	r3, r7
 6886 00c2 0022     		movs	r2, #0
 6887 00c4 2021     		movs	r1, #32
 6888 00c6 2046     		mov	r0, r4
 6889 00c8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6890              	.LVL799:
 6891 00cc 30BB     		cbnz	r0, .L401
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 6892              		.loc 1 1290 0
 6893 00ce 35B9     		cbnz	r5, .L392
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 6894              		.loc 1 1292 0
 6895 00d0 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc9Y1vpF.s 			page 237


 6896 00d2 9B8C     		ldrh	r3, [r3, #36]
 6897 00d4 08EA0303 		and	r3, r8, r3
 6898 00d8 29F8023B 		strh	r3, [r9], #2	@ movhi
 6899              	.LVL800:
 6900 00dc 06E0     		b	.L393
 6901              	.L392:
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 6902              		.loc 1 1297 0
 6903 00de 2368     		ldr	r3, [r4]
 6904 00e0 9B8C     		ldrh	r3, [r3, #36]
 6905 00e2 5FFA88F2 		uxtb	r2, r8
 6906 00e6 1340     		ands	r3, r3, r2
 6907 00e8 05F8013B 		strb	r3, [r5], #1
 6908              	.LVL801:
 6909              	.L393:
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6910              		.loc 1 1300 0
 6911 00ec B4F85A30 		ldrh	r3, [r4, #90]
 6912 00f0 9BB2     		uxth	r3, r3
 6913 00f2 013B     		subs	r3, r3, #1
 6914 00f4 9BB2     		uxth	r3, r3
 6915 00f6 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 6916              	.L391:
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 6917              		.loc 1 1284 0
 6918 00fa B4F85A30 		ldrh	r3, [r4, #90]
 6919 00fe 9BB2     		uxth	r3, r3
 6920 0100 002B     		cmp	r3, #0
 6921 0102 DCD1     		bne	.L394
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6922              		.loc 1 1304 0
 6923 0104 2023     		movs	r3, #32
 6924 0106 E367     		str	r3, [r4, #124]
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6925              		.loc 1 1306 0
 6926 0108 0020     		movs	r0, #0
 6927 010a 08E0     		b	.L382
 6928              	.LVL802:
 6929              	.L395:
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 6930              		.loc 1 1310 0
 6931 010c 0220     		movs	r0, #2
 6932              	.LVL803:
 6933 010e 06E0     		b	.L382
 6934              	.LVL804:
 6935              	.L396:
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6936              		.loc 1 1250 0
 6937 0110 0120     		movs	r0, #1
 6938              	.LVL805:
 6939 0112 04E0     		b	.L382
 6940              	.LVL806:
 6941              	.L397:
 6942 0114 0120     		movs	r0, #1
 6943              	.LVL807:
 6944 0116 02E0     		b	.L382
 6945              	.LVL808:
ARM GAS  /tmp/cc9Y1vpF.s 			page 238


 6946              	.L398:
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6947              		.loc 1 1253 0
 6948 0118 0220     		movs	r0, #2
 6949              	.LVL809:
 6950 011a 00E0     		b	.L382
 6951              	.LVL810:
 6952              	.L401:
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 6953              		.loc 1 1288 0
 6954 011c 0320     		movs	r0, #3
 6955              	.LVL811:
 6956              	.L382:
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6957              		.loc 1 1312 0
 6958 011e 03B0     		add	sp, sp, #12
 6959              	.LCFI33:
 6960              		.cfi_def_cfa_offset 28
 6961              		@ sp needed
 6962 0120 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6963              		.cfi_endproc
 6964              	.LFE140:
 6966              		.section	.text.UART_CheckIdleState,"ax",%progbits
 6967              		.align	2
 6968              		.global	UART_CheckIdleState
 6969              		.thumb
 6970              		.thumb_func
 6972              	UART_CheckIdleState:
 6973              	.LFB177:
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
 6974              		.loc 1 3476 0
 6975              		.cfi_startproc
 6976              		@ args = 0, pretend = 0, frame = 0
 6977              		@ frame_needed = 0, uses_anonymous_args = 0
 6978              	.LVL812:
 6979 0000 30B5     		push	{r4, r5, lr}
 6980              	.LCFI34:
 6981              		.cfi_def_cfa_offset 12
 6982              		.cfi_offset 4, -12
 6983              		.cfi_offset 5, -8
 6984              		.cfi_offset 14, -4
 6985 0002 83B0     		sub	sp, sp, #12
 6986              	.LCFI35:
 6987              		.cfi_def_cfa_offset 24
 6988 0004 0446     		mov	r4, r0
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6989              		.loc 1 3480 0
 6990 0006 0023     		movs	r3, #0
 6991 0008 C0F88030 		str	r3, [r0, #128]
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 6992              		.loc 1 3483 0
 6993 000c FFF7FEFF 		bl	HAL_GetTick
 6994              	.LVL813:
 6995 0010 0546     		mov	r5, r0
 6996              	.LVL814:
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6997              		.loc 1 3486 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 239


 6998 0012 2368     		ldr	r3, [r4]
 6999 0014 1B68     		ldr	r3, [r3]
 7000 0016 13F0080F 		tst	r3, #8
 7001 001a 0AD0     		beq	.L404
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 7002              		.loc 1 3489 0
 7003 001c 6FF07E43 		mvn	r3, #-33554432
 7004 0020 0093     		str	r3, [sp]
 7005 0022 0346     		mov	r3, r0
 7006 0024 0022     		movs	r2, #0
 7007 0026 4FF40011 		mov	r1, #2097152
 7008 002a 2046     		mov	r0, r4
 7009              	.LVL815:
 7010 002c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7011              	.LVL816:
 7012 0030 B8B9     		cbnz	r0, .L407
 7013              	.L404:
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7014              		.loc 1 3497 0
 7015 0032 2368     		ldr	r3, [r4]
 7016 0034 1B68     		ldr	r3, [r3]
 7017 0036 13F0040F 		tst	r3, #4
 7018 003a 0AD0     		beq	.L406
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 7019              		.loc 1 3500 0
 7020 003c 6FF07E43 		mvn	r3, #-33554432
 7021 0040 0093     		str	r3, [sp]
 7022 0042 2B46     		mov	r3, r5
 7023 0044 0022     		movs	r2, #0
 7024 0046 4FF48001 		mov	r1, #4194304
 7025 004a 2046     		mov	r0, r4
 7026 004c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7027              	.LVL817:
 7028 0050 48B9     		cbnz	r0, .L408
 7029              	.L406:
3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7030              		.loc 1 3508 0
 7031 0052 2023     		movs	r3, #32
 7032 0054 A367     		str	r3, [r4, #120]
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7033              		.loc 1 3509 0
 7034 0056 E367     		str	r3, [r4, #124]
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7035              		.loc 1 3510 0
 7036 0058 0020     		movs	r0, #0
 7037 005a 2066     		str	r0, [r4, #96]
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7038              		.loc 1 3512 0
 7039 005c 84F87400 		strb	r0, [r4, #116]
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7040              		.loc 1 3514 0
 7041 0060 02E0     		b	.L405
 7042              	.L407:
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7043              		.loc 1 3492 0
 7044 0062 0320     		movs	r0, #3
 7045 0064 00E0     		b	.L405
ARM GAS  /tmp/cc9Y1vpF.s 			page 240


 7046              	.L408:
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7047              		.loc 1 3503 0
 7048 0066 0320     		movs	r0, #3
 7049              	.L405:
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7050              		.loc 1 3515 0
 7051 0068 03B0     		add	sp, sp, #12
 7052              	.LCFI36:
 7053              		.cfi_def_cfa_offset 12
 7054              		@ sp needed
 7055 006a 30BD     		pop	{r4, r5, pc}
 7056              		.cfi_endproc
 7057              	.LFE177:
 7059              		.section	.text.HAL_UART_Init,"ax",%progbits
 7060              		.align	2
 7061              		.global	HAL_UART_Init
 7062              		.thumb
 7063              		.thumb_func
 7065              	HAL_UART_Init:
 7066              	.LFB132:
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 7067              		.loc 1 328 0
 7068              		.cfi_startproc
 7069              		@ args = 0, pretend = 0, frame = 0
 7070              		@ frame_needed = 0, uses_anonymous_args = 0
 7071              	.LVL818:
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7072              		.loc 1 330 0
 7073 0000 58B3     		cbz	r0, .L414
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 7074              		.loc 1 328 0
 7075 0002 10B5     		push	{r4, lr}
 7076              	.LCFI37:
 7077              		.cfi_def_cfa_offset 8
 7078              		.cfi_offset 4, -8
 7079              		.cfi_offset 14, -4
 7080 0004 0446     		mov	r4, r0
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7081              		.loc 1 346 0
 7082 0006 836F     		ldr	r3, [r0, #120]
 7083 0008 1BB9     		cbnz	r3, .L412
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7084              		.loc 1 349 0
 7085 000a 80F87430 		strb	r3, [r0, #116]
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 7086              		.loc 1 363 0
 7087 000e FFF7FEFF 		bl	HAL_UART_MspInit
 7088              	.LVL819:
 7089              	.L412:
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7090              		.loc 1 367 0
 7091 0012 2423     		movs	r3, #36
 7092 0014 A367     		str	r3, [r4, #120]
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7093              		.loc 1 369 0
 7094 0016 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc9Y1vpF.s 			page 241


 7095 0018 1368     		ldr	r3, [r2]
 7096 001a 23F00103 		bic	r3, r3, #1
 7097 001e 1360     		str	r3, [r2]
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7098              		.loc 1 372 0
 7099 0020 2046     		mov	r0, r4
 7100 0022 FFF7FEFF 		bl	UART_SetConfig
 7101              	.LVL820:
 7102 0026 0128     		cmp	r0, #1
 7103 0028 19D0     		beq	.L411
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7104              		.loc 1 377 0
 7105 002a 636A     		ldr	r3, [r4, #36]
 7106 002c 13B1     		cbz	r3, .L413
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7107              		.loc 1 379 0
 7108 002e 2046     		mov	r0, r4
 7109 0030 FFF7FEFF 		bl	UART_AdvFeatureConfig
 7110              	.LVL821:
 7111              	.L413:
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 7112              		.loc 1 385 0
 7113 0034 2268     		ldr	r2, [r4]
 7114 0036 5368     		ldr	r3, [r2, #4]
 7115 0038 23F49043 		bic	r3, r3, #18432
 7116 003c 5360     		str	r3, [r2, #4]
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7117              		.loc 1 386 0
 7118 003e 2268     		ldr	r2, [r4]
 7119 0040 9368     		ldr	r3, [r2, #8]
 7120 0042 23F02A03 		bic	r3, r3, #42
 7121 0046 9360     		str	r3, [r2, #8]
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7122              		.loc 1 388 0
 7123 0048 2268     		ldr	r2, [r4]
 7124 004a 1368     		ldr	r3, [r2]
 7125 004c 43F00103 		orr	r3, r3, #1
 7126 0050 1360     		str	r3, [r2]
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7127              		.loc 1 391 0
 7128 0052 2046     		mov	r0, r4
 7129 0054 FFF7FEFF 		bl	UART_CheckIdleState
 7130              	.LVL822:
 7131 0058 10BD     		pop	{r4, pc}
 7132              	.LVL823:
 7133              	.L414:
 7134              	.LCFI38:
 7135              		.cfi_def_cfa_offset 0
 7136              		.cfi_restore 4
 7137              		.cfi_restore 14
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7138              		.loc 1 332 0
 7139 005a 0120     		movs	r0, #1
 7140              	.LVL824:
 7141 005c 7047     		bx	lr
 7142              	.LVL825:
 7143              	.L411:
ARM GAS  /tmp/cc9Y1vpF.s 			page 242


 7144              	.LCFI39:
 7145              		.cfi_def_cfa_offset 8
 7146              		.cfi_offset 4, -8
 7147              		.cfi_offset 14, -4
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7148              		.loc 1 392 0
 7149 005e 10BD     		pop	{r4, pc}
 7150              		.cfi_endproc
 7151              	.LFE132:
 7153              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 7154              		.align	2
 7155              		.global	HAL_HalfDuplex_Init
 7156              		.thumb
 7157              		.thumb_func
 7159              	HAL_HalfDuplex_Init:
 7160              	.LFB133:
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 7161              		.loc 1 401 0
 7162              		.cfi_startproc
 7163              		@ args = 0, pretend = 0, frame = 0
 7164              		@ frame_needed = 0, uses_anonymous_args = 0
 7165              	.LVL826:
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7166              		.loc 1 403 0
 7167 0000 0028     		cmp	r0, #0
 7168 0002 30D0     		beq	.L421
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 7169              		.loc 1 401 0
 7170 0004 10B5     		push	{r4, lr}
 7171              	.LCFI40:
 7172              		.cfi_def_cfa_offset 8
 7173              		.cfi_offset 4, -8
 7174              		.cfi_offset 14, -4
 7175 0006 0446     		mov	r4, r0
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7176              		.loc 1 411 0
 7177 0008 836F     		ldr	r3, [r0, #120]
 7178 000a 1BB9     		cbnz	r3, .L419
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7179              		.loc 1 414 0
 7180 000c 80F87430 		strb	r3, [r0, #116]
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 7181              		.loc 1 428 0
 7182 0010 FFF7FEFF 		bl	HAL_UART_MspInit
 7183              	.LVL827:
 7184              	.L419:
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7185              		.loc 1 432 0
 7186 0014 2423     		movs	r3, #36
 7187 0016 A367     		str	r3, [r4, #120]
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7188              		.loc 1 434 0
 7189 0018 2268     		ldr	r2, [r4]
 7190 001a 1368     		ldr	r3, [r2]
 7191 001c 23F00103 		bic	r3, r3, #1
 7192 0020 1360     		str	r3, [r2]
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc9Y1vpF.s 			page 243


 7193              		.loc 1 437 0
 7194 0022 2046     		mov	r0, r4
 7195 0024 FFF7FEFF 		bl	UART_SetConfig
 7196              	.LVL828:
 7197 0028 0128     		cmp	r0, #1
 7198 002a 1ED0     		beq	.L418
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7199              		.loc 1 442 0
 7200 002c 636A     		ldr	r3, [r4, #36]
 7201 002e 13B1     		cbz	r3, .L420
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7202              		.loc 1 444 0
 7203 0030 2046     		mov	r0, r4
 7204 0032 FFF7FEFF 		bl	UART_AdvFeatureConfig
 7205              	.LVL829:
 7206              	.L420:
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 7207              		.loc 1 450 0
 7208 0036 2268     		ldr	r2, [r4]
 7209 0038 5368     		ldr	r3, [r2, #4]
 7210 003a 23F49043 		bic	r3, r3, #18432
 7211 003e 5360     		str	r3, [r2, #4]
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7212              		.loc 1 451 0
 7213 0040 2268     		ldr	r2, [r4]
 7214 0042 9368     		ldr	r3, [r2, #8]
 7215 0044 23F02203 		bic	r3, r3, #34
 7216 0048 9360     		str	r3, [r2, #8]
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7217              		.loc 1 454 0
 7218 004a 2268     		ldr	r2, [r4]
 7219 004c 9368     		ldr	r3, [r2, #8]
 7220 004e 43F00803 		orr	r3, r3, #8
 7221 0052 9360     		str	r3, [r2, #8]
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7222              		.loc 1 456 0
 7223 0054 2268     		ldr	r2, [r4]
 7224 0056 1368     		ldr	r3, [r2]
 7225 0058 43F00103 		orr	r3, r3, #1
 7226 005c 1360     		str	r3, [r2]
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7227              		.loc 1 459 0
 7228 005e 2046     		mov	r0, r4
 7229 0060 FFF7FEFF 		bl	UART_CheckIdleState
 7230              	.LVL830:
 7231 0064 10BD     		pop	{r4, pc}
 7232              	.LVL831:
 7233              	.L421:
 7234              	.LCFI41:
 7235              		.cfi_def_cfa_offset 0
 7236              		.cfi_restore 4
 7237              		.cfi_restore 14
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7238              		.loc 1 405 0
 7239 0066 0120     		movs	r0, #1
 7240              	.LVL832:
 7241 0068 7047     		bx	lr
ARM GAS  /tmp/cc9Y1vpF.s 			page 244


 7242              	.LVL833:
 7243              	.L418:
 7244              	.LCFI42:
 7245              		.cfi_def_cfa_offset 8
 7246              		.cfi_offset 4, -8
 7247              		.cfi_offset 14, -4
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7248              		.loc 1 460 0
 7249 006a 10BD     		pop	{r4, pc}
 7250              		.cfi_endproc
 7251              	.LFE133:
 7253              		.section	.text.HAL_LIN_Init,"ax",%progbits
 7254              		.align	2
 7255              		.global	HAL_LIN_Init
 7256              		.thumb
 7257              		.thumb_func
 7259              	HAL_LIN_Init:
 7260              	.LFB134:
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 7261              		.loc 1 474 0
 7262              		.cfi_startproc
 7263              		@ args = 0, pretend = 0, frame = 0
 7264              		@ frame_needed = 0, uses_anonymous_args = 0
 7265              	.LVL834:
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7266              		.loc 1 476 0
 7267 0000 0028     		cmp	r0, #0
 7268 0002 3ED0     		beq	.L428
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 7269              		.loc 1 474 0
 7270 0004 38B5     		push	{r3, r4, r5, lr}
 7271              	.LCFI43:
 7272              		.cfi_def_cfa_offset 16
 7273              		.cfi_offset 3, -16
 7274              		.cfi_offset 4, -12
 7275              		.cfi_offset 5, -8
 7276              		.cfi_offset 14, -4
 7277 0006 0446     		mov	r4, r0
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7278              		.loc 1 487 0
 7279 0008 C369     		ldr	r3, [r0, #28]
 7280 000a B3F5004F 		cmp	r3, #32768
 7281 000e 3AD0     		beq	.L429
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7282              		.loc 1 492 0
 7283 0010 8368     		ldr	r3, [r0, #8]
 7284 0012 002B     		cmp	r3, #0
 7285 0014 39D1     		bne	.L430
 7286 0016 0D46     		mov	r5, r1
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7287              		.loc 1 497 0
 7288 0018 836F     		ldr	r3, [r0, #120]
 7289 001a 1BB9     		cbnz	r3, .L426
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7290              		.loc 1 500 0
 7291 001c 80F87430 		strb	r3, [r0, #116]
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  /tmp/cc9Y1vpF.s 			page 245


 7292              		.loc 1 514 0
 7293 0020 FFF7FEFF 		bl	HAL_UART_MspInit
 7294              	.LVL835:
 7295              	.L426:
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7296              		.loc 1 518 0
 7297 0024 2423     		movs	r3, #36
 7298 0026 A367     		str	r3, [r4, #120]
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7299              		.loc 1 520 0
 7300 0028 2268     		ldr	r2, [r4]
 7301 002a 1368     		ldr	r3, [r2]
 7302 002c 23F00103 		bic	r3, r3, #1
 7303 0030 1360     		str	r3, [r2]
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7304              		.loc 1 523 0
 7305 0032 2046     		mov	r0, r4
 7306 0034 FFF7FEFF 		bl	UART_SetConfig
 7307              	.LVL836:
 7308 0038 0128     		cmp	r0, #1
 7309 003a 27D0     		beq	.L425
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7310              		.loc 1 528 0
 7311 003c 636A     		ldr	r3, [r4, #36]
 7312 003e 13B1     		cbz	r3, .L427
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7313              		.loc 1 530 0
 7314 0040 2046     		mov	r0, r4
 7315 0042 FFF7FEFF 		bl	UART_AdvFeatureConfig
 7316              	.LVL837:
 7317              	.L427:
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 7318              		.loc 1 536 0
 7319 0046 2268     		ldr	r2, [r4]
 7320 0048 5368     		ldr	r3, [r2, #4]
 7321 004a 23F40063 		bic	r3, r3, #2048
 7322 004e 5360     		str	r3, [r2, #4]
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7323              		.loc 1 537 0
 7324 0050 2268     		ldr	r2, [r4]
 7325 0052 9368     		ldr	r3, [r2, #8]
 7326 0054 23F02A03 		bic	r3, r3, #42
 7327 0058 9360     		str	r3, [r2, #8]
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7328              		.loc 1 540 0
 7329 005a 2268     		ldr	r2, [r4]
 7330 005c 5368     		ldr	r3, [r2, #4]
 7331 005e 43F48043 		orr	r3, r3, #16384
 7332 0062 5360     		str	r3, [r2, #4]
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7333              		.loc 1 543 0
 7334 0064 2368     		ldr	r3, [r4]
 7335 0066 5968     		ldr	r1, [r3, #4]
 7336 0068 21F02001 		bic	r1, r1, #32
 7337 006c 2943     		orrs	r1, r1, r5
 7338 006e 5960     		str	r1, [r3, #4]
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 246


 7339              		.loc 1 545 0
 7340 0070 2268     		ldr	r2, [r4]
 7341 0072 1368     		ldr	r3, [r2]
 7342 0074 43F00103 		orr	r3, r3, #1
 7343 0078 1360     		str	r3, [r2]
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7344              		.loc 1 548 0
 7345 007a 2046     		mov	r0, r4
 7346 007c FFF7FEFF 		bl	UART_CheckIdleState
 7347              	.LVL838:
 7348 0080 38BD     		pop	{r3, r4, r5, pc}
 7349              	.LVL839:
 7350              	.L428:
 7351              	.LCFI44:
 7352              		.cfi_def_cfa_offset 0
 7353              		.cfi_restore 3
 7354              		.cfi_restore 4
 7355              		.cfi_restore 5
 7356              		.cfi_restore 14
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7357              		.loc 1 478 0
 7358 0082 0120     		movs	r0, #1
 7359              	.LVL840:
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7360              		.loc 1 549 0
 7361 0084 7047     		bx	lr
 7362              	.LVL841:
 7363              	.L429:
 7364              	.LCFI45:
 7365              		.cfi_def_cfa_offset 16
 7366              		.cfi_offset 3, -16
 7367              		.cfi_offset 4, -12
 7368              		.cfi_offset 5, -8
 7369              		.cfi_offset 14, -4
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7370              		.loc 1 489 0
 7371 0086 0120     		movs	r0, #1
 7372              	.LVL842:
 7373 0088 38BD     		pop	{r3, r4, r5, pc}
 7374              	.LVL843:
 7375              	.L430:
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7376              		.loc 1 494 0
 7377 008a 0120     		movs	r0, #1
 7378              	.LVL844:
 7379              	.L425:
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7380              		.loc 1 549 0
 7381 008c 38BD     		pop	{r3, r4, r5, pc}
 7382              		.cfi_endproc
 7383              	.LFE134:
 7385 008e 00BF     		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 7386              		.align	2
 7387              		.global	HAL_MultiProcessor_Init
 7388              		.thumb
 7389              		.thumb_func
 7391              	HAL_MultiProcessor_Init:
ARM GAS  /tmp/cc9Y1vpF.s 			page 247


 7392              	.LFB135:
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 7393              		.loc 1 571 0
 7394              		.cfi_startproc
 7395              		@ args = 0, pretend = 0, frame = 0
 7396              		@ frame_needed = 0, uses_anonymous_args = 0
 7397              	.LVL845:
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7398              		.loc 1 573 0
 7399 0000 0028     		cmp	r0, #0
 7400 0002 3ED0     		beq	.L437
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 7401              		.loc 1 571 0
 7402 0004 70B5     		push	{r4, r5, r6, lr}
 7403              	.LCFI46:
 7404              		.cfi_def_cfa_offset 16
 7405              		.cfi_offset 4, -16
 7406              		.cfi_offset 5, -12
 7407              		.cfi_offset 6, -8
 7408              		.cfi_offset 14, -4
 7409 0006 0446     		mov	r4, r0
 7410 0008 1546     		mov	r5, r2
 7411 000a 0E46     		mov	r6, r1
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7412              		.loc 1 581 0
 7413 000c 836F     		ldr	r3, [r0, #120]
 7414 000e 1BB9     		cbnz	r3, .L434
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7415              		.loc 1 584 0
 7416 0010 80F87430 		strb	r3, [r0, #116]
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 7417              		.loc 1 598 0
 7418 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 7419              	.LVL846:
 7420              	.L434:
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7421              		.loc 1 602 0
 7422 0018 2423     		movs	r3, #36
 7423 001a A367     		str	r3, [r4, #120]
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7424              		.loc 1 604 0
 7425 001c 2268     		ldr	r2, [r4]
 7426 001e 1368     		ldr	r3, [r2]
 7427 0020 23F00103 		bic	r3, r3, #1
 7428 0024 1360     		str	r3, [r2]
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7429              		.loc 1 607 0
 7430 0026 2046     		mov	r0, r4
 7431 0028 FFF7FEFF 		bl	UART_SetConfig
 7432              	.LVL847:
 7433 002c 0128     		cmp	r0, #1
 7434 002e 2AD0     		beq	.L433
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7435              		.loc 1 612 0
 7436 0030 636A     		ldr	r3, [r4, #36]
 7437 0032 13B1     		cbz	r3, .L435
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc9Y1vpF.s 			page 248


 7438              		.loc 1 614 0
 7439 0034 2046     		mov	r0, r4
 7440 0036 FFF7FEFF 		bl	UART_AdvFeatureConfig
 7441              	.LVL848:
 7442              	.L435:
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 7443              		.loc 1 620 0
 7444 003a 2268     		ldr	r2, [r4]
 7445 003c 5368     		ldr	r3, [r2, #4]
 7446 003e 23F49043 		bic	r3, r3, #18432
 7447 0042 5360     		str	r3, [r2, #4]
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7448              		.loc 1 621 0
 7449 0044 2268     		ldr	r2, [r4]
 7450 0046 9368     		ldr	r3, [r2, #8]
 7451 0048 23F02A03 		bic	r3, r3, #42
 7452 004c 9360     		str	r3, [r2, #8]
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7453              		.loc 1 623 0
 7454 004e B5F5006F 		cmp	r5, #2048
 7455 0052 06D1     		bne	.L436
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7456              		.loc 1 626 0
 7457 0054 2368     		ldr	r3, [r4]
 7458 0056 5968     		ldr	r1, [r3, #4]
 7459 0058 21F07F41 		bic	r1, r1, #-16777216
 7460 005c 41EA0666 		orr	r6, r1, r6, lsl #24
 7461 0060 5E60     		str	r6, [r3, #4]
 7462              	.L436:
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7463              		.loc 1 630 0
 7464 0062 2168     		ldr	r1, [r4]
 7465 0064 0B68     		ldr	r3, [r1]
 7466 0066 23F40063 		bic	r3, r3, #2048
 7467 006a 45EA0302 		orr	r2, r5, r3
 7468 006e 0A60     		str	r2, [r1]
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7469              		.loc 1 632 0
 7470 0070 2268     		ldr	r2, [r4]
 7471 0072 1368     		ldr	r3, [r2]
 7472 0074 43F00103 		orr	r3, r3, #1
 7473 0078 1360     		str	r3, [r2]
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7474              		.loc 1 635 0
 7475 007a 2046     		mov	r0, r4
 7476 007c FFF7FEFF 		bl	UART_CheckIdleState
 7477              	.LVL849:
 7478 0080 70BD     		pop	{r4, r5, r6, pc}
 7479              	.LVL850:
 7480              	.L437:
 7481              	.LCFI47:
 7482              		.cfi_def_cfa_offset 0
 7483              		.cfi_restore 4
 7484              		.cfi_restore 5
 7485              		.cfi_restore 6
 7486              		.cfi_restore 14
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc9Y1vpF.s 			page 249


 7487              		.loc 1 575 0
 7488 0082 0120     		movs	r0, #1
 7489              	.LVL851:
 7490 0084 7047     		bx	lr
 7491              	.LVL852:
 7492              	.L433:
 7493              	.LCFI48:
 7494              		.cfi_def_cfa_offset 16
 7495              		.cfi_offset 4, -16
 7496              		.cfi_offset 5, -12
 7497              		.cfi_offset 6, -8
 7498              		.cfi_offset 14, -4
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7499              		.loc 1 636 0
 7500 0086 70BD     		pop	{r4, r5, r6, pc}
 7501              		.cfi_endproc
 7502              	.LFE135:
 7504              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 7505              		.align	2
 7506              		.global	HAL_MultiProcessor_EnableMuteMode
 7507              		.thumb
 7508              		.thumb_func
 7510              	HAL_MultiProcessor_EnableMuteMode:
 7511              	.LFB167:
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 7512              		.loc 1 2941 0
 7513              		.cfi_startproc
 7514              		@ args = 0, pretend = 0, frame = 0
 7515              		@ frame_needed = 0, uses_anonymous_args = 0
 7516              	.LVL853:
 7517 0000 08B5     		push	{r3, lr}
 7518              	.LCFI49:
 7519              		.cfi_def_cfa_offset 8
 7520              		.cfi_offset 3, -8
 7521              		.cfi_offset 14, -4
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7522              		.loc 1 2942 0
 7523 0002 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 7524 0006 012B     		cmp	r3, #1
 7525 0008 12D0     		beq	.L443
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7526              		.loc 1 2942 0 is_stmt 0 discriminator 2
 7527 000a 0123     		movs	r3, #1
 7528 000c 80F87430 		strb	r3, [r0, #116]
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7529              		.loc 1 2944 0 is_stmt 1 discriminator 2
 7530 0010 2423     		movs	r3, #36
 7531 0012 8367     		str	r3, [r0, #120]
 7532              	.L442:
 7533              	.LBB768:
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7534              		.loc 1 2947 0 discriminator 1
 7535 0014 0268     		ldr	r2, [r0]
 7536              	.LVL854:
 7537              	.LBB769:
 7538              	.LBB770:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/cc9Y1vpF.s 			page 250


 7539              		.loc 2 1155 0 discriminator 1
 7540              		.syntax unified
 7541              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7542 0016 52E8003F 		ldrex r3, [r2]
 7543              	@ 0 "" 2
 7544              	.LVL855:
 7545              		.thumb
 7546              		.syntax unified
 7547              	.LBE770:
 7548              	.LBE769:
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7549              		.loc 1 2947 0 discriminator 1
 7550 001a 43F40053 		orr	r3, r3, #8192
 7551              	.LVL856:
 7552              	.LBB771:
 7553              	.LBB772:
 7554              		.loc 2 1206 0 discriminator 1
 7555              		.syntax unified
 7556              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7557 001e 42E80031 		strex r1, r3, [r2]
 7558              	@ 0 "" 2
 7559              	.LVL857:
 7560              		.thumb
 7561              		.syntax unified
 7562              	.LBE772:
 7563              	.LBE771:
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7564              		.loc 1 2947 0 discriminator 1
 7565 0022 0029     		cmp	r1, #0
 7566 0024 F6D1     		bne	.L442
 7567              	.LBE768:
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7568              		.loc 1 2949 0
 7569 0026 2023     		movs	r3, #32
 7570              	.LVL858:
 7571 0028 8367     		str	r3, [r0, #120]
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7572              		.loc 1 2951 0
 7573 002a FFF7FEFF 		bl	UART_CheckIdleState
 7574              	.LVL859:
 7575 002e 08BD     		pop	{r3, pc}
 7576              	.LVL860:
 7577              	.L443:
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7578              		.loc 1 2942 0
 7579 0030 0220     		movs	r0, #2
 7580              	.LVL861:
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7581              		.loc 1 2952 0
 7582 0032 08BD     		pop	{r3, pc}
 7583              		.cfi_endproc
 7584              	.LFE167:
 7586              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 7587              		.align	2
 7588              		.global	HAL_MultiProcessor_DisableMuteMode
 7589              		.thumb
 7590              		.thumb_func
ARM GAS  /tmp/cc9Y1vpF.s 			page 251


 7592              	HAL_MultiProcessor_DisableMuteMode:
 7593              	.LFB168:
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 7594              		.loc 1 2961 0
 7595              		.cfi_startproc
 7596              		@ args = 0, pretend = 0, frame = 0
 7597              		@ frame_needed = 0, uses_anonymous_args = 0
 7598              	.LVL862:
 7599 0000 08B5     		push	{r3, lr}
 7600              	.LCFI50:
 7601              		.cfi_def_cfa_offset 8
 7602              		.cfi_offset 3, -8
 7603              		.cfi_offset 14, -4
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7604              		.loc 1 2962 0
 7605 0002 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 7606 0006 012B     		cmp	r3, #1
 7607 0008 12D0     		beq	.L448
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7608              		.loc 1 2962 0 is_stmt 0 discriminator 2
 7609 000a 0123     		movs	r3, #1
 7610 000c 80F87430 		strb	r3, [r0, #116]
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7611              		.loc 1 2964 0 is_stmt 1 discriminator 2
 7612 0010 2423     		movs	r3, #36
 7613 0012 8367     		str	r3, [r0, #120]
 7614              	.L447:
 7615              	.LBB773:
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7616              		.loc 1 2967 0 discriminator 1
 7617 0014 0268     		ldr	r2, [r0]
 7618              	.LVL863:
 7619              	.LBB774:
 7620              	.LBB775:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7621              		.loc 2 1155 0 discriminator 1
 7622              		.syntax unified
 7623              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7624 0016 52E8003F 		ldrex r3, [r2]
 7625              	@ 0 "" 2
 7626              	.LVL864:
 7627              		.thumb
 7628              		.syntax unified
 7629              	.LBE775:
 7630              	.LBE774:
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7631              		.loc 1 2967 0 discriminator 1
 7632 001a 23F40053 		bic	r3, r3, #8192
 7633              	.LVL865:
 7634              	.LBB776:
 7635              	.LBB777:
 7636              		.loc 2 1206 0 discriminator 1
 7637              		.syntax unified
 7638              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7639 001e 42E80031 		strex r1, r3, [r2]
 7640              	@ 0 "" 2
 7641              	.LVL866:
ARM GAS  /tmp/cc9Y1vpF.s 			page 252


 7642              		.thumb
 7643              		.syntax unified
 7644              	.LBE777:
 7645              	.LBE776:
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7646              		.loc 1 2967 0 discriminator 1
 7647 0022 0029     		cmp	r1, #0
 7648 0024 F6D1     		bne	.L447
 7649              	.LBE773:
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7650              		.loc 1 2969 0
 7651 0026 2023     		movs	r3, #32
 7652              	.LVL867:
 7653 0028 8367     		str	r3, [r0, #120]
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7654              		.loc 1 2971 0
 7655 002a FFF7FEFF 		bl	UART_CheckIdleState
 7656              	.LVL868:
 7657 002e 08BD     		pop	{r3, pc}
 7658              	.LVL869:
 7659              	.L448:
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7660              		.loc 1 2962 0
 7661 0030 0220     		movs	r0, #2
 7662              	.LVL870:
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7663              		.loc 1 2972 0
 7664 0032 08BD     		pop	{r3, pc}
 7665              		.cfi_endproc
 7666              	.LFE168:
 7668              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 7669              		.align	2
 7670              		.global	UART_Start_Receive_IT
 7671              		.thumb
 7672              		.thumb_func
 7674              	UART_Start_Receive_IT:
 7675              	.LFB179:
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 7676              		.loc 1 3600 0
 7677              		.cfi_startproc
 7678              		@ args = 0, pretend = 0, frame = 0
 7679              		@ frame_needed = 0, uses_anonymous_args = 0
 7680              		@ link register save eliminated.
 7681              	.LVL871:
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferSize  = Size;
 7682              		.loc 1 3601 0
 7683 0000 4165     		str	r1, [r0, #84]
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = Size;
 7684              		.loc 1 3602 0
 7685 0002 A0F85820 		strh	r2, [r0, #88]	@ movhi
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR       = NULL;
 7686              		.loc 1 3603 0
 7687 0006 A0F85A20 		strh	r2, [r0, #90]	@ movhi
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7688              		.loc 1 3604 0
 7689 000a 0023     		movs	r3, #0
 7690 000c 4366     		str	r3, [r0, #100]
ARM GAS  /tmp/cc9Y1vpF.s 			page 253


3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7691              		.loc 1 3607 0
 7692 000e 8368     		ldr	r3, [r0, #8]
 7693 0010 B3F5805F 		cmp	r3, #4096
 7694 0014 0AD1     		bne	.L451
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7695              		.loc 1 3607 0 is_stmt 0 discriminator 1
 7696 0016 0369     		ldr	r3, [r0, #16]
 7697 0018 23B9     		cbnz	r3, .L452
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7698              		.loc 1 3607 0 discriminator 3
 7699 001a 40F2FF13 		movw	r3, #511
 7700 001e A0F85C30 		strh	r3, [r0, #92]	@ movhi
 7701 0022 1EE0     		b	.L453
 7702              	.L452:
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7703              		.loc 1 3607 0 discriminator 4
 7704 0024 FF23     		movs	r3, #255
 7705 0026 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 7706 002a 1AE0     		b	.L453
 7707              	.L451:
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7708              		.loc 1 3607 0 discriminator 2
 7709 002c 4BB9     		cbnz	r3, .L454
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7710              		.loc 1 3607 0 discriminator 5
 7711 002e 0369     		ldr	r3, [r0, #16]
 7712 0030 1BB9     		cbnz	r3, .L455
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7713              		.loc 1 3607 0 discriminator 7
 7714 0032 FF23     		movs	r3, #255
 7715 0034 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 7716 0038 13E0     		b	.L453
 7717              	.L455:
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7718              		.loc 1 3607 0 discriminator 8
 7719 003a 7F23     		movs	r3, #127
 7720 003c A0F85C30 		strh	r3, [r0, #92]	@ movhi
 7721 0040 0FE0     		b	.L453
 7722              	.L454:
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7723              		.loc 1 3607 0 discriminator 6
 7724 0042 B3F1805F 		cmp	r3, #268435456
 7725 0046 09D1     		bne	.L456
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7726              		.loc 1 3607 0 discriminator 9
 7727 0048 0369     		ldr	r3, [r0, #16]
 7728 004a 1BB9     		cbnz	r3, .L457
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7729              		.loc 1 3607 0 discriminator 11
 7730 004c 7F23     		movs	r3, #127
 7731 004e A0F85C30 		strh	r3, [r0, #92]	@ movhi
 7732 0052 06E0     		b	.L453
 7733              	.L457:
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7734              		.loc 1 3607 0 discriminator 12
 7735 0054 3F23     		movs	r3, #63
ARM GAS  /tmp/cc9Y1vpF.s 			page 254


 7736 0056 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 7737 005a 02E0     		b	.L453
 7738              	.L456:
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7739              		.loc 1 3607 0 discriminator 10
 7740 005c 0023     		movs	r3, #0
 7741 005e A0F85C30 		strh	r3, [r0, #92]	@ movhi
 7742              	.L453:
3609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 7743              		.loc 1 3609 0 is_stmt 1
 7744 0062 0023     		movs	r3, #0
 7745 0064 C0F88030 		str	r3, [r0, #128]
3610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7746              		.loc 1 3610 0
 7747 0068 2223     		movs	r3, #34
 7748 006a C367     		str	r3, [r0, #124]
 7749              	.LVL872:
 7750              	.L458:
 7751              	.LBB778:
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7752              		.loc 1 3613 0 discriminator 1
 7753 006c 0268     		ldr	r2, [r0]
 7754              	.LVL873:
 7755              	.LBB779:
 7756              	.LBB780:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7757              		.loc 2 1155 0 discriminator 1
 7758 006e 02F10803 		add	r3, r2, #8
 7759              	.LVL874:
 7760              		.syntax unified
 7761              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7762 0072 53E8003F 		ldrex r3, [r3]
 7763              	@ 0 "" 2
 7764              	.LVL875:
 7765              		.thumb
 7766              		.syntax unified
 7767              	.LBE780:
 7768              	.LBE779:
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7769              		.loc 1 3613 0 discriminator 1
 7770 0076 43F00103 		orr	r3, r3, #1
 7771              	.LVL876:
 7772              	.LBB781:
 7773              	.LBB782:
 7774              		.loc 2 1206 0 discriminator 1
 7775 007a 0832     		adds	r2, r2, #8
 7776              	.LVL877:
 7777              		.syntax unified
 7778              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7779 007c 42E80031 		strex r1, r3, [r2]
 7780              	@ 0 "" 2
 7781              	.LVL878:
 7782              		.thumb
 7783              		.syntax unified
 7784              	.LBE782:
 7785              	.LBE781:
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc9Y1vpF.s 			page 255


 7786              		.loc 1 3613 0 discriminator 1
 7787 0080 0029     		cmp	r1, #0
 7788 0082 F3D1     		bne	.L458
 7789              	.LBE778:
3664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7790              		.loc 1 3664 0
 7791 0084 8368     		ldr	r3, [r0, #8]
 7792              	.LVL879:
 7793 0086 B3F5805F 		cmp	r3, #4096
 7794 008a 04D1     		bne	.L459
3664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7795              		.loc 1 3664 0 is_stmt 0 discriminator 1
 7796 008c 0369     		ldr	r3, [r0, #16]
 7797 008e 13B9     		cbnz	r3, .L459
3666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7798              		.loc 1 3666 0 is_stmt 1
 7799 0090 0F4B     		ldr	r3, .L464
 7800 0092 4366     		str	r3, [r0, #100]
 7801 0094 01E0     		b	.L460
 7802              	.L459:
3670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7803              		.loc 1 3670 0
 7804 0096 0F4B     		ldr	r3, .L464+4
 7805 0098 4366     		str	r3, [r0, #100]
 7806              	.L460:
3673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7807              		.loc 1 3673 0
 7808 009a 0023     		movs	r3, #0
 7809 009c 80F87430 		strb	r3, [r0, #116]
3676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7810              		.loc 1 3676 0
 7811 00a0 0369     		ldr	r3, [r0, #16]
 7812 00a2 4BB1     		cbz	r3, .L461
 7813              	.L462:
 7814              	.LBB783:
3678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7815              		.loc 1 3678 0 discriminator 1
 7816 00a4 0268     		ldr	r2, [r0]
 7817              	.LVL880:
 7818              	.LBB784:
 7819              	.LBB785:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7820              		.loc 2 1155 0 discriminator 1
 7821              		.syntax unified
 7822              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7823 00a6 52E8003F 		ldrex r3, [r2]
 7824              	@ 0 "" 2
 7825              	.LVL881:
 7826              		.thumb
 7827              		.syntax unified
 7828              	.LBE785:
 7829              	.LBE784:
3678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7830              		.loc 1 3678 0 discriminator 1
 7831 00aa 43F49073 		orr	r3, r3, #288
 7832              	.LVL882:
 7833              	.LBB786:
ARM GAS  /tmp/cc9Y1vpF.s 			page 256


 7834              	.LBB787:
 7835              		.loc 2 1206 0 discriminator 1
 7836              		.syntax unified
 7837              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7838 00ae 42E80031 		strex r1, r3, [r2]
 7839              	@ 0 "" 2
 7840              	.LVL883:
 7841              		.thumb
 7842              		.syntax unified
 7843              	.LBE787:
 7844              	.LBE786:
3678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7845              		.loc 1 3678 0 discriminator 1
 7846 00b2 0029     		cmp	r1, #0
 7847 00b4 F6D1     		bne	.L462
 7848 00b6 08E0     		b	.L463
 7849              	.LVL884:
 7850              	.L461:
 7851              	.LBE783:
 7852              	.LBB788:
3682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7853              		.loc 1 3682 0 discriminator 1
 7854 00b8 0268     		ldr	r2, [r0]
 7855              	.LVL885:
 7856              	.LBB789:
 7857              	.LBB790:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7858              		.loc 2 1155 0 discriminator 1
 7859              		.syntax unified
 7860              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7861 00ba 52E8003F 		ldrex r3, [r2]
 7862              	@ 0 "" 2
 7863              	.LVL886:
 7864              		.thumb
 7865              		.syntax unified
 7866              	.LBE790:
 7867              	.LBE789:
3682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7868              		.loc 1 3682 0 discriminator 1
 7869 00be 43F02003 		orr	r3, r3, #32
 7870              	.LVL887:
 7871              	.LBB791:
 7872              	.LBB792:
 7873              		.loc 2 1206 0 discriminator 1
 7874              		.syntax unified
 7875              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7876 00c2 42E80031 		strex r1, r3, [r2]
 7877              	@ 0 "" 2
 7878              	.LVL888:
 7879              		.thumb
 7880              		.syntax unified
 7881              	.LBE792:
 7882              	.LBE791:
3682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7883              		.loc 1 3682 0 discriminator 1
 7884 00c6 0029     		cmp	r1, #0
 7885 00c8 F6D1     		bne	.L461
ARM GAS  /tmp/cc9Y1vpF.s 			page 257


 7886              	.LVL889:
 7887              	.L463:
 7888              	.LBE788:
3686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7889              		.loc 1 3686 0
 7890 00ca 0020     		movs	r0, #0
 7891              	.LVL890:
 7892 00cc 7047     		bx	lr
 7893              	.L465:
 7894 00ce 00BF     		.align	2
 7895              	.L464:
 7896 00d0 00000000 		.word	UART_RxISR_16BIT
 7897 00d4 00000000 		.word	UART_RxISR_8BIT
 7898              		.cfi_endproc
 7899              	.LFE179:
 7901              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 7902              		.align	2
 7903              		.global	HAL_UART_Receive_IT
 7904              		.thumb
 7905              		.thumb_func
 7907              	HAL_UART_Receive_IT:
 7908              	.LFB142:
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 7909              		.loc 1 1416 0
 7910              		.cfi_startproc
 7911              		@ args = 0, pretend = 0, frame = 0
 7912              		@ frame_needed = 0, uses_anonymous_args = 0
 7913              	.LVL891:
 7914 0000 38B5     		push	{r3, r4, r5, lr}
 7915              	.LCFI51:
 7916              		.cfi_def_cfa_offset 16
 7917              		.cfi_offset 3, -16
 7918              		.cfi_offset 4, -12
 7919              		.cfi_offset 5, -8
 7920              		.cfi_offset 14, -4
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 7921              		.loc 1 1418 0
 7922 0002 C36F     		ldr	r3, [r0, #124]
 7923 0004 202B     		cmp	r3, #32
 7924 0006 1ED1     		bne	.L470
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 7925              		.loc 1 1420 0
 7926 0008 F9B1     		cbz	r1, .L471
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 7927              		.loc 1 1420 0 is_stmt 0 discriminator 1
 7928 000a 02B3     		cbz	r2, .L472
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7929              		.loc 1 1425 0 is_stmt 1
 7930 000c 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 7931 0010 012B     		cmp	r3, #1
 7932 0012 1ED0     		beq	.L473
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7933              		.loc 1 1425 0 is_stmt 0 discriminator 2
 7934 0014 0123     		movs	r3, #1
 7935 0016 80F87430 		strb	r3, [r0, #116]
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 7936              		.loc 1 1428 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/cc9Y1vpF.s 			page 258


 7937 001a 0023     		movs	r3, #0
 7938 001c 0366     		str	r3, [r0, #96]
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 7939              		.loc 1 1430 0 discriminator 2
 7940 001e 0368     		ldr	r3, [r0]
 7941 0020 0D4C     		ldr	r4, .L475
 7942 0022 A342     		cmp	r3, r4
 7943 0024 0CD0     		beq	.L468
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 7944              		.loc 1 1433 0
 7945 0026 5B68     		ldr	r3, [r3, #4]
 7946 0028 13F4000F 		tst	r3, #8388608
 7947 002c 08D0     		beq	.L468
 7948              	.L469:
 7949              	.LBB793:
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 7950              		.loc 1 1436 0 discriminator 1
 7951 002e 0468     		ldr	r4, [r0]
 7952              	.LVL892:
 7953              	.LBB794:
 7954              	.LBB795:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7955              		.loc 2 1155 0 discriminator 1
 7956              		.syntax unified
 7957              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7958 0030 54E8003F 		ldrex r3, [r4]
 7959              	@ 0 "" 2
 7960              	.LVL893:
 7961              		.thumb
 7962              		.syntax unified
 7963              	.LBE795:
 7964              	.LBE794:
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 7965              		.loc 1 1436 0 discriminator 1
 7966 0034 43F08063 		orr	r3, r3, #67108864
 7967              	.LVL894:
 7968              	.LBB796:
 7969              	.LBB797:
 7970              		.loc 2 1206 0 discriminator 1
 7971              		.syntax unified
 7972              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7973 0038 44E80035 		strex r5, r3, [r4]
 7974              	@ 0 "" 2
 7975              	.LVL895:
 7976              		.thumb
 7977              		.syntax unified
 7978              	.LBE797:
 7979              	.LBE796:
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 7980              		.loc 1 1436 0 discriminator 1
 7981 003c 002D     		cmp	r5, #0
 7982 003e F6D1     		bne	.L469
 7983              	.LVL896:
 7984              	.L468:
 7985              	.LBE793:
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7986              		.loc 1 1440 0
ARM GAS  /tmp/cc9Y1vpF.s 			page 259


 7987 0040 FFF7FEFF 		bl	UART_Start_Receive_IT
 7988              	.LVL897:
 7989 0044 38BD     		pop	{r3, r4, r5, pc}
 7990              	.LVL898:
 7991              	.L470:
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7992              		.loc 1 1444 0
 7993 0046 0220     		movs	r0, #2
 7994              	.LVL899:
 7995 0048 38BD     		pop	{r3, r4, r5, pc}
 7996              	.LVL900:
 7997              	.L471:
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7998              		.loc 1 1422 0
 7999 004a 0120     		movs	r0, #1
 8000              	.LVL901:
 8001 004c 38BD     		pop	{r3, r4, r5, pc}
 8002              	.LVL902:
 8003              	.L472:
 8004 004e 0120     		movs	r0, #1
 8005              	.LVL903:
 8006 0050 38BD     		pop	{r3, r4, r5, pc}
 8007              	.LVL904:
 8008              	.L473:
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8009              		.loc 1 1425 0
 8010 0052 0220     		movs	r0, #2
 8011              	.LVL905:
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8012              		.loc 1 1446 0
 8013 0054 38BD     		pop	{r3, r4, r5, pc}
 8014              	.L476:
 8015 0056 00BF     		.align	2
 8016              	.L475:
 8017 0058 00800040 		.word	1073774592
 8018              		.cfi_endproc
 8019              	.LFE142:
 8021              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 8022              		.align	2
 8023              		.global	UART_Start_Receive_DMA
 8024              		.thumb
 8025              		.thumb_func
 8027              	UART_Start_Receive_DMA:
 8028              	.LFB180:
3700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 8029              		.loc 1 3700 0
 8030              		.cfi_startproc
 8031              		@ args = 0, pretend = 0, frame = 0
 8032              		@ frame_needed = 0, uses_anonymous_args = 0
 8033              	.LVL906:
 8034 0000 10B5     		push	{r4, lr}
 8035              	.LCFI52:
 8036              		.cfi_def_cfa_offset 8
 8037              		.cfi_offset 4, -8
 8038              		.cfi_offset 14, -4
 8039 0002 0446     		mov	r4, r0
3701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferSize = Size;
ARM GAS  /tmp/cc9Y1vpF.s 			page 260


 8040              		.loc 1 3701 0
 8041 0004 4165     		str	r1, [r0, #84]
3702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8042              		.loc 1 3702 0
 8043 0006 A0F85820 		strh	r2, [r0, #88]	@ movhi
3704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8044              		.loc 1 3704 0
 8045 000a 0023     		movs	r3, #0
 8046 000c C0F88030 		str	r3, [r0, #128]
3705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8047              		.loc 1 3705 0
 8048 0010 2223     		movs	r3, #34
 8049 0012 C367     		str	r3, [r0, #124]
3707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 8050              		.loc 1 3707 0
 8051 0014 036F     		ldr	r3, [r0, #112]
 8052 0016 E3B1     		cbz	r3, .L478
3710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8053              		.loc 1 3710 0
 8054 0018 2249     		ldr	r1, .L485
 8055              	.LVL907:
 8056 001a D962     		str	r1, [r3, #44]
 8057              	.LVL908:
3713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8058              		.loc 1 3713 0
 8059 001c 036F     		ldr	r3, [r0, #112]
 8060 001e 2249     		ldr	r1, .L485+4
 8061 0020 1963     		str	r1, [r3, #48]
3716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8062              		.loc 1 3716 0
 8063 0022 036F     		ldr	r3, [r0, #112]
 8064 0024 2149     		ldr	r1, .L485+8
 8065 0026 5963     		str	r1, [r3, #52]
3719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8066              		.loc 1 3719 0
 8067 0028 036F     		ldr	r3, [r0, #112]
 8068 002a 0021     		movs	r1, #0
 8069 002c 9963     		str	r1, [r3, #56]
3722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 8070              		.loc 1 3722 0
 8071 002e 0168     		ldr	r1, [r0]
 8072 0030 1346     		mov	r3, r2
 8073 0032 426D     		ldr	r2, [r0, #84]
 8074              	.LVL909:
 8075 0034 2431     		adds	r1, r1, #36
 8076 0036 006F     		ldr	r0, [r0, #112]
 8077              	.LVL910:
 8078 0038 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8079              	.LVL911:
 8080 003c 48B1     		cbz	r0, .L478
3725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8081              		.loc 1 3725 0
 8082 003e 1023     		movs	r3, #16
 8083 0040 C4F88030 		str	r3, [r4, #128]
3727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8084              		.loc 1 3727 0
 8085 0044 0023     		movs	r3, #0
ARM GAS  /tmp/cc9Y1vpF.s 			page 261


 8086 0046 84F87430 		strb	r3, [r4, #116]
3730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8087              		.loc 1 3730 0
 8088 004a 2023     		movs	r3, #32
 8089 004c E367     		str	r3, [r4, #124]
3732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 8090              		.loc 1 3732 0
 8091 004e 0120     		movs	r0, #1
 8092 0050 10BD     		pop	{r4, pc}
 8093              	.LVL912:
 8094              	.L478:
3735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8095              		.loc 1 3735 0
 8096 0052 0023     		movs	r3, #0
 8097 0054 84F87430 		strb	r3, [r4, #116]
3738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 8098              		.loc 1 3738 0
 8099 0058 2369     		ldr	r3, [r4, #16]
 8100 005a 43B1     		cbz	r3, .L482
 8101              	.L481:
 8102              	.LBB798:
3740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 8103              		.loc 1 3740 0 discriminator 1
 8104 005c 2268     		ldr	r2, [r4]
 8105              	.LVL913:
 8106              	.LBB799:
 8107              	.LBB800:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8108              		.loc 2 1155 0 discriminator 1
 8109              		.syntax unified
 8110              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8111 005e 52E8003F 		ldrex r3, [r2]
 8112              	@ 0 "" 2
 8113              	.LVL914:
 8114              		.thumb
 8115              		.syntax unified
 8116              	.LBE800:
 8117              	.LBE799:
3740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 8118              		.loc 1 3740 0 discriminator 1
 8119 0062 43F48073 		orr	r3, r3, #256
 8120              	.LVL915:
 8121              	.LBB801:
 8122              	.LBB802:
 8123              		.loc 2 1206 0 discriminator 1
 8124              		.syntax unified
 8125              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8126 0066 42E80031 		strex r1, r3, [r2]
 8127              	@ 0 "" 2
 8128              	.LVL916:
 8129              		.thumb
 8130              		.syntax unified
 8131              	.LBE802:
 8132              	.LBE801:
3740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 8133              		.loc 1 3740 0 discriminator 1
 8134 006a 0029     		cmp	r1, #0
ARM GAS  /tmp/cc9Y1vpF.s 			page 262


 8135 006c F6D1     		bne	.L481
 8136              	.LVL917:
 8137              	.L482:
 8138              	.LBE798:
 8139              	.LBB803:
3744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8140              		.loc 1 3744 0 discriminator 1
 8141 006e 2268     		ldr	r2, [r4]
 8142              	.LVL918:
 8143              	.LBB804:
 8144              	.LBB805:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8145              		.loc 2 1155 0 discriminator 1
 8146 0070 02F10803 		add	r3, r2, #8
 8147              	.LVL919:
 8148              		.syntax unified
 8149              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8150 0074 53E8003F 		ldrex r3, [r3]
 8151              	@ 0 "" 2
 8152              	.LVL920:
 8153              		.thumb
 8154              		.syntax unified
 8155              	.LBE805:
 8156              	.LBE804:
3744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8157              		.loc 1 3744 0 discriminator 1
 8158 0078 43F00103 		orr	r3, r3, #1
 8159              	.LVL921:
 8160              	.LBB806:
 8161              	.LBB807:
 8162              		.loc 2 1206 0 discriminator 1
 8163 007c 0832     		adds	r2, r2, #8
 8164              	.LVL922:
 8165              		.syntax unified
 8166              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8167 007e 42E80031 		strex r1, r3, [r2]
 8168              	@ 0 "" 2
 8169              	.LVL923:
 8170              		.thumb
 8171              		.syntax unified
 8172              	.LBE807:
 8173              	.LBE806:
3744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8174              		.loc 1 3744 0 discriminator 1
 8175 0082 0029     		cmp	r1, #0
 8176 0084 F3D1     		bne	.L482
 8177              	.LVL924:
 8178              	.L483:
 8179              	.LBE803:
 8180              	.LBB808:
3748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8181              		.loc 1 3748 0 discriminator 1
 8182 0086 2268     		ldr	r2, [r4]
 8183              	.LVL925:
 8184              	.LBB809:
 8185              	.LBB810:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/cc9Y1vpF.s 			page 263


 8186              		.loc 2 1155 0 discriminator 1
 8187 0088 02F10803 		add	r3, r2, #8
 8188              	.LVL926:
 8189              		.syntax unified
 8190              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8191 008c 53E8003F 		ldrex r3, [r3]
 8192              	@ 0 "" 2
 8193              	.LVL927:
 8194              		.thumb
 8195              		.syntax unified
 8196              	.LBE810:
 8197              	.LBE809:
3748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8198              		.loc 1 3748 0 discriminator 1
 8199 0090 43F04003 		orr	r3, r3, #64
 8200              	.LVL928:
 8201              	.LBB811:
 8202              	.LBB812:
 8203              		.loc 2 1206 0 discriminator 1
 8204 0094 0832     		adds	r2, r2, #8
 8205              	.LVL929:
 8206              		.syntax unified
 8207              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8208 0096 42E80031 		strex r1, r3, [r2]
 8209              	@ 0 "" 2
 8210              	.LVL930:
 8211              		.thumb
 8212              		.syntax unified
 8213              	.LBE812:
 8214              	.LBE811:
3748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8215              		.loc 1 3748 0 discriminator 1
 8216 009a 0029     		cmp	r1, #0
 8217 009c F3D1     		bne	.L483
 8218              	.LBE808:
3750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 8219              		.loc 1 3750 0
 8220 009e 0020     		movs	r0, #0
3751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8221              		.loc 1 3751 0
 8222 00a0 10BD     		pop	{r4, pc}
 8223              	.LVL931:
 8224              	.L486:
 8225 00a2 00BF     		.align	2
 8226              	.L485:
 8227 00a4 00000000 		.word	UART_DMAReceiveCplt
 8228 00a8 00000000 		.word	UART_DMARxHalfCplt
 8229 00ac 00000000 		.word	UART_DMAError
 8230              		.cfi_endproc
 8231              	.LFE180:
 8233              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 8234              		.align	2
 8235              		.global	HAL_UART_Receive_DMA
 8236              		.thumb
 8237              		.thumb_func
 8239              	HAL_UART_Receive_DMA:
 8240              	.LFB144:
ARM GAS  /tmp/cc9Y1vpF.s 			page 264


1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 8241              		.loc 1 1535 0
 8242              		.cfi_startproc
 8243              		@ args = 0, pretend = 0, frame = 0
 8244              		@ frame_needed = 0, uses_anonymous_args = 0
 8245              	.LVL932:
 8246 0000 38B5     		push	{r3, r4, r5, lr}
 8247              	.LCFI53:
 8248              		.cfi_def_cfa_offset 16
 8249              		.cfi_offset 3, -16
 8250              		.cfi_offset 4, -12
 8251              		.cfi_offset 5, -8
 8252              		.cfi_offset 14, -4
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 8253              		.loc 1 1537 0
 8254 0002 C36F     		ldr	r3, [r0, #124]
 8255 0004 202B     		cmp	r3, #32
 8256 0006 1ED1     		bne	.L491
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 8257              		.loc 1 1539 0
 8258 0008 F9B1     		cbz	r1, .L492
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 8259              		.loc 1 1539 0 is_stmt 0 discriminator 1
 8260 000a 02B3     		cbz	r2, .L493
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8261              		.loc 1 1544 0 is_stmt 1
 8262 000c 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 8263 0010 012B     		cmp	r3, #1
 8264 0012 1ED0     		beq	.L494
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8265              		.loc 1 1544 0 is_stmt 0 discriminator 2
 8266 0014 0123     		movs	r3, #1
 8267 0016 80F87430 		strb	r3, [r0, #116]
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8268              		.loc 1 1547 0 is_stmt 1 discriminator 2
 8269 001a 0023     		movs	r3, #0
 8270 001c 0366     		str	r3, [r0, #96]
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 8271              		.loc 1 1549 0 discriminator 2
 8272 001e 0368     		ldr	r3, [r0]
 8273 0020 0D4C     		ldr	r4, .L496
 8274 0022 A342     		cmp	r3, r4
 8275 0024 0CD0     		beq	.L489
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 8276              		.loc 1 1552 0
 8277 0026 5B68     		ldr	r3, [r3, #4]
 8278 0028 13F4000F 		tst	r3, #8388608
 8279 002c 08D0     		beq	.L489
 8280              	.L490:
 8281              	.LBB813:
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 8282              		.loc 1 1555 0 discriminator 1
 8283 002e 0468     		ldr	r4, [r0]
 8284              	.LVL933:
 8285              	.LBB814:
 8286              	.LBB815:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/cc9Y1vpF.s 			page 265


 8287              		.loc 2 1155 0 discriminator 1
 8288              		.syntax unified
 8289              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8290 0030 54E8003F 		ldrex r3, [r4]
 8291              	@ 0 "" 2
 8292              	.LVL934:
 8293              		.thumb
 8294              		.syntax unified
 8295              	.LBE815:
 8296              	.LBE814:
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 8297              		.loc 1 1555 0 discriminator 1
 8298 0034 43F08063 		orr	r3, r3, #67108864
 8299              	.LVL935:
 8300              	.LBB816:
 8301              	.LBB817:
 8302              		.loc 2 1206 0 discriminator 1
 8303              		.syntax unified
 8304              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8305 0038 44E80035 		strex r5, r3, [r4]
 8306              	@ 0 "" 2
 8307              	.LVL936:
 8308              		.thumb
 8309              		.syntax unified
 8310              	.LBE817:
 8311              	.LBE816:
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 8312              		.loc 1 1555 0 discriminator 1
 8313 003c 002D     		cmp	r5, #0
 8314 003e F6D1     		bne	.L490
 8315              	.LVL937:
 8316              	.L489:
 8317              	.LBE813:
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 8318              		.loc 1 1559 0
 8319 0040 FFF7FEFF 		bl	UART_Start_Receive_DMA
 8320              	.LVL938:
 8321 0044 38BD     		pop	{r3, r4, r5, pc}
 8322              	.LVL939:
 8323              	.L491:
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 8324              		.loc 1 1563 0
 8325 0046 0220     		movs	r0, #2
 8326              	.LVL940:
 8327 0048 38BD     		pop	{r3, r4, r5, pc}
 8328              	.LVL941:
 8329              	.L492:
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 8330              		.loc 1 1541 0
 8331 004a 0120     		movs	r0, #1
 8332              	.LVL942:
 8333 004c 38BD     		pop	{r3, r4, r5, pc}
 8334              	.LVL943:
 8335              	.L493:
 8336 004e 0120     		movs	r0, #1
 8337              	.LVL944:
 8338 0050 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc9Y1vpF.s 			page 266


 8339              	.LVL945:
 8340              	.L494:
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8341              		.loc 1 1544 0
 8342 0052 0220     		movs	r0, #2
 8343              	.LVL946:
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 8344              		.loc 1 1565 0
 8345 0054 38BD     		pop	{r3, r4, r5, pc}
 8346              	.L497:
 8347 0056 00BF     		.align	2
 8348              	.L496:
 8349 0058 00800040 		.word	1073774592
 8350              		.cfi_endproc
 8351              	.LFE144:
 8353              		.text
 8354              	.Letext0:
 8355              		.file 3 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 8356              		.file 4 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 8357              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 8358              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 8359              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 8360              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 8361              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 8362              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 8363              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
 8364              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 8365              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/cc9Y1vpF.s 			page 267


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_uart.c
     /tmp/cc9Y1vpF.s:22     .text.UART_EndTxTransfer:00000000 $t
     /tmp/cc9Y1vpF.s:26     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/cc9Y1vpF.s:81     .text.UART_EndRxTransfer:00000000 $t
     /tmp/cc9Y1vpF.s:85     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/cc9Y1vpF.s:226    .text.UART_TxISR_8BIT:00000000 $t
     /tmp/cc9Y1vpF.s:230    .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
     /tmp/cc9Y1vpF.s:343    .text.UART_TxISR_16BIT:00000000 $t
     /tmp/cc9Y1vpF.s:347    .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
     /tmp/cc9Y1vpF.s:465    .text.HAL_UART_MspInit:00000000 $t
     /tmp/cc9Y1vpF.s:470    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/cc9Y1vpF.s:483    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/cc9Y1vpF.s:488    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/cc9Y1vpF.s:501    .text.HAL_UART_DeInit:00000000 $t
     /tmp/cc9Y1vpF.s:506    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/cc9Y1vpF.s:574    .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/cc9Y1vpF.s:579    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/cc9Y1vpF.s:705    .text.HAL_UART_Transmit_IT:00000070 $d
     /tmp/cc9Y1vpF.s:711    .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/cc9Y1vpF.s:716    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/cc9Y1vpF.s:882    .text.HAL_UART_Transmit_DMA:000000ac $d
     /tmp/cc9Y1vpF.s:2234   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/cc9Y1vpF.s:2438   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/cc9Y1vpF.s:2520   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/cc9Y1vpF.s:889    .text.HAL_UART_DMAPause:00000000 $t
     /tmp/cc9Y1vpF.s:894    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/cc9Y1vpF.s:1122   .text.HAL_UART_DMAResume:00000000 $t
     /tmp/cc9Y1vpF.s:1127   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/cc9Y1vpF.s:1337   .text.HAL_UART_DMAStop:00000000 $t
     /tmp/cc9Y1vpF.s:1342   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/cc9Y1vpF.s:1528   .text.HAL_UART_Abort:00000000 $t
     /tmp/cc9Y1vpF.s:1533   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
     /tmp/cc9Y1vpF.s:1839   .text.HAL_UART_AbortTransmit:00000000 $t
     /tmp/cc9Y1vpF.s:1844   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
     /tmp/cc9Y1vpF.s:1978   .text.HAL_UART_AbortReceive:00000000 $t
     /tmp/cc9Y1vpF.s:1983   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
     /tmp/cc9Y1vpF.s:2212   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/cc9Y1vpF.s:2217   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/cc9Y1vpF.s:2230   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/cc9Y1vpF.s:2349   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/cc9Y1vpF.s:2353   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/cc9Y1vpF.s:2416   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/cc9Y1vpF.s:2421   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc9Y1vpF.s:2434   .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/cc9Y1vpF.s:2462   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/cc9Y1vpF.s:2467   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/cc9Y1vpF.s:2480   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/cc9Y1vpF.s:2485   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc9Y1vpF.s:2498   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/cc9Y1vpF.s:2503   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/cc9Y1vpF.s:2516   .text.UART_DMAError:00000000 $t
     /tmp/cc9Y1vpF.s:2590   .text.UART_DMAAbortOnError:00000000 $t
     /tmp/cc9Y1vpF.s:2594   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/cc9Y1vpF.s:2622   .text.HAL_UART_AbortCpltCallback:00000000 $t
     /tmp/cc9Y1vpF.s:2627   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
     /tmp/cc9Y1vpF.s:2640   .text.HAL_UART_Abort_IT:00000000 $t
ARM GAS  /tmp/cc9Y1vpF.s 			page 268


     /tmp/cc9Y1vpF.s:2645   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
     /tmp/cc9Y1vpF.s:2998   .text.HAL_UART_Abort_IT:00000128 $d
     /tmp/cc9Y1vpF.s:3071   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
     /tmp/cc9Y1vpF.s:3008   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
     /tmp/cc9Y1vpF.s:3004   .text.UART_DMARxAbortCallback:00000000 $t
     /tmp/cc9Y1vpF.s:3067   .text.UART_DMATxAbortCallback:00000000 $t
     /tmp/cc9Y1vpF.s:3124   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
     /tmp/cc9Y1vpF.s:3129   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc9Y1vpF.s:3142   .text.HAL_UART_AbortTransmit_IT:00000000 $t
     /tmp/cc9Y1vpF.s:3147   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
     /tmp/cc9Y1vpF.s:3301   .text.HAL_UART_AbortTransmit_IT:0000007c $d
     /tmp/cc9Y1vpF.s:3310   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
     /tmp/cc9Y1vpF.s:3306   .text.UART_DMATxOnlyAbortCallback:00000000 $t
     /tmp/cc9Y1vpF.s:3339   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
     /tmp/cc9Y1vpF.s:3344   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc9Y1vpF.s:3357   .text.HAL_UART_AbortReceive_IT:00000000 $t
     /tmp/cc9Y1vpF.s:3362   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
     /tmp/cc9Y1vpF.s:3616   .text.HAL_UART_AbortReceive_IT:000000c4 $d
     /tmp/cc9Y1vpF.s:3625   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
     /tmp/cc9Y1vpF.s:3621   .text.UART_DMARxOnlyAbortCallback:00000000 $t
     /tmp/cc9Y1vpF.s:3666   .text.HAL_UARTEx_RxEventCallback:00000000 $t
     /tmp/cc9Y1vpF.s:3671   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
     /tmp/cc9Y1vpF.s:3684   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/cc9Y1vpF.s:3689   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/cc9Y1vpF.s:4378   .text.HAL_UART_IRQHandler:000002d4 $d
     /tmp/cc9Y1vpF.s:4384   .text.UART_RxISR_8BIT:00000000 $t
     /tmp/cc9Y1vpF.s:4388   .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
     /tmp/cc9Y1vpF.s:4598   .text.UART_RxISR_16BIT:00000000 $t
     /tmp/cc9Y1vpF.s:4602   .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
     /tmp/cc9Y1vpF.s:4814   .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/cc9Y1vpF.s:4818   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/cc9Y1vpF.s:4853   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/cc9Y1vpF.s:4857   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/cc9Y1vpF.s:5066   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
     /tmp/cc9Y1vpF.s:5071   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
     /tmp/cc9Y1vpF.s:5095   .text.HAL_UART_ReceiverTimeout_Config:00000014 $d
     /tmp/cc9Y1vpF.s:5100   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
     /tmp/cc9Y1vpF.s:5105   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
     /tmp/cc9Y1vpF.s:5168   .text.HAL_UART_EnableReceiverTimeout:00000044 $d
     /tmp/cc9Y1vpF.s:5173   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
     /tmp/cc9Y1vpF.s:5178   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
     /tmp/cc9Y1vpF.s:5241   .text.HAL_UART_DisableReceiverTimeout:00000044 $d
     /tmp/cc9Y1vpF.s:5246   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/cc9Y1vpF.s:5251   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc9Y1vpF.s:5270   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/cc9Y1vpF.s:5275   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc9Y1vpF.s:5388   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
     /tmp/cc9Y1vpF.s:5393   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc9Y1vpF.s:5506   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/cc9Y1vpF.s:5511   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/cc9Y1vpF.s:5556   .text.HAL_UART_GetState:00000000 $t
     /tmp/cc9Y1vpF.s:5561   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/cc9Y1vpF.s:5583   .text.HAL_UART_GetError:00000000 $t
     /tmp/cc9Y1vpF.s:5588   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
     /tmp/cc9Y1vpF.s:5606   .text.UART_SetConfig:00000000 $t
     /tmp/cc9Y1vpF.s:5611   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/cc9Y1vpF.s:5686   .text.UART_SetConfig:00000062 $d
ARM GAS  /tmp/cc9Y1vpF.s 			page 269


     /tmp/cc9Y1vpF.s:5690   .text.UART_SetConfig:00000066 $t
     /tmp/cc9Y1vpF.s:5725   .text.UART_SetConfig:00000090 $d
     /tmp/cc9Y1vpF.s:5866   .text.UART_SetConfig:00000140 $d
     /tmp/cc9Y1vpF.s:5958   .text.UART_SetConfig:000001ba $d
     /tmp/cc9Y1vpF.s:6051   .text.UART_SetConfig:00000224 $d
     /tmp/cc9Y1vpF.s:6142   .text.UART_SetConfig:00000280 $d
     /tmp/cc9Y1vpF.s:6152   .text.UART_SetConfig:0000029c $t
     /tmp/cc9Y1vpF.s:6179   .text.UART_AdvFeatureConfig:00000000 $t
     /tmp/cc9Y1vpF.s:6184   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
     /tmp/cc9Y1vpF.s:6304   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/cc9Y1vpF.s:6309   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc9Y1vpF.s:6558   .text.HAL_UART_Transmit:00000000 $t
     /tmp/cc9Y1vpF.s:6563   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/cc9Y1vpF.s:6737   .text.HAL_UART_Receive:00000000 $t
     /tmp/cc9Y1vpF.s:6742   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/cc9Y1vpF.s:6967   .text.UART_CheckIdleState:00000000 $t
     /tmp/cc9Y1vpF.s:6972   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
     /tmp/cc9Y1vpF.s:7060   .text.HAL_UART_Init:00000000 $t
     /tmp/cc9Y1vpF.s:7065   .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/cc9Y1vpF.s:7154   .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/cc9Y1vpF.s:7159   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/cc9Y1vpF.s:7254   .text.HAL_LIN_Init:00000000 $t
     /tmp/cc9Y1vpF.s:7259   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
     /tmp/cc9Y1vpF.s:7386   .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/cc9Y1vpF.s:7391   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/cc9Y1vpF.s:7505   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
     /tmp/cc9Y1vpF.s:7510   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cc9Y1vpF.s:7587   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
     /tmp/cc9Y1vpF.s:7592   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cc9Y1vpF.s:7669   .text.UART_Start_Receive_IT:00000000 $t
     /tmp/cc9Y1vpF.s:7674   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
     /tmp/cc9Y1vpF.s:7896   .text.UART_Start_Receive_IT:000000d0 $d
     /tmp/cc9Y1vpF.s:7902   .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/cc9Y1vpF.s:7907   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/cc9Y1vpF.s:8017   .text.HAL_UART_Receive_IT:00000058 $d
     /tmp/cc9Y1vpF.s:8022   .text.UART_Start_Receive_DMA:00000000 $t
     /tmp/cc9Y1vpF.s:8027   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
     /tmp/cc9Y1vpF.s:8227   .text.UART_Start_Receive_DMA:000000a4 $d
     /tmp/cc9Y1vpF.s:8234   .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/cc9Y1vpF.s:8239   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/cc9Y1vpF.s:8349   .text.HAL_UART_Receive_DMA:00000058 $d
                     .debug_frame:00000010 $d
     /tmp/cc9Y1vpF.s:5738   .text.UART_SetConfig:0000009d $d
     /tmp/cc9Y1vpF.s:5738   .text.UART_SetConfig:0000009e $t
     /tmp/cc9Y1vpF.s:5875   .text.UART_SetConfig:00000149 $d
     /tmp/cc9Y1vpF.s:5875   .text.UART_SetConfig:0000014a $t
     /tmp/cc9Y1vpF.s:5967   .text.UART_SetConfig:000001c3 $d
     /tmp/cc9Y1vpF.s:5967   .text.UART_SetConfig:000001c4 $t
     /tmp/cc9Y1vpF.s:6060   .text.UART_SetConfig:0000022d $d
     /tmp/cc9Y1vpF.s:6060   .text.UART_SetConfig:0000022e $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
ARM GAS  /tmp/cc9Y1vpF.s 			page 270


__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
