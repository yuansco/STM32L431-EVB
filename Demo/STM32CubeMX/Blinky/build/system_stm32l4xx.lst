ARM GAS  /tmp/ccLH9gMd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"system_stm32l4xx.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.SystemInit,"ax",%progbits
  22              		.align	2
  23              		.global	SystemInit
  24              		.thumb
  25              		.thumb_func
  27              	SystemInit:
  28              	.LFB132:
  29              		.file 1 "Core/Src/system_stm32l4xx.c"
   1:Core/Src/system_stm32l4xx.c **** /**
   2:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:Core/Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32l4xx.c ****   *
   7:Core/Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32l4xx.c ****   *   user application:
   9:Core/Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:Core/Src/system_stm32l4xx.c ****   *
  13:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32l4xx.c ****   *
  17:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32l4xx.c ****   *
  21:Core/Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Core/Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:Core/Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32l4xx.c ****   *
  25:Core/Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  27:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  /tmp/ccLH9gMd.s 			page 2


  30:Core/Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
  31:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  32:Core/Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:Core/Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:Core/Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  66:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  67:Core/Src/system_stm32l4xx.c ****   * @attention
  68:Core/Src/system_stm32l4xx.c ****   *
  69:Core/Src/system_stm32l4xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  70:Core/Src/system_stm32l4xx.c ****   * All rights reserved.
  71:Core/Src/system_stm32l4xx.c ****   *
  72:Core/Src/system_stm32l4xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  73:Core/Src/system_stm32l4xx.c ****   * in the root directory of this software component.
  74:Core/Src/system_stm32l4xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  75:Core/Src/system_stm32l4xx.c ****   *
  76:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  77:Core/Src/system_stm32l4xx.c ****   */
  78:Core/Src/system_stm32l4xx.c **** 
  79:Core/Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  80:Core/Src/system_stm32l4xx.c ****   * @{
  81:Core/Src/system_stm32l4xx.c ****   */
  82:Core/Src/system_stm32l4xx.c **** 
  83:Core/Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
  84:Core/Src/system_stm32l4xx.c ****   * @{
  85:Core/Src/system_stm32l4xx.c ****   */
  86:Core/Src/system_stm32l4xx.c **** 
ARM GAS  /tmp/ccLH9gMd.s 			page 3


  87:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
  88:Core/Src/system_stm32l4xx.c ****   * @{
  89:Core/Src/system_stm32l4xx.c ****   */
  90:Core/Src/system_stm32l4xx.c **** 
  91:Core/Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
  92:Core/Src/system_stm32l4xx.c **** 
  93:Core/Src/system_stm32l4xx.c **** /**
  94:Core/Src/system_stm32l4xx.c ****   * @}
  95:Core/Src/system_stm32l4xx.c ****   */
  96:Core/Src/system_stm32l4xx.c **** 
  97:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
  98:Core/Src/system_stm32l4xx.c ****   * @{
  99:Core/Src/system_stm32l4xx.c ****   */
 100:Core/Src/system_stm32l4xx.c **** 
 101:Core/Src/system_stm32l4xx.c **** /**
 102:Core/Src/system_stm32l4xx.c ****   * @}
 103:Core/Src/system_stm32l4xx.c ****   */
 104:Core/Src/system_stm32l4xx.c **** 
 105:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 106:Core/Src/system_stm32l4xx.c ****   * @{
 107:Core/Src/system_stm32l4xx.c ****   */
 108:Core/Src/system_stm32l4xx.c **** 
 109:Core/Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
 110:Core/Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
 111:Core/Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
 112:Core/Src/system_stm32l4xx.c **** 
 113:Core/Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
 114:Core/Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 115:Core/Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 116:Core/Src/system_stm32l4xx.c **** 
 117:Core/Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 118:Core/Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 119:Core/Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 120:Core/Src/system_stm32l4xx.c **** 
 121:Core/Src/system_stm32l4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
 122:Core/Src/system_stm32l4xx.c ****          configuration. */
 123:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 124:Core/Src/system_stm32l4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 125:Core/Src/system_stm32l4xx.c ****      remap of boot address selected */
 126:Core/Src/system_stm32l4xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 127:Core/Src/system_stm32l4xx.c **** 
 128:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 129:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 130:Core/Src/system_stm32l4xx.c ****      in Sram else user remap will be done in Flash. */
 131:Core/Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 132:Core/Src/system_stm32l4xx.c **** 
 133:Core/Src/system_stm32l4xx.c **** #if defined(VECT_TAB_SRAM)
 134:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 135:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 136:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 137:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 138:Core/Src/system_stm32l4xx.c **** #else
 139:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 140:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 141:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 142:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 143:Core/Src/system_stm32l4xx.c **** #endif /* VECT_TAB_SRAM */
ARM GAS  /tmp/ccLH9gMd.s 			page 4


 144:Core/Src/system_stm32l4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 145:Core/Src/system_stm32l4xx.c **** 
 146:Core/Src/system_stm32l4xx.c **** /******************************************************************************/
 147:Core/Src/system_stm32l4xx.c **** /**
 148:Core/Src/system_stm32l4xx.c ****   * @}
 149:Core/Src/system_stm32l4xx.c ****   */
 150:Core/Src/system_stm32l4xx.c **** 
 151:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 152:Core/Src/system_stm32l4xx.c ****   * @{
 153:Core/Src/system_stm32l4xx.c ****   */
 154:Core/Src/system_stm32l4xx.c **** 
 155:Core/Src/system_stm32l4xx.c **** /**
 156:Core/Src/system_stm32l4xx.c ****   * @}
 157:Core/Src/system_stm32l4xx.c ****   */
 158:Core/Src/system_stm32l4xx.c **** 
 159:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 160:Core/Src/system_stm32l4xx.c ****   * @{
 161:Core/Src/system_stm32l4xx.c ****   */
 162:Core/Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 163:Core/Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 164:Core/Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 165:Core/Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 166:Core/Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 167:Core/Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 168:Core/Src/system_stm32l4xx.c ****                variable is updated automatically.
 169:Core/Src/system_stm32l4xx.c ****   */
 170:Core/Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 171:Core/Src/system_stm32l4xx.c **** 
 172:Core/Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 173:Core/Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 174:Core/Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 175:Core/Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 176:Core/Src/system_stm32l4xx.c **** /**
 177:Core/Src/system_stm32l4xx.c ****   * @}
 178:Core/Src/system_stm32l4xx.c ****   */
 179:Core/Src/system_stm32l4xx.c **** 
 180:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 181:Core/Src/system_stm32l4xx.c ****   * @{
 182:Core/Src/system_stm32l4xx.c ****   */
 183:Core/Src/system_stm32l4xx.c **** 
 184:Core/Src/system_stm32l4xx.c **** /**
 185:Core/Src/system_stm32l4xx.c ****   * @}
 186:Core/Src/system_stm32l4xx.c ****   */
 187:Core/Src/system_stm32l4xx.c **** 
 188:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 189:Core/Src/system_stm32l4xx.c ****   * @{
 190:Core/Src/system_stm32l4xx.c ****   */
 191:Core/Src/system_stm32l4xx.c **** 
 192:Core/Src/system_stm32l4xx.c **** /**
 193:Core/Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 194:Core/Src/system_stm32l4xx.c ****   * @retval None
 195:Core/Src/system_stm32l4xx.c ****   */
 196:Core/Src/system_stm32l4xx.c **** 
 197:Core/Src/system_stm32l4xx.c **** void SystemInit(void)
 198:Core/Src/system_stm32l4xx.c **** {
  30              		.loc 1 198 0
  31              		.cfi_startproc
ARM GAS  /tmp/ccLH9gMd.s 			page 5


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 199:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 200:Core/Src/system_stm32l4xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 201:Core/Src/system_stm32l4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 202:Core/Src/system_stm32l4xx.c **** #endif
 203:Core/Src/system_stm32l4xx.c **** 
 204:Core/Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 205:Core/Src/system_stm32l4xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 206:Core/Src/system_stm32l4xx.c ****   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  35              		.loc 1 206 0
  36 0000 034A     		ldr	r2, .L2
  37 0002 D2F88830 		ldr	r3, [r2, #136]
  38 0006 43F47003 		orr	r3, r3, #15728640
  39 000a C2F88830 		str	r3, [r2, #136]
  40 000e 7047     		bx	lr
  41              	.L3:
  42              		.align	2
  43              	.L2:
  44 0010 00ED00E0 		.word	-536810240
  45              		.cfi_endproc
  46              	.LFE132:
  48              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  49              		.align	2
  50              		.global	SystemCoreClockUpdate
  51              		.thumb
  52              		.thumb_func
  54              	SystemCoreClockUpdate:
  55              	.LFB133:
 207:Core/Src/system_stm32l4xx.c **** #endif
 208:Core/Src/system_stm32l4xx.c **** }
 209:Core/Src/system_stm32l4xx.c **** 
 210:Core/Src/system_stm32l4xx.c **** /**
 211:Core/Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 212:Core/Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 213:Core/Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 214:Core/Src/system_stm32l4xx.c ****   *         other parameters.
 215:Core/Src/system_stm32l4xx.c ****   *
 216:Core/Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 217:Core/Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 218:Core/Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 219:Core/Src/system_stm32l4xx.c ****   *
 220:Core/Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 221:Core/Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 222:Core/Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 223:Core/Src/system_stm32l4xx.c ****   *
 224:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 225:Core/Src/system_stm32l4xx.c ****   *
 226:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 227:Core/Src/system_stm32l4xx.c ****   *
 228:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 229:Core/Src/system_stm32l4xx.c ****   *
 230:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 231:Core/Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 232:Core/Src/system_stm32l4xx.c ****   *
 233:Core/Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
ARM GAS  /tmp/ccLH9gMd.s 			page 6


 234:Core/Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 235:Core/Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 236:Core/Src/system_stm32l4xx.c ****   *
 237:Core/Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 238:Core/Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 239:Core/Src/system_stm32l4xx.c ****   *              in voltage and temperature.
 240:Core/Src/system_stm32l4xx.c ****   *
 241:Core/Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 242:Core/Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 243:Core/Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 244:Core/Src/system_stm32l4xx.c ****   *              have wrong result.
 245:Core/Src/system_stm32l4xx.c ****   *
 246:Core/Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 247:Core/Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 248:Core/Src/system_stm32l4xx.c ****   *
 249:Core/Src/system_stm32l4xx.c ****   * @retval None
 250:Core/Src/system_stm32l4xx.c ****   */
 251:Core/Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 252:Core/Src/system_stm32l4xx.c **** {
  56              		.loc 1 252 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 253:Core/Src/system_stm32l4xx.c ****   uint32_t tmp, msirange, pllvco, pllsource, pllm, pllr;
 254:Core/Src/system_stm32l4xx.c **** 
 255:Core/Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 256:Core/Src/system_stm32l4xx.c ****   if ((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
  61              		.loc 1 256 0
  62 0000 2F4B     		ldr	r3, .L19
  63 0002 1B68     		ldr	r3, [r3]
  64 0004 13F0080F 		tst	r3, #8
  65 0008 05D1     		bne	.L5
 257:Core/Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 258:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
  66              		.loc 1 258 0
  67 000a 2D4B     		ldr	r3, .L19
  68 000c D3F89430 		ldr	r3, [r3, #148]
  69 0010 C3F30323 		ubfx	r3, r3, #8, #4
  70              	.LVL0:
  71 0014 03E0     		b	.L6
  72              	.LVL1:
  73              	.L5:
 259:Core/Src/system_stm32l4xx.c ****   }
 260:Core/Src/system_stm32l4xx.c ****   else
 261:Core/Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
 262:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
  74              		.loc 1 262 0
  75 0016 2A4B     		ldr	r3, .L19
  76 0018 1B68     		ldr	r3, [r3]
  77 001a C3F30313 		ubfx	r3, r3, #4, #4
  78              	.LVL2:
  79              	.L6:
 263:Core/Src/system_stm32l4xx.c ****   }
 264:Core/Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 265:Core/Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
  80              		.loc 1 265 0
ARM GAS  /tmp/ccLH9gMd.s 			page 7


  81 001e 294A     		ldr	r2, .L19+4
  82 0020 52F82320 		ldr	r2, [r2, r3, lsl #2]
  83              	.LVL3:
 266:Core/Src/system_stm32l4xx.c **** 
 267:Core/Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 268:Core/Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  84              		.loc 1 268 0
  85 0024 264B     		ldr	r3, .L19
  86 0026 9B68     		ldr	r3, [r3, #8]
  87 0028 03F00C03 		and	r3, r3, #12
  88 002c 0C2B     		cmp	r3, #12
  89 002e 3AD8     		bhi	.L7
  90 0030 DFE803F0 		tbb	[pc, r3]
  91              	.L9:
  92 0034 07       		.byte	(.L8-.L9)/2
  93 0035 39       		.byte	(.L7-.L9)/2
  94 0036 39       		.byte	(.L7-.L9)/2
  95 0037 39       		.byte	(.L7-.L9)/2
  96 0038 0A       		.byte	(.L10-.L9)/2
  97 0039 39       		.byte	(.L7-.L9)/2
  98 003a 39       		.byte	(.L7-.L9)/2
  99 003b 39       		.byte	(.L7-.L9)/2
 100 003c 0E       		.byte	(.L11-.L9)/2
 101 003d 39       		.byte	(.L7-.L9)/2
 102 003e 39       		.byte	(.L7-.L9)/2
 103 003f 39       		.byte	(.L7-.L9)/2
 104 0040 12       		.byte	(.L12-.L9)/2
 105 0041 00       		.p2align 1
 106              	.L8:
 269:Core/Src/system_stm32l4xx.c ****   {
 270:Core/Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 271:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 107              		.loc 1 271 0
 108 0042 214B     		ldr	r3, .L19+8
 109 0044 1A60     		str	r2, [r3]
 272:Core/Src/system_stm32l4xx.c ****       break;
 110              		.loc 1 272 0
 111 0046 30E0     		b	.L13
 112              	.L10:
 273:Core/Src/system_stm32l4xx.c **** 
 274:Core/Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 275:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 113              		.loc 1 275 0
 114 0048 204A     		ldr	r2, .L19+12
 115              	.LVL4:
 116 004a 1F4B     		ldr	r3, .L19+8
 117 004c 1A60     		str	r2, [r3]
 276:Core/Src/system_stm32l4xx.c ****       break;
 118              		.loc 1 276 0
 119 004e 2CE0     		b	.L13
 120              	.LVL5:
 121              	.L11:
 277:Core/Src/system_stm32l4xx.c **** 
 278:Core/Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
 279:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 122              		.loc 1 279 0
 123 0050 1F4A     		ldr	r2, .L19+16
ARM GAS  /tmp/ccLH9gMd.s 			page 8


 124              	.LVL6:
 125 0052 1D4B     		ldr	r3, .L19+8
 126 0054 1A60     		str	r2, [r3]
 280:Core/Src/system_stm32l4xx.c ****       break;
 127              		.loc 1 280 0
 128 0056 28E0     		b	.L13
 129              	.LVL7:
 130              	.L12:
 281:Core/Src/system_stm32l4xx.c **** 
 282:Core/Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 283:Core/Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 284:Core/Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 285:Core/Src/system_stm32l4xx.c ****          */
 286:Core/Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 131              		.loc 1 286 0
 132 0058 1949     		ldr	r1, .L19
 133 005a CB68     		ldr	r3, [r1, #12]
 134 005c 03F00303 		and	r3, r3, #3
 135              	.LVL8:
 287:Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 136              		.loc 1 287 0
 137 0060 C968     		ldr	r1, [r1, #12]
 138 0062 C1F30211 		ubfx	r1, r1, #4, #3
 139 0066 0131     		adds	r1, r1, #1
 140              	.LVL9:
 288:Core/Src/system_stm32l4xx.c **** 
 289:Core/Src/system_stm32l4xx.c ****       switch (pllsource)
 141              		.loc 1 289 0
 142 0068 022B     		cmp	r3, #2
 143 006a 02D0     		beq	.L15
 144 006c 032B     		cmp	r3, #3
 145 006e 04D0     		beq	.L16
 146 0070 07E0     		b	.L18
 147              	.L15:
 290:Core/Src/system_stm32l4xx.c ****       {
 291:Core/Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 292:Core/Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 148              		.loc 1 292 0
 149 0072 164A     		ldr	r2, .L19+12
 150              	.LVL10:
 151 0074 B2FBF1F2 		udiv	r2, r2, r1
 152              	.LVL11:
 293:Core/Src/system_stm32l4xx.c ****           break;
 153              		.loc 1 293 0
 154 0078 05E0     		b	.L17
 155              	.LVL12:
 156              	.L16:
 294:Core/Src/system_stm32l4xx.c **** 
 295:Core/Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 296:Core/Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 157              		.loc 1 296 0
 158 007a 154A     		ldr	r2, .L19+16
 159              	.LVL13:
 160 007c B2FBF1F2 		udiv	r2, r2, r1
 161              	.LVL14:
 297:Core/Src/system_stm32l4xx.c ****           break;
 162              		.loc 1 297 0
ARM GAS  /tmp/ccLH9gMd.s 			page 9


 163 0080 01E0     		b	.L17
 164              	.LVL15:
 165              	.L18:
 298:Core/Src/system_stm32l4xx.c **** 
 299:Core/Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 300:Core/Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
 166              		.loc 1 300 0
 167 0082 B2FBF1F2 		udiv	r2, r2, r1
 168              	.LVL16:
 169              	.L17:
 301:Core/Src/system_stm32l4xx.c ****           break;
 302:Core/Src/system_stm32l4xx.c ****       }
 303:Core/Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 170              		.loc 1 303 0
 171 0086 0E49     		ldr	r1, .L19
 172              	.LVL17:
 173 0088 CB68     		ldr	r3, [r1, #12]
 174              	.LVL18:
 175 008a C3F30623 		ubfx	r3, r3, #8, #7
 176 008e 03FB02F2 		mul	r2, r3, r2
 177              	.LVL19:
 304:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 178              		.loc 1 304 0
 179 0092 CB68     		ldr	r3, [r1, #12]
 180 0094 C3F34163 		ubfx	r3, r3, #25, #2
 181 0098 0133     		adds	r3, r3, #1
 182 009a 5B00     		lsls	r3, r3, #1
 183              	.LVL20:
 305:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 184              		.loc 1 305 0
 185 009c B2FBF3F3 		udiv	r3, r2, r3
 186              	.LVL21:
 187 00a0 094A     		ldr	r2, .L19+8
 188              	.LVL22:
 189 00a2 1360     		str	r3, [r2]
 306:Core/Src/system_stm32l4xx.c ****       break;
 190              		.loc 1 306 0
 191 00a4 01E0     		b	.L13
 192              	.LVL23:
 193              	.L7:
 307:Core/Src/system_stm32l4xx.c **** 
 308:Core/Src/system_stm32l4xx.c ****     default:
 309:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 194              		.loc 1 309 0
 195 00a6 084B     		ldr	r3, .L19+8
 196 00a8 1A60     		str	r2, [r3]
 197              	.LVL24:
 198              	.L13:
 310:Core/Src/system_stm32l4xx.c ****       break;
 311:Core/Src/system_stm32l4xx.c ****   }
 312:Core/Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 313:Core/Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 314:Core/Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 199              		.loc 1 314 0
 200 00aa 054B     		ldr	r3, .L19
 201 00ac 9B68     		ldr	r3, [r3, #8]
 202 00ae C3F30313 		ubfx	r3, r3, #4, #4
ARM GAS  /tmp/ccLH9gMd.s 			page 10


 203 00b2 084A     		ldr	r2, .L19+20
 204 00b4 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 205              	.LVL25:
 315:Core/Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 316:Core/Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 206              		.loc 1 316 0
 207 00b6 044A     		ldr	r2, .L19+8
 208 00b8 1368     		ldr	r3, [r2]
 209 00ba CB40     		lsrs	r3, r3, r1
 210 00bc 1360     		str	r3, [r2]
 211 00be 7047     		bx	lr
 212              	.L20:
 213              		.align	2
 214              	.L19:
 215 00c0 00100240 		.word	1073876992
 216 00c4 00000000 		.word	.LANCHOR0
 217 00c8 00000000 		.word	.LANCHOR1
 218 00cc 0024F400 		.word	16000000
 219 00d0 00127A00 		.word	8000000
 220 00d4 00000000 		.word	.LANCHOR2
 221              		.cfi_endproc
 222              	.LFE133:
 224              		.global	MSIRangeTable
 225              		.global	APBPrescTable
 226              		.global	AHBPrescTable
 227              		.global	SystemCoreClock
 228              		.section	.rodata.AHBPrescTable,"a",%progbits
 229              		.align	2
 230              		.set	.LANCHOR2,. + 0
 233              	AHBPrescTable:
 234 0000 00       		.byte	0
 235 0001 00       		.byte	0
 236 0002 00       		.byte	0
 237 0003 00       		.byte	0
 238 0004 00       		.byte	0
 239 0005 00       		.byte	0
 240 0006 00       		.byte	0
 241 0007 00       		.byte	0
 242 0008 01       		.byte	1
 243 0009 02       		.byte	2
 244 000a 03       		.byte	3
 245 000b 04       		.byte	4
 246 000c 06       		.byte	6
 247 000d 07       		.byte	7
 248 000e 08       		.byte	8
 249 000f 09       		.byte	9
 250              		.section	.rodata.APBPrescTable,"a",%progbits
 251              		.align	2
 254              	APBPrescTable:
 255 0000 00       		.byte	0
 256 0001 00       		.byte	0
 257 0002 00       		.byte	0
 258 0003 00       		.byte	0
 259 0004 01       		.byte	1
 260 0005 02       		.byte	2
 261 0006 03       		.byte	3
 262 0007 04       		.byte	4
ARM GAS  /tmp/ccLH9gMd.s 			page 11


 263              		.section	.data.SystemCoreClock,"aw",%progbits
 264              		.align	2
 265              		.set	.LANCHOR1,. + 0
 268              	SystemCoreClock:
 269 0000 00093D00 		.word	4000000
 270              		.section	.rodata.MSIRangeTable,"a",%progbits
 271              		.align	2
 272              		.set	.LANCHOR0,. + 0
 275              	MSIRangeTable:
 276 0000 A0860100 		.word	100000
 277 0004 400D0300 		.word	200000
 278 0008 801A0600 		.word	400000
 279 000c 00350C00 		.word	800000
 280 0010 40420F00 		.word	1000000
 281 0014 80841E00 		.word	2000000
 282 0018 00093D00 		.word	4000000
 283 001c 00127A00 		.word	8000000
 284 0020 0024F400 		.word	16000000
 285 0024 00366E01 		.word	24000000
 286 0028 0048E801 		.word	32000000
 287 002c 006CDC02 		.word	48000000
 288              		.text
 289              	.Letext0:
 290              		.file 2 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 291              		.file 3 "/home/yuan/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 292              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 293              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 294              		.file 6 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  /tmp/ccLH9gMd.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l4xx.c
     /tmp/ccLH9gMd.s:22     .text.SystemInit:00000000 $t
     /tmp/ccLH9gMd.s:27     .text.SystemInit:00000000 SystemInit
     /tmp/ccLH9gMd.s:44     .text.SystemInit:00000010 $d
     /tmp/ccLH9gMd.s:49     .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccLH9gMd.s:54     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccLH9gMd.s:92     .text.SystemCoreClockUpdate:00000034 $d
     /tmp/ccLH9gMd.s:215    .text.SystemCoreClockUpdate:000000c0 $d
     /tmp/ccLH9gMd.s:275    .rodata.MSIRangeTable:00000000 MSIRangeTable
     /tmp/ccLH9gMd.s:254    .rodata.APBPrescTable:00000000 APBPrescTable
     /tmp/ccLH9gMd.s:233    .rodata.AHBPrescTable:00000000 AHBPrescTable
     /tmp/ccLH9gMd.s:268    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccLH9gMd.s:229    .rodata.AHBPrescTable:00000000 $d
     /tmp/ccLH9gMd.s:251    .rodata.APBPrescTable:00000000 $d
     /tmp/ccLH9gMd.s:264    .data.SystemCoreClock:00000000 $d
     /tmp/ccLH9gMd.s:271    .rodata.MSIRangeTable:00000000 $d
                     .debug_frame:00000010 $d
     /tmp/ccLH9gMd.s:105    .text.SystemCoreClockUpdate:00000041 $d
     /tmp/ccLH9gMd.s:105    .text.SystemCoreClockUpdate:00000042 $t

NO UNDEFINED SYMBOLS
